{
	"info": {
		"_postman_id": "65df9ce8-b487-4618-8784-3caaf64e10c1",
		"name": "Visualizing Postmanauts Across the Globe",
		"description": "Postman is global company that has [20 million users](https://blog.postman.com/celebrating-20-million-postman-users/) and Postmanauts (postman employees) that live and work world wide 🌎🌍🌏.\n\nThe inspiration behind this collection is to use Postman to visualize Postmanauts from the DevRel team on a global map.\n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1650489768281_Screen+Shot+2022-04-20+at+4.36.55+PM.png)\n\nThe Postman DevRel team members that are mapped are : [@iandouglas736](https://twitter.com/iandouglas736),[@poojamakes](https://twitter.com/poojamakes) [@DevRelSean](https://twitter.com/DevRelSean),[@arlemi](https://twitter.com/arlemi),[@jansche](https://twitter.com/jansche),[@PetuniaGray](https://twitter.com/PetuniaGray),[@DevRelKev](https://twitter.com/DevRelKev)  \nGive us all a follow or or use this collection to find other twitter users in your network to visualize!\n\n## API's Used in this Collection:\n\n*   [Twitter User Lookup API](https://www.postman.com/twitter/workspace/twitter-s-public-workspace/folder/9956214-7358bba6-04d0-4edf-adda-309a900e0569?ctx=documentation)\n*   [Position Stack API](https://positionstack.com/)\n*   [OpenWeather API](https://openweathermap.org/)\n    \n\n## Overview:\n\nThis collection is created to show how one can use Postman to visualize Twitter users around the world. It uses the [Twitter API- user by username](https://www.postman.com/twitter/workspace/twitter-s-public-workspace/documentation/9956214-784efcda-ed4c-4491-a4c0-a26470a67400?entity=request-9956214-288337e6-91e5-4297-bde2-cae96a549732) to get each users location, then uses Position Stack API to get longitude and latitude of their location to map it onto a [JavaScript D3 visualization map framework](https://d3js.org/) using the [Visualizer API](https://learning.postman.com/docs/sending-requests/visualizer/#visualizer-api). The OpenWeather API is used to get weather information based on longitude and latitude.\n\nThere are thee folders in this collection. Each of these three folders visualize twitter users and their weather data globally however, each folder shows how you can optimize your logic by using [pre-request](https://learning.postman.com/docs/writing-scripts/pre-request-scripts/) , [test scripts](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/) and [request workflows](https://learning.postman.com/docs/running-collections/building-workflows/) to achieve similar results. With Postman, there are multiple ways to achieve similar results. The whole idea behind this collection is to show the various ways developers can use Postman to work with multiple APIs and build Visualizations\n\n## Workflow:\n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1651023817455_GET+Request2x+1.png)\n\n**Variable with Twitter Usernames** → **Twitter API** → Output: Object with Twitter Names and Twitter Location Data → **PositionStack API** → *Convert Location to Longitude & Latitude* → Output: Object with Longitude and Latitude → **OpenWeather API** → *Use Longitude & Latitude to get Weather Data* → Output: Object with Weather → **Postman Echo API** → Output: Name, Location, Longitude, Latitude & Weather for each user to visualize\n\n## Quickstart:\n\nTo get started with this collection\n\n1.  Fork this collection into your own workspace.\n2.  Get [Twitter bearer token](https://developer.twitter.com/en/portal/projects-and-apps) and add `bearer_token` to current value in collection variable\n3.  Get [Position Stack API key](https://positionstack.com/product) and add `api-access-key` to current value in the collection variable\n4.  Get [Open Weather API key](https://home.openweathermap.org/) and add `weather_api_key` to current value in the collection variable\n5.  Use collection runner to run through **Individual Postman Requests** and capture all objects as environment variable for each user.\n6.  Check out visualization in `Postmanauts - Visualize` request in all folders\n    \n\n## Detailed Steps & Requirements\n\n**Fork this workspace**  \nIf you want to work with this collection yourself, click the \"Fork\" button on the top right section of Postman and select your own workspace as the destination for the fork. This will allow you to customize the requests and run through the collection yourself.\n\n**Twitter requirements**  \nYou will need to obtain a bearer token from Twitter. Go to your [developer dashboard](https://developer.twitter.com/en/portal/projects-and-apps), and find the Projects & Apps section. If you haven't created a new App/Project, you must do that first. Once that is complete, copy the bearer token value and paste it into the collection variable.\n\nIn this collection we will be using :\n\n*   [Twitter User by Username](https://www.postman.com/twitter/workspace/twitter-s-public-workspace/request/9956214-288337e6-91e5-4297-bde2-cae96a549732) → This endpoint returns details about a single user by username.\n*   [Twitter Users by Username](https://www.postman.com/twitter/workspace/twitter-s-public-workspace/request/9956214-f116b1dc-0f6a-4b0b-8433-8b344654e67e) → This endpoint returns details about up to 100 users specified by username.\n    \n\nWe will use both these endpoints to capture location data from out Twitter Users.\n\n> Note : Location information can only be captured if the twitter user has enabled it on their twitter profiles.\n\n**Position Stack API requirements**  \nPosition Stack API provides accurate forward & reverse geocoding covering more than 2 billion places and addresses worldwide. You will need to obtain an API key from PositionStack by clicking on [Get Free API Key](https://positionstack.com/product) and select free option for personal use. Create a Position Stack account and copy the API key and to use in the collection variable `api-access-key` .\n\nIn this collection we will be using the [Forward Geocoding](https://positionstack.com/documentation) endpoint. To make a forward geocoding request, use the API's `forward` endpoint and specify your query using the `query` parameter.\n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1650651451486_Screen+Shot+2022-04-22+at+2.17.25+PM.png)\n\n| Object | Description |\n| --- | --- |\n| access_key | **\\[Required\\]** Your API access key, which can be found in your [acccount dashboard](https://positionstack.com/dashboard). |\n| query | **\\[Required\\]** Specify your query as a free-text address, place name or using any other common text-based location identifier (e.g. postal code, city name, region name). |\n\n**Open Weather API key requirements**  \nSign up for [Open Weather API](https://home.openweathermap.org/users/sign_up) and copy the API key and to use in the collection variable `weather_api_key` . In this collection we will be using the the [Current Weather Data API](https://openweathermap.org/current).  \nThis API allows you to get current weather data for any location on Earth including over 200,000 cities by using geographical coordinates (lat, lon). We will be using latitude and longitude from the Position Stack API to get the weather from each location.\n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1650653629214_Screen+Shot+2022-04-22+at+2.53.45+PM.png)\n\n| Object | Description |\n| --- | --- |\n| lat, lon | **\\[Required\\]**Geographical coordinates (latitude, longitude). If you need the geocoder to automatic convert city names and zip-codes to geo coordinates and the other way around, please use our [Geocoding API](https://openweathermap.org/api/geocoding-api). |\n| appid | **\\[Required\\]**Your unique API key (you can always find it on your account page under the [\"API key\" tab](https://home.openweathermap.org/api_keys)) |\n\n## Postmanauts Visualize\n\n[Visualization](https://learning.postman.com/docs/sending-requests/visualizer/) code added to the Tests for a request will render in the Visualize tab for the response body, alongside the Pretty, Raw, and Preview options. Postman provides a programmable way to visually represent your request responses.\n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1651000861879_Screen+Shot+2022-04-26+at+3.20.57+PM.png)\n\nIn this collection we will be using the a global density map allows us to visualize any form of quantitative variable, such as twitter user location against longitude and latitude coordinates.  \nOnce the object is built with name, location, longitude, latitude, and weather the [Postman Echo API Post](https://www.postman.com/postman/workspace/f21c2968-b83d-485e-9360-21fc4de72be3/documentation/631643-f695cab7-6878-eb55-7943-ad88e1ccfd65https://www.postman.com/postman/workspace/published-postman-templates/documentation/631643-f695cab7-6878-eb55-7943-ad88e1ccfd65?entity=request-631643-1eb1cf9d-2be7-4060-f554-73cd13940174) request transfers data to a server and elicit a response with the following data:\n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1651024962662_Screen+Shot+2022-04-26+at+10.02.38+PM.png)\n\nTo visualize your response data, add code to the Tests script for the request. The `pm.visualizer.set()` method will apply your visualizer code to the data and present it in the Visualize tab when the request runs. The template is made with HTML, CSS, and JavaScript using the D3 library.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20042574"
	},
	"item": [
		{
			"name": "Individual Postman Requests",
			"item": [
				{
					"name": "Twitter User by Username- pooja",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"// building users object ",
									"let obj= { ",
									"     name : response.data.name,",
									"     location:response.data.location,",
									"     latitude: null,",
									"     longitude: null",
									"}",
									"",
									"pm.environment.set(\"pooja-object\", JSON.stringify(obj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes location which is \"+ response.data.location, function () {",
									"    pm.expect(pm.response.text()).to.include(\"location\");  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
							"protocol": "https",
							"host": [
								"api",
								"twitter",
								"com"
							],
							"path": [
								"2",
								"users",
								"by",
								"username",
								":username"
							],
							"query": [
								{
									"key": "user.fields",
									"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
								},
								{
									"key": "expansions",
									"value": "",
									"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
									"disabled": true
								},
								{
									"key": "tweet.fields",
									"value": "",
									"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "poojamakes"
								}
							]
						},
						"description": "This endpoint returns details about a user by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username) for this endpoint."
					},
					"response": [
						{
							"name": "200 Success - User Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDec"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "184"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:32:08 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "4"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "207"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with username: [TwitterDec].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"username\",\n            \"value\": \"TwitterDec\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
						},
						{
							"name": "200 Success - Request Fields for User and Expanded Pinned Tweet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1012"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:29:38 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "8"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "253"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"created_at\": \"2013-12-14T04:35:55.000Z\",\n        \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n        \"entities\": {\n            \"url\": {\n                \"urls\": [\n                    {\n                        \"start\": 0,\n                        \"end\": 23,\n                        \"url\": \"https://t.co/3ZX3TNiZCY\",\n                        \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                        \"display_url\": \"developer.twitter.com/en/community\"\n                    }\n                ]\n            },\n            \"description\": {\n                \"hashtags\": [\n                    {\n                        \"start\": 23,\n                        \"end\": 30,\n                        \"tag\": \"DevRel\"\n                    },\n                    {\n                        \"start\": 113,\n                        \"end\": 130,\n                        \"tag\": \"BlackLivesMatter\"\n                    }\n                ]\n            }\n        },\n        \"id\": \"2244994945\",\n        \"location\": \"127.0.0.1\",\n        \"name\": \"Twitter Dev\",\n        \"pinned_tweet_id\": \"1255542774432063488\",\n        \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n        \"protected\": false,\n        \"url\": \"https://t.co/3ZX3TNiZCY\",\n        \"username\": \"TwitterDev\",\n        \"verified\": true\n    },\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "429 Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "46"
								},
								{
									"key": "content-type",
									"value": "text/plain;charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:18:23 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "0"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593185073"
								},
								{
									"key": "x-response-time",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "Rate limit exceeded\n"
						},
						{
							"name": "200 Success - Default Payload",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "83"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:31:35 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "6"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "37"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"2244994945\",\n        \"name\": \"Twitter Dev\",\n        \"username\": \"TwitterDev\"\n    }\n}"
						}
					]
				},
				{
					"name": "Twitter User by Username - jan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"// building users object ",
									"let obj= { ",
									"     name : response.data.name,",
									"     location:response.data.location,",
									"     latitude: null,",
									"     longitude: null",
									"}",
									"",
									"pm.environment.set(\"jan-object\", JSON.stringify(obj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes location which is \"+ response.data.location, function () {",
									"    pm.expect(pm.response.text()).to.include(\"location\");  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
							"protocol": "https",
							"host": [
								"api",
								"twitter",
								"com"
							],
							"path": [
								"2",
								"users",
								"by",
								"username",
								":username"
							],
							"query": [
								{
									"key": "user.fields",
									"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
								},
								{
									"key": "expansions",
									"value": "",
									"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
									"disabled": true
								},
								{
									"key": "tweet.fields",
									"value": "",
									"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "jansche"
								}
							]
						},
						"description": "This endpoint returns details about a user by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username) for this endpoint."
					},
					"response": [
						{
							"name": "200 Success - User Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDec"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "184"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:32:08 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "4"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "207"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with username: [TwitterDec].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"username\",\n            \"value\": \"TwitterDec\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
						},
						{
							"name": "200 Success - Request Fields for User and Expanded Pinned Tweet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1012"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:29:38 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "8"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "253"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"created_at\": \"2013-12-14T04:35:55.000Z\",\n        \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n        \"entities\": {\n            \"url\": {\n                \"urls\": [\n                    {\n                        \"start\": 0,\n                        \"end\": 23,\n                        \"url\": \"https://t.co/3ZX3TNiZCY\",\n                        \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                        \"display_url\": \"developer.twitter.com/en/community\"\n                    }\n                ]\n            },\n            \"description\": {\n                \"hashtags\": [\n                    {\n                        \"start\": 23,\n                        \"end\": 30,\n                        \"tag\": \"DevRel\"\n                    },\n                    {\n                        \"start\": 113,\n                        \"end\": 130,\n                        \"tag\": \"BlackLivesMatter\"\n                    }\n                ]\n            }\n        },\n        \"id\": \"2244994945\",\n        \"location\": \"127.0.0.1\",\n        \"name\": \"Twitter Dev\",\n        \"pinned_tweet_id\": \"1255542774432063488\",\n        \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n        \"protected\": false,\n        \"url\": \"https://t.co/3ZX3TNiZCY\",\n        \"username\": \"TwitterDev\",\n        \"verified\": true\n    },\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "429 Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "46"
								},
								{
									"key": "content-type",
									"value": "text/plain;charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:18:23 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "0"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593185073"
								},
								{
									"key": "x-response-time",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "Rate limit exceeded\n"
						},
						{
							"name": "200 Success - Default Payload",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "83"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:31:35 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "6"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "37"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"2244994945\",\n        \"name\": \"Twitter Dev\",\n        \"username\": \"TwitterDev\"\n    }\n}"
						}
					]
				},
				{
					"name": "Twitter User by Username  - arlemi",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"// building users object ",
									"let obj= { ",
									"     name : response.data.name,",
									"     location:response.data.location,",
									"     latitude: null,",
									"     longitude: null",
									"}",
									"",
									"pm.environment.set(\"arlemi-object\", JSON.stringify(obj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes location which is \"+ response.data.location, function () {",
									"    pm.expect(pm.response.text()).to.include(\"location\");  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
							"protocol": "https",
							"host": [
								"api",
								"twitter",
								"com"
							],
							"path": [
								"2",
								"users",
								"by",
								"username",
								":username"
							],
							"query": [
								{
									"key": "user.fields",
									"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
								},
								{
									"key": "expansions",
									"value": "",
									"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
									"disabled": true
								},
								{
									"key": "tweet.fields",
									"value": "",
									"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "arlemi"
								}
							]
						},
						"description": "This endpoint returns details about a user by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username) for this endpoint."
					},
					"response": [
						{
							"name": "200 Success - User Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDec"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "184"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:32:08 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "4"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "207"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with username: [TwitterDec].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"username\",\n            \"value\": \"TwitterDec\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
						},
						{
							"name": "200 Success - Request Fields for User and Expanded Pinned Tweet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1012"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:29:38 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "8"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "253"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"created_at\": \"2013-12-14T04:35:55.000Z\",\n        \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n        \"entities\": {\n            \"url\": {\n                \"urls\": [\n                    {\n                        \"start\": 0,\n                        \"end\": 23,\n                        \"url\": \"https://t.co/3ZX3TNiZCY\",\n                        \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                        \"display_url\": \"developer.twitter.com/en/community\"\n                    }\n                ]\n            },\n            \"description\": {\n                \"hashtags\": [\n                    {\n                        \"start\": 23,\n                        \"end\": 30,\n                        \"tag\": \"DevRel\"\n                    },\n                    {\n                        \"start\": 113,\n                        \"end\": 130,\n                        \"tag\": \"BlackLivesMatter\"\n                    }\n                ]\n            }\n        },\n        \"id\": \"2244994945\",\n        \"location\": \"127.0.0.1\",\n        \"name\": \"Twitter Dev\",\n        \"pinned_tweet_id\": \"1255542774432063488\",\n        \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n        \"protected\": false,\n        \"url\": \"https://t.co/3ZX3TNiZCY\",\n        \"username\": \"TwitterDev\",\n        \"verified\": true\n    },\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "429 Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "46"
								},
								{
									"key": "content-type",
									"value": "text/plain;charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:18:23 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "0"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593185073"
								},
								{
									"key": "x-response-time",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "Rate limit exceeded\n"
						},
						{
							"name": "200 Success - Default Payload",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "83"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:31:35 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "6"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "37"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"2244994945\",\n        \"name\": \"Twitter Dev\",\n        \"username\": \"TwitterDev\"\n    }\n}"
						}
					]
				},
				{
					"name": "Twitter User by Username  - ian",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"// building users object",
									"let obj= { ",
									"     name : response.data.name,",
									"     location:response.data.location,",
									"     latitude: null,",
									"     longitude: null",
									"}",
									"",
									"pm.environment.set(\"ian-object\", JSON.stringify(obj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes location which is \"+ response.data.location, function () {",
									"    pm.expect(pm.response.text()).to.include(\"location\");  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
							"protocol": "https",
							"host": [
								"api",
								"twitter",
								"com"
							],
							"path": [
								"2",
								"users",
								"by",
								"username",
								":username"
							],
							"query": [
								{
									"key": "user.fields",
									"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
								},
								{
									"key": "expansions",
									"value": "",
									"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
									"disabled": true
								},
								{
									"key": "tweet.fields",
									"value": "",
									"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "iandouglas736"
								}
							]
						},
						"description": "This endpoint returns details about a user by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username) for this endpoint."
					},
					"response": [
						{
							"name": "200 Success - User Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDec"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "184"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:32:08 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "4"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "207"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with username: [TwitterDec].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"username\",\n            \"value\": \"TwitterDec\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
						},
						{
							"name": "200 Success - Request Fields for User and Expanded Pinned Tweet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1012"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:29:38 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "8"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "253"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"created_at\": \"2013-12-14T04:35:55.000Z\",\n        \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n        \"entities\": {\n            \"url\": {\n                \"urls\": [\n                    {\n                        \"start\": 0,\n                        \"end\": 23,\n                        \"url\": \"https://t.co/3ZX3TNiZCY\",\n                        \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                        \"display_url\": \"developer.twitter.com/en/community\"\n                    }\n                ]\n            },\n            \"description\": {\n                \"hashtags\": [\n                    {\n                        \"start\": 23,\n                        \"end\": 30,\n                        \"tag\": \"DevRel\"\n                    },\n                    {\n                        \"start\": 113,\n                        \"end\": 130,\n                        \"tag\": \"BlackLivesMatter\"\n                    }\n                ]\n            }\n        },\n        \"id\": \"2244994945\",\n        \"location\": \"127.0.0.1\",\n        \"name\": \"Twitter Dev\",\n        \"pinned_tweet_id\": \"1255542774432063488\",\n        \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n        \"protected\": false,\n        \"url\": \"https://t.co/3ZX3TNiZCY\",\n        \"username\": \"TwitterDev\",\n        \"verified\": true\n    },\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "429 Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "46"
								},
								{
									"key": "content-type",
									"value": "text/plain;charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:18:23 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "0"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593185073"
								},
								{
									"key": "x-response-time",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "Rate limit exceeded\n"
						},
						{
							"name": "200 Success - Default Payload",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "83"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:31:35 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "6"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "37"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"2244994945\",\n        \"name\": \"Twitter Dev\",\n        \"username\": \"TwitterDev\"\n    }\n}"
						}
					]
				},
				{
					"name": "Twitter User by Username  - joyce",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"// building users object",
									"let obj= { ",
									"     name : response.data.name,",
									"     location:response.data.location,",
									"     latitude: null,",
									"     longitude: null",
									"}",
									"",
									"pm.environment.set(\"joyce-object\", JSON.stringify(obj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes location which is \"+ response.data.location, function () {",
									"    pm.expect(pm.response.text()).to.include(\"location\");  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
							"protocol": "https",
							"host": [
								"api",
								"twitter",
								"com"
							],
							"path": [
								"2",
								"users",
								"by",
								"username",
								":username"
							],
							"query": [
								{
									"key": "user.fields",
									"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
								},
								{
									"key": "expansions",
									"value": "",
									"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
									"disabled": true
								},
								{
									"key": "tweet.fields",
									"value": "",
									"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "PetuniaGray",
									"description": "twitter username"
								}
							]
						},
						"description": "This endpoint returns details about a user by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username) for this endpoint."
					},
					"response": [
						{
							"name": "200 Success - User Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDec"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "184"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:32:08 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "4"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "207"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with username: [TwitterDec].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"username\",\n            \"value\": \"TwitterDec\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
						},
						{
							"name": "200 Success - Request Fields for User and Expanded Pinned Tweet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1012"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:29:38 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "8"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "253"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"created_at\": \"2013-12-14T04:35:55.000Z\",\n        \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n        \"entities\": {\n            \"url\": {\n                \"urls\": [\n                    {\n                        \"start\": 0,\n                        \"end\": 23,\n                        \"url\": \"https://t.co/3ZX3TNiZCY\",\n                        \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                        \"display_url\": \"developer.twitter.com/en/community\"\n                    }\n                ]\n            },\n            \"description\": {\n                \"hashtags\": [\n                    {\n                        \"start\": 23,\n                        \"end\": 30,\n                        \"tag\": \"DevRel\"\n                    },\n                    {\n                        \"start\": 113,\n                        \"end\": 130,\n                        \"tag\": \"BlackLivesMatter\"\n                    }\n                ]\n            }\n        },\n        \"id\": \"2244994945\",\n        \"location\": \"127.0.0.1\",\n        \"name\": \"Twitter Dev\",\n        \"pinned_tweet_id\": \"1255542774432063488\",\n        \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n        \"protected\": false,\n        \"url\": \"https://t.co/3ZX3TNiZCY\",\n        \"username\": \"TwitterDev\",\n        \"verified\": true\n    },\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "429 Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "46"
								},
								{
									"key": "content-type",
									"value": "text/plain;charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:18:23 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "0"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593185073"
								},
								{
									"key": "x-response-time",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "Rate limit exceeded\n"
						},
						{
							"name": "200 Success - Default Payload",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "83"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:31:35 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "6"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "37"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"2244994945\",\n        \"name\": \"Twitter Dev\",\n        \"username\": \"TwitterDev\"\n    }\n}"
						}
					]
				},
				{
					"name": "Twitter User by Username  - sean",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"// building users object",
									"let obj= { ",
									"     name : response.data.name,",
									"     location:response.data.location,",
									"     latitude: null,",
									"     longitude: null",
									"}",
									"",
									"pm.environment.set(\"sean-object\", JSON.stringify(obj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes location which is \"+ response.data.location, function () {",
									"    pm.expect(pm.response.text()).to.include(\"location\");  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
							"protocol": "https",
							"host": [
								"api",
								"twitter",
								"com"
							],
							"path": [
								"2",
								"users",
								"by",
								"username",
								":username"
							],
							"query": [
								{
									"key": "user.fields",
									"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
								},
								{
									"key": "expansions",
									"value": "",
									"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
									"disabled": true
								},
								{
									"key": "tweet.fields",
									"value": "",
									"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "DevRelSean"
								}
							]
						},
						"description": "This endpoint returns details about a user by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username) for this endpoint."
					},
					"response": [
						{
							"name": "200 Success - User Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDec"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "184"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:32:08 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "4"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "207"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with username: [TwitterDec].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"username\",\n            \"value\": \"TwitterDec\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
						},
						{
							"name": "200 Success - Request Fields for User and Expanded Pinned Tweet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1012"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:29:38 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "8"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "253"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"created_at\": \"2013-12-14T04:35:55.000Z\",\n        \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n        \"entities\": {\n            \"url\": {\n                \"urls\": [\n                    {\n                        \"start\": 0,\n                        \"end\": 23,\n                        \"url\": \"https://t.co/3ZX3TNiZCY\",\n                        \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                        \"display_url\": \"developer.twitter.com/en/community\"\n                    }\n                ]\n            },\n            \"description\": {\n                \"hashtags\": [\n                    {\n                        \"start\": 23,\n                        \"end\": 30,\n                        \"tag\": \"DevRel\"\n                    },\n                    {\n                        \"start\": 113,\n                        \"end\": 130,\n                        \"tag\": \"BlackLivesMatter\"\n                    }\n                ]\n            }\n        },\n        \"id\": \"2244994945\",\n        \"location\": \"127.0.0.1\",\n        \"name\": \"Twitter Dev\",\n        \"pinned_tweet_id\": \"1255542774432063488\",\n        \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n        \"protected\": false,\n        \"url\": \"https://t.co/3ZX3TNiZCY\",\n        \"username\": \"TwitterDev\",\n        \"verified\": true\n    },\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "429 Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "46"
								},
								{
									"key": "content-type",
									"value": "text/plain;charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:18:23 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "0"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593185073"
								},
								{
									"key": "x-response-time",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "Rate limit exceeded\n"
						},
						{
							"name": "200 Success - Default Payload",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "83"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:31:35 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "6"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "37"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"2244994945\",\n        \"name\": \"Twitter Dev\",\n        \"username\": \"TwitterDev\"\n    }\n}"
						}
					]
				},
				{
					"name": "Twitter User by Username  - kevin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let response = pm.response.json();",
									"",
									"// building users object",
									"let obj= { ",
									"     name : response.data.name,",
									"     location:response.data.location,",
									"     latitude: null,",
									"     longitude: null",
									"}",
									"",
									"pm.environment.set(\"kevin-object\", JSON.stringify(obj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes location which is \"+ response.data.location, function () {",
									"    pm.expect(pm.response.text()).to.include(\"location\");  ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
							"protocol": "https",
							"host": [
								"api",
								"twitter",
								"com"
							],
							"path": [
								"2",
								"users",
								"by",
								"username",
								":username"
							],
							"query": [
								{
									"key": "user.fields",
									"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
								},
								{
									"key": "expansions",
									"value": "",
									"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
									"disabled": true
								},
								{
									"key": "tweet.fields",
									"value": "",
									"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "DevRelKev"
								}
							]
						},
						"description": "This endpoint returns details about a user by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username) for this endpoint."
					},
					"response": [
						{
							"name": "200 Success - User Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDec"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "184"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:32:08 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "4"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "207"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with username: [TwitterDec].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"username\",\n            \"value\": \"TwitterDec\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
						},
						{
							"name": "200 Success - Request Fields for User and Expanded Pinned Tweet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1012"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:29:38 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "8"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "253"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"created_at\": \"2013-12-14T04:35:55.000Z\",\n        \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n        \"entities\": {\n            \"url\": {\n                \"urls\": [\n                    {\n                        \"start\": 0,\n                        \"end\": 23,\n                        \"url\": \"https://t.co/3ZX3TNiZCY\",\n                        \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                        \"display_url\": \"developer.twitter.com/en/community\"\n                    }\n                ]\n            },\n            \"description\": {\n                \"hashtags\": [\n                    {\n                        \"start\": 23,\n                        \"end\": 30,\n                        \"tag\": \"DevRel\"\n                    },\n                    {\n                        \"start\": 113,\n                        \"end\": 130,\n                        \"tag\": \"BlackLivesMatter\"\n                    }\n                ]\n            }\n        },\n        \"id\": \"2244994945\",\n        \"location\": \"127.0.0.1\",\n        \"name\": \"Twitter Dev\",\n        \"pinned_tweet_id\": \"1255542774432063488\",\n        \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n        \"protected\": false,\n        \"url\": \"https://t.co/3ZX3TNiZCY\",\n        \"username\": \"TwitterDev\",\n        \"verified\": true\n    },\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "429 Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld"
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "46"
								},
								{
									"key": "content-type",
									"value": "text/plain;charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:18:23 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "0"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593185073"
								},
								{
									"key": "x-response-time",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "Rate limit exceeded\n"
						},
						{
							"name": "200 Success - Default Payload",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by/username/:username",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by",
										"username",
										":username"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "username",
											"value": "TwitterDev"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "83"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 15:31:35 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "bf6b8cccb0bc95bc56a50be4db9a2d09"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "6"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593186139"
								},
								{
									"key": "x-response-time",
									"value": "37"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"id\": \"2244994945\",\n        \"name\": \"Twitter Dev\",\n        \"username\": \"TwitterDev\"\n    }\n}"
						}
					]
				},
				{
					"name": "PositionStack API - Pooja's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataOut = pm.response.json().data[0];",
									"let lat = dataOut.latitude;",
									"let long = dataOut.longitude;",
									"",
									"//add long and lat from object",
									"var poojaObj = JSON.parse(pm.environment.get(\"pooja-object\"));",
									"poojaObj.latitude = lat",
									"poojaObj.longitude = long",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"pooja-object\", JSON.stringify(poojaObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes latitude which is \"+ lat, function () {",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");  ",
									"});",
									"",
									"pm.test(\"Response includes longitude which is \"+ long, function () {",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");  ",
									"});",
									"",
									"",
									"",
									"",
									"// Visulizer for single user location",
									"var template = `",
									"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
									"<script src=\"https://unpkg.com/topojson@3\"></script>",
									"",
									"<style>",
									"body { ",
									"    background-color: white;",
									"}",
									".title { ",
									"    font-size: 30px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    text-align: center;",
									"}",
									".container {",
									"    display: flex;",
									"    flex-direction: row;",
									"    justify-content: center;",
									"    align-items: center;",
									"}",
									".directions {",
									"    font-size: 18px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    padding-left: 20px;",
									"}",
									"#backgroundRectangle {",
									"    width: 100%;",
									"    height: 100%;",
									"    fill: #f5f5f5;",
									"}",
									".projectionOutline{",
									"    fill: #2f434a;",
									"    stroke: #4e5f66",
									"}",
									".tooltip {",
									"    position: absolute;",
									"    font-size: 12px;",
									"    width: auto;",
									"    height: auto;",
									"    pointer-events: none;",
									"    background-color: white;",
									"    padding: 3px;",
									"}",
									"",
									"</style>",
									"<h1 class=\"title\"></h1>",
									"<div class=\"container\">",
									"<div id=\"map\"></div>",
									"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
									"</div>",
									"<script>",
									"",
									"    pm.getData( function(err, value) {",
									"        d3.select(\".title\").html(value.title);",
									"        initVisualization(value.data);",
									"    });",
									"",
									"    // Function call that contains our visualization, necessary because we are loading an external map file",
									"    async function initVisualization(pmInput){",
									"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
									"        response.json().then( data => {",
									"            generateVisualization(pmInput, data);",
									"        });",
									"    }",
									"    ",
									"    // Generates d3 map visualization using an external map file and user-inputed data",
									"    // Utilizes d3.zoom and d3.brush",
									"    function generateVisualization(pmInput, mapData){",
									"        // Set the dimensions and margins of the graph",
									"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
									"        const width = 800 - margins.top - margins.bottom;",
									"        const height = 500 - margins.left - margins.right;",
									"        ",
									"        // Initializes d3.zoom to cover entire map SVG",
									"        const zoom = d3.zoom()",
									"            .scaleExtent([1,40])",
									"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"zoom\", () =>{",
									"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
									"            })",
									"        ",
									"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
									"        let brush = d3.brush()",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"end\", () => {",
									"                let extent = d3.event.selection;",
									"                if(extent){",
									"                    d3.select(\"#map-group\").call(brush.move, null);",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
									"                        .translate( -extent[0][0], -extent[0][1] ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
									"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
									"                    ",
									"                }",
									"                else{",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( 1 )",
									"                        .translate( 0,0 ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => d.circleSize)",
									"                        .attr(\"stroke-width\", 1);",
									"                }",
									"            });",
									"        ",
									"        // Set the dimensions and margins of the graph",
									"        let svg = d3.select(\"#map\")",
									"          .append(\"svg\")  ",
									"            .attr(\"width\", width + margins.left + margins.right)",
									"            .attr(\"height\", height + margins.top + margins.bottom)",
									"        svg.append(\"rect\")",
									"            .attr(\"id\", \"backgroundRectangle\");",
									"        svg = svg.append(\"g\")",
									"            .attr(\"id\", \"map-group\")",
									"            .call(brush);",
									"        ",
									"        // Draws Mercator projection of map onto SVG using the inputted map file",
									"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
									"        var mapGroup = svg.append(\"g\");",
									"        let mapPath = d3.geoPath().projection(projection);",
									"        mapGroup.selectAll(\"path\")",
									"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
									"            .enter()",
									"          .append(\"path\")",
									"            .attr(\"d\", mapPath)",
									"            .attr(\"class\", \"projectionOutline\");",
									"        ",
									"        // Calculate offset for tooltip",
									"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
									"        const offset = {top: rect.top, left: rect.left};",
									"        ",
									"        // Create hover tooltip",
									"        let tooltip = d3.select(\"#map\").append(\"div\")",
									"            .attr(\"class\", \"tooltip\");",
									"        // tooltip mouseover event handler",
									"        let tipMouseover = function(d){",
									"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b>\")",
									"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
									"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
									"              .transition()",
									"                .duration(200)      // ms",
									"                .style(\"opacity\", 0.9)",
									"            d3.select(this)",
									"                .style(\"stroke\", \"white\")",
									"                .style(\"opacity\", 1);",
									"        };",
									"        // tooltip mouseout event handler",
									"        let tipMouseout = function(d){",
									"            tooltip.transition()",
									"                .duration(300)",
									"                .style(\"opacity\", 0);",
									"            d3.select(this)",
									"                .style(\"stroke\", \"none\")",
									"                .style(\"opacity\", 0.6);",
									"        };",
									"",
									"        // Add pattern for custom postman logo",
									"        svg.append(\"defs\").append(\"pattern\")",
									"            .attr('id','pmImage')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr('patternUnits',\"userSpaceOnUse\")",
									"            .append('image')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
									"",
									"        // Appends points from user-inputted data onto map",
									"        svg.selectAll(\"circle\")",
									"            .data(pmInput)",
									"            .enter()",
									"            .append(\"circle\")",
									"                .attr(\"r\", 0)",
									"                //.style(\"fill\", d => d.color)",
									"                .style(\"fill\", \"url(#pmImage)\")",
									"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
									"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
									"                .style(\"opacity\", 0.6)",
									"                .on(\"mouseover\", tipMouseover)",
									"                .on(\"mouseout\", tipMouseout)",
									"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
									"                .attr(\"r\", d => d.circleSize)",
									"    }",
									"</script>",
									"`;",
									"",
									"var response = pm.response.json().data;",
									"let parsedData = [];",
									"",
									"//data parsing",
									"for (let postmanaut of response){",
									"    let tempEntry = {};",
									"    tempEntry.name = postmanaut.name;",
									"    tempEntry.lat = postmanaut.latitude;",
									"    tempEntry.long = postmanaut.longitude;",
									"    tempEntry.circleSize = 6;",
									"    tempEntry.color = \"#F09D51\";",
									"    parsedData.push(tempEntry);",
									"}",
									"",
									"pm.visualizer.set(template, {",
									"    data: parsedData,",
									"    title: \"Map of Postmanaut\"",
									"} );",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from twitter object before you run the api ",
									"var poojaObj = JSON.parse(pm.environment.get(\"pooja-object\"));",
									"pm.variables.set(\"pooja-location\",poojaObj.location)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.positionstack.com/v1/forward?access_key={{api-access-key}}&query={{pooja-location}}",
							"protocol": "http",
							"host": [
								"api",
								"positionstack",
								"com"
							],
							"path": [
								"v1",
								"forward"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{api-access-key}}",
									"description": "Position Stack API Key"
								},
								{
									"key": "query",
									"value": "{{pooja-location}}",
									"description": "location from environment variable "
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Open Weather Maps API - Pooja's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var weather = pm.response.json().weather[0].main;",
									"",
									"",
									"//add long and lat from object",
									"var poojaObj = JSON.parse(pm.environment.get(\"pooja-object\"));",
									"poojaObj.weather = weather",
									"",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"pooja-object\", JSON.stringify(poojaObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes weather which is \"+ weather, function () {",
									"    pm.expect(pm.response.text()).to.include(\"weather\");  ",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var poojaObj = JSON.parse(pm.environment.get(\"pooja-object\"));",
									"pm.variables.set(\"lat\",poojaObj.latitude)",
									"pm.variables.set(\"lon\",poojaObj.longitude)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.openweathermap.org/data/2.5/weather?lat={{lat}}&lon={{lon}}&appid={{weather_api_key}}",
							"protocol": "https",
							"host": [
								"api",
								"openweathermap",
								"org"
							],
							"path": [
								"data",
								"2.5",
								"weather"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{lat}}"
								},
								{
									"key": "lon",
									"value": "{{lon}}"
								},
								{
									"key": "appid",
									"value": "{{weather_api_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PositionStack API - Jan's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataOut = pm.response.json().data[0];",
									"let lat = dataOut.latitude;",
									"let long = dataOut.longitude;",
									"",
									"//add long and lat from object",
									"var janObj = JSON.parse(pm.environment.get(\"jan-object\"));",
									"janObj.latitude = lat",
									"janObj.longitude = long",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"jan-object\", JSON.stringify(janObj));",
									"",
									"//tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes latitude which is \"+ lat, function () {",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");  ",
									"});",
									"",
									"pm.test(\"Response includes longitude which is \"+ long, function () {",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");  ",
									"});",
									"",
									"",
									"var template = `",
									"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
									"<script src=\"https://unpkg.com/topojson@3\"></script>",
									"",
									"<style>",
									"body { ",
									"    background-color: white;",
									"}",
									".title { ",
									"    font-size: 30px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    text-align: center;",
									"}",
									".container {",
									"    display: flex;",
									"    flex-direction: row;",
									"    justify-content: center;",
									"    align-items: center;",
									"}",
									".directions {",
									"    font-size: 18px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    padding-left: 20px;",
									"}",
									"#backgroundRectangle {",
									"    width: 100%;",
									"    height: 100%;",
									"    fill: #f5f5f5;",
									"}",
									".projectionOutline{",
									"    fill: #2f434a;",
									"    stroke: #4e5f66",
									"}",
									".tooltip {",
									"    position: absolute;",
									"    font-size: 12px;",
									"    width: auto;",
									"    height: auto;",
									"    pointer-events: none;",
									"    background-color: white;",
									"    padding: 3px;",
									"}",
									"",
									"</style>",
									"<h1 class=\"title\"></h1>",
									"<div class=\"container\">",
									"<div id=\"map\"></div>",
									"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
									"</div>",
									"<script>",
									"",
									"    pm.getData( function(err, value) {",
									"        d3.select(\".title\").html(value.title);",
									"        initVisualization(value.data);",
									"    });",
									"",
									"    // Function call that contains our visualization, necessary because we are loading an external map file",
									"    async function initVisualization(pmInput){",
									"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
									"        response.json().then( data => {",
									"            generateVisualization(pmInput, data);",
									"        });",
									"    }",
									"    ",
									"    // Generates d3 map visualization using an external map file and user-inputed data",
									"    // Utilizes d3.zoom and d3.brush",
									"    function generateVisualization(pmInput, mapData){",
									"        // Set the dimensions and margins of the graph",
									"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
									"        const width = 800 - margins.top - margins.bottom;",
									"        const height = 500 - margins.left - margins.right;",
									"        ",
									"        // Initializes d3.zoom to cover entire map SVG",
									"        const zoom = d3.zoom()",
									"            .scaleExtent([1,40])",
									"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"zoom\", () =>{",
									"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
									"            })",
									"        ",
									"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
									"        let brush = d3.brush()",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"end\", () => {",
									"                let extent = d3.event.selection;",
									"                if(extent){",
									"                    d3.select(\"#map-group\").call(brush.move, null);",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
									"                        .translate( -extent[0][0], -extent[0][1] ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
									"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
									"                    ",
									"                }",
									"                else{",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( 1 )",
									"                        .translate( 0,0 ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => d.circleSize)",
									"                        .attr(\"stroke-width\", 1);",
									"                }",
									"            });",
									"        ",
									"        // Set the dimensions and margins of the graph",
									"        let svg = d3.select(\"#map\")",
									"          .append(\"svg\")  ",
									"            .attr(\"width\", width + margins.left + margins.right)",
									"            .attr(\"height\", height + margins.top + margins.bottom)",
									"        svg.append(\"rect\")",
									"            .attr(\"id\", \"backgroundRectangle\");",
									"        svg = svg.append(\"g\")",
									"            .attr(\"id\", \"map-group\")",
									"            .call(brush);",
									"        ",
									"        // Draws Mercator projection of map onto SVG using the inputted map file",
									"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
									"        var mapGroup = svg.append(\"g\");",
									"        let mapPath = d3.geoPath().projection(projection);",
									"        mapGroup.selectAll(\"path\")",
									"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
									"            .enter()",
									"          .append(\"path\")",
									"            .attr(\"d\", mapPath)",
									"            .attr(\"class\", \"projectionOutline\");",
									"        ",
									"        // Calculate offset for tooltip",
									"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
									"        const offset = {top: rect.top, left: rect.left};",
									"        ",
									"        // Create hover tooltip",
									"        let tooltip = d3.select(\"#map\").append(\"div\")",
									"            .attr(\"class\", \"tooltip\");",
									"        // tooltip mouseover event handler",
									"        let tipMouseover = function(d){",
									"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b>\")",
									"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
									"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
									"              .transition()",
									"                .duration(200)      // ms",
									"                .style(\"opacity\", 0.9)",
									"            d3.select(this)",
									"                .style(\"stroke\", \"white\")",
									"                .style(\"opacity\", 1);",
									"        };",
									"        // tooltip mouseout event handler",
									"        let tipMouseout = function(d){",
									"            tooltip.transition()",
									"                .duration(300)",
									"                .style(\"opacity\", 0);",
									"            d3.select(this)",
									"                .style(\"stroke\", \"none\")",
									"                .style(\"opacity\", 0.6);",
									"        };",
									"",
									"        // Add pattern for custom postman logo",
									"        svg.append(\"defs\").append(\"pattern\")",
									"            .attr('id','pmImage')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr('patternUnits',\"userSpaceOnUse\")",
									"            .append('image')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
									"",
									"        // Appends points from user-inputted data onto map",
									"        svg.selectAll(\"circle\")",
									"            .data(pmInput)",
									"            .enter()",
									"            .append(\"circle\")",
									"                .attr(\"r\", 0)",
									"                //.style(\"fill\", d => d.color)",
									"                .style(\"fill\", \"url(#pmImage)\")",
									"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
									"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
									"                .style(\"opacity\", 0.6)",
									"                .on(\"mouseover\", tipMouseover)",
									"                .on(\"mouseout\", tipMouseout)",
									"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
									"                .attr(\"r\", d => d.circleSize)",
									"    }",
									"</script>",
									"`;",
									"",
									"var response = pm.response.json().data;",
									"let parsedData = [];",
									"",
									"//data parsing",
									"for (let postmanaut of response){",
									"    let tempEntry = {};",
									"    tempEntry.name = postmanaut.name;",
									"    tempEntry.lat = postmanaut.latitude;",
									"    tempEntry.long = postmanaut.longitude;",
									"    tempEntry.circleSize = 6;",
									"    tempEntry.color = \"#F09D51\";",
									"    parsedData.push(tempEntry);",
									"}",
									"",
									"pm.visualizer.set(template, {",
									"    data: parsedData,",
									"    title: \"Map of Postmanaut\"",
									"} );"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var janObj = JSON.parse(pm.environment.get(\"jan-object\"));",
									"pm.variables.set(\"jan-location\",janObj.location)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.positionstack.com/v1/forward?access_key={{api-access-key}}&query={{jan-location}}",
							"protocol": "http",
							"host": [
								"api",
								"positionstack",
								"com"
							],
							"path": [
								"v1",
								"forward"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{api-access-key}}"
								},
								{
									"key": "query",
									"value": "{{jan-location}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Open Weather Maps API - Jan's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var weather = pm.response.json().weather[0].main;",
									"",
									"",
									"//add long and lat from object",
									"var janObj = JSON.parse(pm.environment.get(\"jan-object\"));",
									"janObj.weather = weather",
									"",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"jan-object\", JSON.stringify(janObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes weather which is \"+ weather, function () {",
									"    pm.expect(pm.response.text()).to.include(\"weather\");  ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var janObj = JSON.parse(pm.environment.get(\"jan-object\"));",
									"pm.variables.set(\"lat\",janObj.latitude)",
									"pm.variables.set(\"lon\",janObj.longitude)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.openweathermap.org/data/2.5/weather?lat={{lat}}&lon={{lon}}&appid={{weather_api_key}}",
							"protocol": "https",
							"host": [
								"api",
								"openweathermap",
								"org"
							],
							"path": [
								"data",
								"2.5",
								"weather"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{lat}}"
								},
								{
									"key": "lon",
									"value": "{{lon}}"
								},
								{
									"key": "appid",
									"value": "{{weather_api_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PositionStack API - Arlemi's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataOut = pm.response.json().data[0];",
									"let lat = dataOut.latitude;",
									"let long = dataOut.longitude;",
									"",
									"//add long and lat from object",
									"var arlemiObj = JSON.parse(pm.environment.get(\"arlemi-object\"));",
									"arlemiObj.latitude = lat",
									"arlemiObj.longitude = long",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"arlemi-object\", JSON.stringify(arlemiObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes latitude which is \"+ lat, function () {",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");  ",
									"});",
									"",
									"pm.test(\"Response includes longitude which is \"+ long, function () {",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");  ",
									"});",
									"",
									"var template = `",
									"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
									"<script src=\"https://unpkg.com/topojson@3\"></script>",
									"",
									"<style>",
									"body { ",
									"    background-color: white;",
									"}",
									".title { ",
									"    font-size: 30px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    text-align: center;",
									"}",
									".container {",
									"    display: flex;",
									"    flex-direction: row;",
									"    justify-content: center;",
									"    align-items: center;",
									"}",
									".directions {",
									"    font-size: 18px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    padding-left: 20px;",
									"}",
									"#backgroundRectangle {",
									"    width: 100%;",
									"    height: 100%;",
									"    fill: #f5f5f5;",
									"}",
									".projectionOutline{",
									"    fill: #2f434a;",
									"    stroke: #4e5f66",
									"}",
									".tooltip {",
									"    position: absolute;",
									"    font-size: 12px;",
									"    width: auto;",
									"    height: auto;",
									"    pointer-events: none;",
									"    background-color: white;",
									"    padding: 3px;",
									"}",
									"",
									"</style>",
									"<h1 class=\"title\"></h1>",
									"<div class=\"container\">",
									"<div id=\"map\"></div>",
									"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
									"</div>",
									"<script>",
									"",
									"    pm.getData( function(err, value) {",
									"        d3.select(\".title\").html(value.title);",
									"        initVisualization(value.data);",
									"    });",
									"",
									"    // Function call that contains our visualization, necessary because we are loading an external map file",
									"    async function initVisualization(pmInput){",
									"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
									"        response.json().then( data => {",
									"            generateVisualization(pmInput, data);",
									"        });",
									"    }",
									"    ",
									"    // Generates d3 map visualization using an external map file and user-inputed data",
									"    // Utilizes d3.zoom and d3.brush",
									"    function generateVisualization(pmInput, mapData){",
									"        // Set the dimensions and margins of the graph",
									"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
									"        const width = 800 - margins.top - margins.bottom;",
									"        const height = 500 - margins.left - margins.right;",
									"        ",
									"        // Initializes d3.zoom to cover entire map SVG",
									"        const zoom = d3.zoom()",
									"            .scaleExtent([1,40])",
									"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"zoom\", () =>{",
									"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
									"            })",
									"        ",
									"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
									"        let brush = d3.brush()",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"end\", () => {",
									"                let extent = d3.event.selection;",
									"                if(extent){",
									"                    d3.select(\"#map-group\").call(brush.move, null);",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
									"                        .translate( -extent[0][0], -extent[0][1] ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
									"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
									"                    ",
									"                }",
									"                else{",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( 1 )",
									"                        .translate( 0,0 ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => d.circleSize)",
									"                        .attr(\"stroke-width\", 1);",
									"                }",
									"            });",
									"        ",
									"        // Set the dimensions and margins of the graph",
									"        let svg = d3.select(\"#map\")",
									"          .append(\"svg\")  ",
									"            .attr(\"width\", width + margins.left + margins.right)",
									"            .attr(\"height\", height + margins.top + margins.bottom)",
									"        svg.append(\"rect\")",
									"            .attr(\"id\", \"backgroundRectangle\");",
									"        svg = svg.append(\"g\")",
									"            .attr(\"id\", \"map-group\")",
									"            .call(brush);",
									"        ",
									"        // Draws Mercator projection of map onto SVG using the inputted map file",
									"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
									"        var mapGroup = svg.append(\"g\");",
									"        let mapPath = d3.geoPath().projection(projection);",
									"        mapGroup.selectAll(\"path\")",
									"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
									"            .enter()",
									"          .append(\"path\")",
									"            .attr(\"d\", mapPath)",
									"            .attr(\"class\", \"projectionOutline\");",
									"        ",
									"        // Calculate offset for tooltip",
									"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
									"        const offset = {top: rect.top, left: rect.left};",
									"        ",
									"        // Create hover tooltip",
									"        let tooltip = d3.select(\"#map\").append(\"div\")",
									"            .attr(\"class\", \"tooltip\");",
									"        // tooltip mouseover event handler",
									"        let tipMouseover = function(d){",
									"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b>\")",
									"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
									"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
									"              .transition()",
									"                .duration(200)      // ms",
									"                .style(\"opacity\", 0.9)",
									"            d3.select(this)",
									"                .style(\"stroke\", \"white\")",
									"                .style(\"opacity\", 1);",
									"        };",
									"        // tooltip mouseout event handler",
									"        let tipMouseout = function(d){",
									"            tooltip.transition()",
									"                .duration(300)",
									"                .style(\"opacity\", 0);",
									"            d3.select(this)",
									"                .style(\"stroke\", \"none\")",
									"                .style(\"opacity\", 0.6);",
									"        };",
									"",
									"        // Add pattern for custom postman logo",
									"        svg.append(\"defs\").append(\"pattern\")",
									"            .attr('id','pmImage')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr('patternUnits',\"userSpaceOnUse\")",
									"            .append('image')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
									"",
									"        // Appends points from user-inputted data onto map",
									"        svg.selectAll(\"circle\")",
									"            .data(pmInput)",
									"            .enter()",
									"            .append(\"circle\")",
									"                .attr(\"r\", 0)",
									"                //.style(\"fill\", d => d.color)",
									"                .style(\"fill\", \"url(#pmImage)\")",
									"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
									"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
									"                .style(\"opacity\", 0.6)",
									"                .on(\"mouseover\", tipMouseover)",
									"                .on(\"mouseout\", tipMouseout)",
									"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
									"                .attr(\"r\", d => d.circleSize)",
									"    }",
									"</script>",
									"`;",
									"",
									"var response = pm.response.json().data;",
									"let parsedData = [];",
									"",
									"//data parsing",
									"for (let postmanaut of response){",
									"    let tempEntry = {};",
									"    tempEntry.name = postmanaut.name;",
									"    tempEntry.lat = postmanaut.latitude;",
									"    tempEntry.long = postmanaut.longitude;",
									"    tempEntry.circleSize = 6;",
									"    tempEntry.color = \"#F09D51\";",
									"    parsedData.push(tempEntry);",
									"}",
									"",
									"pm.visualizer.set(template, {",
									"    data: parsedData,",
									"    title: \"Map of Postmanaut\"",
									"} );",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var arlemiObj = JSON.parse(pm.environment.get(\"arlemi-object\"));",
									"pm.variables.set(\"arlemi-location\",arlemiObj.location)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.positionstack.com/v1/forward?access_key={{api-access-key}}&query={{arlemi-location}}",
							"protocol": "http",
							"host": [
								"api",
								"positionstack",
								"com"
							],
							"path": [
								"v1",
								"forward"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{api-access-key}}"
								},
								{
									"key": "query",
									"value": "{{arlemi-location}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Open Weather Maps API - Arlemi's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var weather = pm.response.json().weather[0].main;",
									"",
									"",
									"//add long and lat from object",
									"var arlemiObj = JSON.parse(pm.environment.get(\"arlemi-object\"));",
									"arlemiObj.weather = weather",
									"",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"arlemi-object\", JSON.stringify(arlemiObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes weather which is \"+ weather, function () {",
									"    pm.expect(pm.response.text()).to.include(\"weather\");  ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var arlemiObj = JSON.parse(pm.environment.get(\"arlemi-object\"));",
									"pm.variables.set(\"lat\",arlemiObj.latitude)",
									"pm.variables.set(\"lon\",arlemiObj.longitude)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.openweathermap.org/data/2.5/weather?lat={{lat}}&lon={{lon}}&appid={{weather_api_key}}",
							"protocol": "https",
							"host": [
								"api",
								"openweathermap",
								"org"
							],
							"path": [
								"data",
								"2.5",
								"weather"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{lat}}"
								},
								{
									"key": "lon",
									"value": "{{lon}}"
								},
								{
									"key": "appid",
									"value": "{{weather_api_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PositionStack API - Ian's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataOut = pm.response.json().data[0];",
									"let lat = dataOut.latitude;",
									"let long = dataOut.longitude;",
									"",
									"// add long and lat from object",
									"var ianObj = JSON.parse(pm.environment.get(\"ian-object\"));",
									"ianObj.latitude = lat",
									"ianObj.longitude = long",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"ian-object\", JSON.stringify(ianObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes latitude which is \"+ lat, function () {",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");  ",
									"});",
									"",
									"pm.test(\"Response includes longitude which is \"+ long, function () {",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");  ",
									"});",
									"",
									"// Visulizer for single user location",
									"var template = `",
									"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
									"<script src=\"https://unpkg.com/topojson@3\"></script>",
									"",
									"<style>",
									"body { ",
									"    background-color: white;",
									"}",
									".title { ",
									"    font-size: 30px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    text-align: center;",
									"}",
									".container {",
									"    display: flex;",
									"    flex-direction: row;",
									"    justify-content: center;",
									"    align-items: center;",
									"}",
									".directions {",
									"    font-size: 18px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    padding-left: 20px;",
									"}",
									"#backgroundRectangle {",
									"    width: 100%;",
									"    height: 100%;",
									"    fill: #f5f5f5;",
									"}",
									".projectionOutline{",
									"    fill: #2f434a;",
									"    stroke: #4e5f66",
									"}",
									".tooltip {",
									"    position: absolute;",
									"    font-size: 12px;",
									"    width: auto;",
									"    height: auto;",
									"    pointer-events: none;",
									"    background-color: white;",
									"    padding: 3px;",
									"}",
									"",
									"</style>",
									"<h1 class=\"title\"></h1>",
									"<div class=\"container\">",
									"<div id=\"map\"></div>",
									"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
									"</div>",
									"<script>",
									"",
									"    pm.getData( function(err, value) {",
									"        d3.select(\".title\").html(value.title);",
									"        initVisualization(value.data);",
									"    });",
									"",
									"    // Function call that contains our visualization, necessary because we are loading an external map file",
									"    async function initVisualization(pmInput){",
									"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
									"        response.json().then( data => {",
									"            generateVisualization(pmInput, data);",
									"        });",
									"    }",
									"    ",
									"    // Generates d3 map visualization using an external map file and user-inputed data",
									"    // Utilizes d3.zoom and d3.brush",
									"    function generateVisualization(pmInput, mapData){",
									"        // Set the dimensions and margins of the graph",
									"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
									"        const width = 800 - margins.top - margins.bottom;",
									"        const height = 500 - margins.left - margins.right;",
									"        ",
									"        // Initializes d3.zoom to cover entire map SVG",
									"        const zoom = d3.zoom()",
									"            .scaleExtent([1,40])",
									"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"zoom\", () =>{",
									"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
									"            })",
									"        ",
									"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
									"        let brush = d3.brush()",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"end\", () => {",
									"                let extent = d3.event.selection;",
									"                if(extent){",
									"                    d3.select(\"#map-group\").call(brush.move, null);",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
									"                        .translate( -extent[0][0], -extent[0][1] ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
									"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
									"                    ",
									"                }",
									"                else{",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( 1 )",
									"                        .translate( 0,0 ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => d.circleSize)",
									"                        .attr(\"stroke-width\", 1);",
									"                }",
									"            });",
									"        ",
									"        // Set the dimensions and margins of the graph",
									"        let svg = d3.select(\"#map\")",
									"          .append(\"svg\")  ",
									"            .attr(\"width\", width + margins.left + margins.right)",
									"            .attr(\"height\", height + margins.top + margins.bottom)",
									"        svg.append(\"rect\")",
									"            .attr(\"id\", \"backgroundRectangle\");",
									"        svg = svg.append(\"g\")",
									"            .attr(\"id\", \"map-group\")",
									"            .call(brush);",
									"        ",
									"        // Draws Mercator projection of map onto SVG using the inputted map file",
									"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
									"        var mapGroup = svg.append(\"g\");",
									"        let mapPath = d3.geoPath().projection(projection);",
									"        mapGroup.selectAll(\"path\")",
									"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
									"            .enter()",
									"          .append(\"path\")",
									"            .attr(\"d\", mapPath)",
									"            .attr(\"class\", \"projectionOutline\");",
									"        ",
									"        // Calculate offset for tooltip",
									"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
									"        const offset = {top: rect.top, left: rect.left};",
									"        ",
									"        // Create hover tooltip",
									"        let tooltip = d3.select(\"#map\").append(\"div\")",
									"            .attr(\"class\", \"tooltip\");",
									"        // tooltip mouseover event handler",
									"        let tipMouseover = function(d){",
									"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b>\")",
									"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
									"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
									"              .transition()",
									"                .duration(200)      // ms",
									"                .style(\"opacity\", 0.9)",
									"            d3.select(this)",
									"                .style(\"stroke\", \"white\")",
									"                .style(\"opacity\", 1);",
									"        };",
									"        // tooltip mouseout event handler",
									"        let tipMouseout = function(d){",
									"            tooltip.transition()",
									"                .duration(300)",
									"                .style(\"opacity\", 0);",
									"            d3.select(this)",
									"                .style(\"stroke\", \"none\")",
									"                .style(\"opacity\", 0.6);",
									"        };",
									"",
									"        // Add pattern for custom postman logo",
									"        svg.append(\"defs\").append(\"pattern\")",
									"            .attr('id','pmImage')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr('patternUnits',\"userSpaceOnUse\")",
									"            .append('image')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
									"",
									"        // Appends points from user-inputted data onto map",
									"        svg.selectAll(\"circle\")",
									"            .data(pmInput)",
									"            .enter()",
									"            .append(\"circle\")",
									"                .attr(\"r\", 0)",
									"                //.style(\"fill\", d => d.color)",
									"                .style(\"fill\", \"url(#pmImage)\")",
									"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
									"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
									"                .style(\"opacity\", 0.6)",
									"                .on(\"mouseover\", tipMouseover)",
									"                .on(\"mouseout\", tipMouseout)",
									"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
									"                .attr(\"r\", d => d.circleSize)",
									"    }",
									"</script>",
									"`;",
									"",
									"var response = pm.response.json().data;",
									"let parsedData = [];",
									"",
									"//data parsing",
									"for (let postmanaut of response){",
									"    let tempEntry = {};",
									"    tempEntry.name = postmanaut.name;",
									"    tempEntry.lat = postmanaut.latitude;",
									"    tempEntry.long = postmanaut.longitude;",
									"    tempEntry.circleSize = 6;",
									"    tempEntry.color = \"#F09D51\";",
									"    parsedData.push(tempEntry);",
									"}",
									"",
									"pm.visualizer.set(template, {",
									"    data: parsedData,",
									"    title: \"Map of Postmanaut\"",
									"} );",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var ianObj = JSON.parse(pm.environment.get(\"ian-object\"));",
									"pm.variables.set(\"ian-location\",ianObj.location)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.positionstack.com/v1/forward?access_key={{api-access-key}}&query={{ian-location}}",
							"protocol": "http",
							"host": [
								"api",
								"positionstack",
								"com"
							],
							"path": [
								"v1",
								"forward"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{api-access-key}}"
								},
								{
									"key": "query",
									"value": "{{ian-location}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Open Weather Maps API - Ian's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var weather = pm.response.json().weather[0].main;",
									"",
									"",
									"//add long and lat from object",
									"var ianObj = JSON.parse(pm.environment.get(\"ian-object\"));",
									"ianObj.weather = weather",
									"",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"ian-object\", JSON.stringify(ianObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes weather which is \"+ weather, function () {",
									"    pm.expect(pm.response.text()).to.include(\"weather\");  ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var ianObj = JSON.parse(pm.environment.get(\"ian-object\"));",
									"pm.variables.set(\"lat\",ianObj.latitude)",
									"pm.variables.set(\"lon\",ianObj.longitude)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.openweathermap.org/data/2.5/weather?lat={{lat}}&lon={{lon}}&appid={{weather_api_key}}",
							"protocol": "https",
							"host": [
								"api",
								"openweathermap",
								"org"
							],
							"path": [
								"data",
								"2.5",
								"weather"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{lat}}"
								},
								{
									"key": "lon",
									"value": "{{lon}}"
								},
								{
									"key": "appid",
									"value": "{{weather_api_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PositionStack API - Joyce's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataOut = pm.response.json().data[0];",
									"let lat = dataOut.latitude;",
									"let long = dataOut.longitude;",
									"",
									"// add long and lat from object",
									"var joyceObj = JSON.parse(pm.environment.get(\"joyce-object\"));",
									"joyceObj.latitude = lat",
									"joyceObj.longitude = long",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"joyce-object\", JSON.stringify(joyceObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes latitude which is \"+ lat, function () {",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");  ",
									"});",
									"",
									"pm.test(\"Response includes longitude which is \"+ long, function () {",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");  ",
									"});",
									"",
									"// Visulizer for single user location",
									"var template = `",
									"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
									"<script src=\"https://unpkg.com/topojson@3\"></script>",
									"",
									"<style>",
									"body { ",
									"    background-color: white;",
									"}",
									".title { ",
									"    font-size: 30px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    text-align: center;",
									"}",
									".container {",
									"    display: flex;",
									"    flex-direction: row;",
									"    justify-content: center;",
									"    align-items: center;",
									"}",
									".directions {",
									"    font-size: 18px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    padding-left: 20px;",
									"}",
									"#backgroundRectangle {",
									"    width: 100%;",
									"    height: 100%;",
									"    fill: #f5f5f5;",
									"}",
									".projectionOutline{",
									"    fill: #2f434a;",
									"    stroke: #4e5f66",
									"}",
									".tooltip {",
									"    position: absolute;",
									"    font-size: 12px;",
									"    width: auto;",
									"    height: auto;",
									"    pointer-events: none;",
									"    background-color: white;",
									"    padding: 3px;",
									"}",
									"",
									"</style>",
									"<h1 class=\"title\"></h1>",
									"<div class=\"container\">",
									"<div id=\"map\"></div>",
									"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
									"</div>",
									"<script>",
									"",
									"    pm.getData( function(err, value) {",
									"        d3.select(\".title\").html(value.title);",
									"        initVisualization(value.data);",
									"    });",
									"",
									"    // Function call that contains our visualization, necessary because we are loading an external map file",
									"    async function initVisualization(pmInput){",
									"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
									"        response.json().then( data => {",
									"            generateVisualization(pmInput, data);",
									"        });",
									"    }",
									"    ",
									"    // Generates d3 map visualization using an external map file and user-inputed data",
									"    // Utilizes d3.zoom and d3.brush",
									"    function generateVisualization(pmInput, mapData){",
									"        // Set the dimensions and margins of the graph",
									"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
									"        const width = 800 - margins.top - margins.bottom;",
									"        const height = 500 - margins.left - margins.right;",
									"        ",
									"        // Initializes d3.zoom to cover entire map SVG",
									"        const zoom = d3.zoom()",
									"            .scaleExtent([1,40])",
									"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"zoom\", () =>{",
									"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
									"            })",
									"        ",
									"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
									"        let brush = d3.brush()",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"end\", () => {",
									"                let extent = d3.event.selection;",
									"                if(extent){",
									"                    d3.select(\"#map-group\").call(brush.move, null);",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
									"                        .translate( -extent[0][0], -extent[0][1] ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
									"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
									"                    ",
									"                }",
									"                else{",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( 1 )",
									"                        .translate( 0,0 ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => d.circleSize)",
									"                        .attr(\"stroke-width\", 1);",
									"                }",
									"            });",
									"        ",
									"        // Set the dimensions and margins of the graph",
									"        let svg = d3.select(\"#map\")",
									"          .append(\"svg\")  ",
									"            .attr(\"width\", width + margins.left + margins.right)",
									"            .attr(\"height\", height + margins.top + margins.bottom)",
									"        svg.append(\"rect\")",
									"            .attr(\"id\", \"backgroundRectangle\");",
									"        svg = svg.append(\"g\")",
									"            .attr(\"id\", \"map-group\")",
									"            .call(brush);",
									"        ",
									"        // Draws Mercator projection of map onto SVG using the inputted map file",
									"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
									"        var mapGroup = svg.append(\"g\");",
									"        let mapPath = d3.geoPath().projection(projection);",
									"        mapGroup.selectAll(\"path\")",
									"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
									"            .enter()",
									"          .append(\"path\")",
									"            .attr(\"d\", mapPath)",
									"            .attr(\"class\", \"projectionOutline\");",
									"        ",
									"        // Calculate offset for tooltip",
									"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
									"        const offset = {top: rect.top, left: rect.left};",
									"        ",
									"        // Create hover tooltip",
									"        let tooltip = d3.select(\"#map\").append(\"div\")",
									"            .attr(\"class\", \"tooltip\");",
									"        // tooltip mouseover event handler",
									"        let tipMouseover = function(d){",
									"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b>\")",
									"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
									"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
									"              .transition()",
									"                .duration(200)      // ms",
									"                .style(\"opacity\", 0.9)",
									"            d3.select(this)",
									"                .style(\"stroke\", \"white\")",
									"                .style(\"opacity\", 1);",
									"        };",
									"        // tooltip mouseout event handler",
									"        let tipMouseout = function(d){",
									"            tooltip.transition()",
									"                .duration(300)",
									"                .style(\"opacity\", 0);",
									"            d3.select(this)",
									"                .style(\"stroke\", \"none\")",
									"                .style(\"opacity\", 0.6);",
									"        };",
									"",
									"        // Add pattern for custom postman logo",
									"        svg.append(\"defs\").append(\"pattern\")",
									"            .attr('id','pmImage')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr('patternUnits',\"userSpaceOnUse\")",
									"            .append('image')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
									"",
									"        // Appends points from user-inputted data onto map",
									"        svg.selectAll(\"circle\")",
									"            .data(pmInput)",
									"            .enter()",
									"            .append(\"circle\")",
									"                .attr(\"r\", 0)",
									"                //.style(\"fill\", d => d.color)",
									"                .style(\"fill\", \"url(#pmImage)\")",
									"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
									"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
									"                .style(\"opacity\", 0.6)",
									"                .on(\"mouseover\", tipMouseover)",
									"                .on(\"mouseout\", tipMouseout)",
									"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
									"                .attr(\"r\", d => d.circleSize)",
									"    }",
									"</script>",
									"`;",
									"",
									"var response = pm.response.json().data;",
									"let parsedData = [];",
									"",
									"//data parsing",
									"for (let postmanaut of response){",
									"    let tempEntry = {};",
									"    tempEntry.name = postmanaut.name;",
									"    tempEntry.lat = postmanaut.latitude;",
									"    tempEntry.long = postmanaut.longitude;",
									"    tempEntry.circleSize = 6;",
									"    tempEntry.color = \"#F09D51\";",
									"    parsedData.push(tempEntry);",
									"}",
									"",
									"pm.visualizer.set(template, {",
									"    data: parsedData,",
									"    title: \"Map of Postmanaut\"",
									"} );",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var joyceObj = JSON.parse(pm.environment.get(\"joyce-object\"));",
									"pm.variables.set(\"joyce-location\",joyceObj.location)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.positionstack.com/v1/forward?access_key={{api-access-key}}&query={{joyce-location}}",
							"protocol": "http",
							"host": [
								"api",
								"positionstack",
								"com"
							],
							"path": [
								"v1",
								"forward"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{api-access-key}}"
								},
								{
									"key": "query",
									"value": "{{joyce-location}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Open Weather Maps API -Joyce's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var weather = pm.response.json().weather[0].main;",
									"",
									"",
									"//add long and lat from object",
									"var joyceObj = JSON.parse(pm.environment.get(\"joyce-object\"));",
									"joyceObj.weather = weather",
									"",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"joyce-object\", JSON.stringify(joyceObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes weather which is \"+ weather, function () {",
									"    pm.expect(pm.response.text()).to.include(\"weather\");  ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var joyceObj = JSON.parse(pm.environment.get(\"joyce-object\"));",
									"pm.variables.set(\"lat\",joyceObj.latitude)",
									"pm.variables.set(\"lon\",joyceObj.longitude)",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.openweathermap.org/data/2.5/weather?lat={{lat}}&lon={{lon}}&appid={{weather_api_key}}",
							"protocol": "https",
							"host": [
								"api",
								"openweathermap",
								"org"
							],
							"path": [
								"data",
								"2.5",
								"weather"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{lat}}"
								},
								{
									"key": "lon",
									"value": "{{lon}}"
								},
								{
									"key": "appid",
									"value": "{{weather_api_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PositionStack API - Sean's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataOut = pm.response.json().data[0];",
									"let lat = dataOut.latitude;",
									"let long = dataOut.longitude;",
									"",
									"// add long and lat from object",
									"var seanObj = JSON.parse(pm.environment.get(\"sean-object\"));",
									"seanObj.latitude = lat",
									"seanObj.longitude = long",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"sean-object\", JSON.stringify(seanObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes latitude which is \"+ lat, function () {",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");  ",
									"});",
									"",
									"pm.test(\"Response includes longitude which is \"+ long, function () {",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");  ",
									"});",
									"",
									"// Visulizer for single user location",
									"var template = `",
									"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
									"<script src=\"https://unpkg.com/topojson@3\"></script>",
									"",
									"<style>",
									"body { ",
									"    background-color: white;",
									"}",
									".title { ",
									"    font-size: 30px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    text-align: center;",
									"}",
									".container {",
									"    display: flex;",
									"    flex-direction: row;",
									"    justify-content: center;",
									"    align-items: center;",
									"}",
									".directions {",
									"    font-size: 18px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    padding-left: 20px;",
									"}",
									"#backgroundRectangle {",
									"    width: 100%;",
									"    height: 100%;",
									"    fill: #f5f5f5;",
									"}",
									".projectionOutline{",
									"    fill: #2f434a;",
									"    stroke: #4e5f66",
									"}",
									".tooltip {",
									"    position: absolute;",
									"    font-size: 12px;",
									"    width: auto;",
									"    height: auto;",
									"    pointer-events: none;",
									"    background-color: white;",
									"    padding: 3px;",
									"}",
									"",
									"</style>",
									"<h1 class=\"title\"></h1>",
									"<div class=\"container\">",
									"<div id=\"map\"></div>",
									"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
									"</div>",
									"<script>",
									"",
									"    pm.getData( function(err, value) {",
									"        d3.select(\".title\").html(value.title);",
									"        initVisualization(value.data);",
									"    });",
									"",
									"    // Function call that contains our visualization, necessary because we are loading an external map file",
									"    async function initVisualization(pmInput){",
									"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
									"        response.json().then( data => {",
									"            generateVisualization(pmInput, data);",
									"        });",
									"    }",
									"    ",
									"    // Generates d3 map visualization using an external map file and user-inputed data",
									"    // Utilizes d3.zoom and d3.brush",
									"    function generateVisualization(pmInput, mapData){",
									"        // Set the dimensions and margins of the graph",
									"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
									"        const width = 800 - margins.top - margins.bottom;",
									"        const height = 500 - margins.left - margins.right;",
									"        ",
									"        // Initializes d3.zoom to cover entire map SVG",
									"        const zoom = d3.zoom()",
									"            .scaleExtent([1,40])",
									"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"zoom\", () =>{",
									"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
									"            })",
									"        ",
									"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
									"        let brush = d3.brush()",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"end\", () => {",
									"                let extent = d3.event.selection;",
									"                if(extent){",
									"                    d3.select(\"#map-group\").call(brush.move, null);",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
									"                        .translate( -extent[0][0], -extent[0][1] ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
									"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
									"                    ",
									"                }",
									"                else{",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( 1 )",
									"                        .translate( 0,0 ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => d.circleSize)",
									"                        .attr(\"stroke-width\", 1);",
									"                }",
									"            });",
									"        ",
									"        // Set the dimensions and margins of the graph",
									"        let svg = d3.select(\"#map\")",
									"          .append(\"svg\")  ",
									"            .attr(\"width\", width + margins.left + margins.right)",
									"            .attr(\"height\", height + margins.top + margins.bottom)",
									"        svg.append(\"rect\")",
									"            .attr(\"id\", \"backgroundRectangle\");",
									"        svg = svg.append(\"g\")",
									"            .attr(\"id\", \"map-group\")",
									"            .call(brush);",
									"        ",
									"        // Draws Mercator projection of map onto SVG using the inputted map file",
									"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
									"        var mapGroup = svg.append(\"g\");",
									"        let mapPath = d3.geoPath().projection(projection);",
									"        mapGroup.selectAll(\"path\")",
									"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
									"            .enter()",
									"          .append(\"path\")",
									"            .attr(\"d\", mapPath)",
									"            .attr(\"class\", \"projectionOutline\");",
									"        ",
									"        // Calculate offset for tooltip",
									"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
									"        const offset = {top: rect.top, left: rect.left};",
									"        ",
									"        // Create hover tooltip",
									"        let tooltip = d3.select(\"#map\").append(\"div\")",
									"            .attr(\"class\", \"tooltip\");",
									"        // tooltip mouseover event handler",
									"        let tipMouseover = function(d){",
									"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b>\")",
									"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
									"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
									"              .transition()",
									"                .duration(200)      // ms",
									"                .style(\"opacity\", 0.9)",
									"            d3.select(this)",
									"                .style(\"stroke\", \"white\")",
									"                .style(\"opacity\", 1);",
									"        };",
									"        // tooltip mouseout event handler",
									"        let tipMouseout = function(d){",
									"            tooltip.transition()",
									"                .duration(300)",
									"                .style(\"opacity\", 0);",
									"            d3.select(this)",
									"                .style(\"stroke\", \"none\")",
									"                .style(\"opacity\", 0.6);",
									"        };",
									"",
									"        // Add pattern for custom postman logo",
									"        svg.append(\"defs\").append(\"pattern\")",
									"            .attr('id','pmImage')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr('patternUnits',\"userSpaceOnUse\")",
									"            .append('image')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
									"",
									"        // Appends points from user-inputted data onto map",
									"        svg.selectAll(\"circle\")",
									"            .data(pmInput)",
									"            .enter()",
									"            .append(\"circle\")",
									"                .attr(\"r\", 0)",
									"                //.style(\"fill\", d => d.color)",
									"                .style(\"fill\", \"url(#pmImage)\")",
									"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
									"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
									"                .style(\"opacity\", 0.6)",
									"                .on(\"mouseover\", tipMouseover)",
									"                .on(\"mouseout\", tipMouseout)",
									"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
									"                .attr(\"r\", d => d.circleSize)",
									"    }",
									"</script>",
									"`;",
									"",
									"var response = pm.response.json().data;",
									"let parsedData = [];",
									"",
									"//data parsing",
									"for (let postmanaut of response){",
									"    let tempEntry = {};",
									"    tempEntry.name = postmanaut.name;",
									"    tempEntry.lat = postmanaut.latitude;",
									"    tempEntry.long = postmanaut.longitude;",
									"    tempEntry.circleSize = 6;",
									"    tempEntry.color = \"#F09D51\";",
									"    parsedData.push(tempEntry);",
									"}",
									"",
									"pm.visualizer.set(template, {",
									"    data: parsedData,",
									"    title: \"Map of Postmanaut\"",
									"} );",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var seanObj = JSON.parse(pm.environment.get(\"sean-object\"));",
									"pm.variables.set(\"sean-location\",seanObj.location)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.positionstack.com/v1/forward?access_key={{api-access-key}}&query={{sean-location}}",
							"protocol": "http",
							"host": [
								"api",
								"positionstack",
								"com"
							],
							"path": [
								"v1",
								"forward"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{api-access-key}}"
								},
								{
									"key": "query",
									"value": "{{sean-location}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Open Weather Maps API -Sean's Location Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var weather = pm.response.json().weather[0].main;",
									"",
									"",
									"//add long and lat from object",
									"var seanObj = JSON.parse(pm.environment.get(\"sean-object\"));",
									"seanObj.weather = weather",
									"",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"sean-object\", JSON.stringify(seanObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes weather which is \"+ weather, function () {",
									"    pm.expect(pm.response.text()).to.include(\"weather\");  ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var seanObj = JSON.parse(pm.environment.get(\"sean-object\"));",
									"pm.variables.set(\"lat\",seanObj.latitude)",
									"pm.variables.set(\"lon\",seanObj.longitude)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.openweathermap.org/data/2.5/weather?lat={{lat}}&lon={{lon}}&appid={{weather_api_key}}",
							"protocol": "https",
							"host": [
								"api",
								"openweathermap",
								"org"
							],
							"path": [
								"data",
								"2.5",
								"weather"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{lat}}"
								},
								{
									"key": "lon",
									"value": "{{lon}}"
								},
								{
									"key": "appid",
									"value": "{{weather_api_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PositionStack API - Kevin's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var dataOut = pm.response.json().data[0];",
									"let lat = dataOut.latitude;",
									"let long = dataOut.longitude;",
									"",
									"// add long and lat from object",
									"var kevinObj = JSON.parse(pm.environment.get(\"kevin-object\"));",
									"kevinObj.latitude = lat",
									"kevinObj.longitude = long",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"kevin-object\", JSON.stringify(kevinObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes latitude which is \"+ lat, function () {",
									"    pm.expect(pm.response.text()).to.include(\"latitude\");  ",
									"});",
									"",
									"pm.test(\"Response includes longitude which is \"+ long, function () {",
									"    pm.expect(pm.response.text()).to.include(\"longitude\");  ",
									"});",
									"",
									"// Visulizer for single user location",
									"var template = `",
									"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
									"<script src=\"https://unpkg.com/topojson@3\"></script>",
									"",
									"<style>",
									"body { ",
									"    background-color: white;",
									"}",
									".title { ",
									"    font-size: 30px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    text-align: center;",
									"}",
									".container {",
									"    display: flex;",
									"    flex-direction: row;",
									"    justify-content: center;",
									"    align-items: center;",
									"}",
									".directions {",
									"    font-size: 18px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    padding-left: 20px;",
									"}",
									"#backgroundRectangle {",
									"    width: 100%;",
									"    height: 100%;",
									"    fill: #f5f5f5;",
									"}",
									".projectionOutline{",
									"    fill: #2f434a;",
									"    stroke: #4e5f66",
									"}",
									".tooltip {",
									"    position: absolute;",
									"    font-size: 12px;",
									"    width: auto;",
									"    height: auto;",
									"    pointer-events: none;",
									"    background-color: white;",
									"    padding: 3px;",
									"}",
									"",
									"</style>",
									"<h1 class=\"title\"></h1>",
									"<div class=\"container\">",
									"<div id=\"map\"></div>",
									"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
									"</div>",
									"<script>",
									"",
									"    pm.getData( function(err, value) {",
									"        d3.select(\".title\").html(value.title);",
									"        initVisualization(value.data);",
									"    });",
									"",
									"    // Function call that contains our visualization, necessary because we are loading an external map file",
									"    async function initVisualization(pmInput){",
									"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
									"        response.json().then( data => {",
									"            generateVisualization(pmInput, data);",
									"        });",
									"    }",
									"    ",
									"    // Generates d3 map visualization using an external map file and user-inputed data",
									"    // Utilizes d3.zoom and d3.brush",
									"    function generateVisualization(pmInput, mapData){",
									"        // Set the dimensions and margins of the graph",
									"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
									"        const width = 800 - margins.top - margins.bottom;",
									"        const height = 500 - margins.left - margins.right;",
									"        ",
									"        // Initializes d3.zoom to cover entire map SVG",
									"        const zoom = d3.zoom()",
									"            .scaleExtent([1,40])",
									"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"zoom\", () =>{",
									"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
									"            })",
									"        ",
									"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
									"        let brush = d3.brush()",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"end\", () => {",
									"                let extent = d3.event.selection;",
									"                if(extent){",
									"                    d3.select(\"#map-group\").call(brush.move, null);",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
									"                        .translate( -extent[0][0], -extent[0][1] ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
									"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
									"                    ",
									"                }",
									"                else{",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( 1 )",
									"                        .translate( 0,0 ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => d.circleSize)",
									"                        .attr(\"stroke-width\", 1);",
									"                }",
									"            });",
									"        ",
									"        // Set the dimensions and margins of the graph",
									"        let svg = d3.select(\"#map\")",
									"          .append(\"svg\")  ",
									"            .attr(\"width\", width + margins.left + margins.right)",
									"            .attr(\"height\", height + margins.top + margins.bottom)",
									"        svg.append(\"rect\")",
									"            .attr(\"id\", \"backgroundRectangle\");",
									"        svg = svg.append(\"g\")",
									"            .attr(\"id\", \"map-group\")",
									"            .call(brush);",
									"        ",
									"        // Draws Mercator projection of map onto SVG using the inputted map file",
									"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
									"        var mapGroup = svg.append(\"g\");",
									"        let mapPath = d3.geoPath().projection(projection);",
									"        mapGroup.selectAll(\"path\")",
									"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
									"            .enter()",
									"          .append(\"path\")",
									"            .attr(\"d\", mapPath)",
									"            .attr(\"class\", \"projectionOutline\");",
									"        ",
									"        // Calculate offset for tooltip",
									"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
									"        const offset = {top: rect.top, left: rect.left};",
									"        ",
									"        // Create hover tooltip",
									"        let tooltip = d3.select(\"#map\").append(\"div\")",
									"            .attr(\"class\", \"tooltip\");",
									"        // tooltip mouseover event handler",
									"        let tipMouseover = function(d){",
									"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b>\")",
									"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
									"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
									"              .transition()",
									"                .duration(200)      // ms",
									"                .style(\"opacity\", 0.9)",
									"            d3.select(this)",
									"                .style(\"stroke\", \"white\")",
									"                .style(\"opacity\", 1);",
									"        };",
									"        // tooltip mouseout event handler",
									"        let tipMouseout = function(d){",
									"            tooltip.transition()",
									"                .duration(300)",
									"                .style(\"opacity\", 0);",
									"            d3.select(this)",
									"                .style(\"stroke\", \"none\")",
									"                .style(\"opacity\", 0.6);",
									"        };",
									"",
									"        // Add pattern for custom postman logo",
									"        svg.append(\"defs\").append(\"pattern\")",
									"            .attr('id','pmImage')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr('patternUnits',\"userSpaceOnUse\")",
									"            .append('image')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
									"",
									"        // Appends points from user-inputted data onto map",
									"        svg.selectAll(\"circle\")",
									"            .data(pmInput)",
									"            .enter()",
									"            .append(\"circle\")",
									"                .attr(\"r\", 0)",
									"                //.style(\"fill\", d => d.color)",
									"                .style(\"fill\", \"url(#pmImage)\")",
									"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
									"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
									"                .style(\"opacity\", 0.6)",
									"                .on(\"mouseover\", tipMouseover)",
									"                .on(\"mouseout\", tipMouseout)",
									"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
									"                .attr(\"r\", d => d.circleSize)",
									"    }",
									"</script>",
									"`;",
									"",
									"var response = pm.response.json().data;",
									"let parsedData = [];",
									"",
									"//data parsing",
									"for (let postmanaut of response){",
									"    let tempEntry = {};",
									"    tempEntry.name = postmanaut.name;",
									"    tempEntry.lat = postmanaut.latitude;",
									"    tempEntry.long = postmanaut.longitude;",
									"    tempEntry.circleSize = 6;",
									"    tempEntry.color = \"#F09D51\";",
									"    parsedData.push(tempEntry);",
									"}",
									"",
									"pm.visualizer.set(template, {",
									"    data: parsedData,",
									"    title: \"Map of Postmanaut\"",
									"} );",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var kevinObj = JSON.parse(pm.environment.get(\"kevin-object\"));",
									"pm.variables.set(\"kevin-location\",kevinObj.location)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.positionstack.com/v1/forward?access_key={{api-access-key}}&query={{kevin-location}}",
							"protocol": "http",
							"host": [
								"api",
								"positionstack",
								"com"
							],
							"path": [
								"v1",
								"forward"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{api-access-key}}"
								},
								{
									"key": "query",
									"value": "{{kevin-location}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Open Weather Maps API -Kevin's Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var weather = pm.response.json().weather[0].main;",
									"",
									"",
									"//add long and lat from object",
									"var kevinObj = JSON.parse(pm.environment.get(\"kevin-object\"));",
									"kevinObj.weather = weather",
									"",
									"",
									"// set lat and long to main object",
									"pm.environment.set(\"kevin-object\", JSON.stringify(kevinObj));",
									"",
									"// tests",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes weather which is \"+ weather, function () {",
									"    pm.expect(pm.response.text()).to.include(\"weather\");  ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// get location from object before you run the api ",
									"var kevinObj = JSON.parse(pm.environment.get(\"kevin-object\"));",
									"pm.variables.set(\"lat\",kevinObj.latitude)",
									"pm.variables.set(\"lon\",kevinObj.longitude)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.openweathermap.org/data/2.5/weather?lat={{lat}}&lon={{lon}}&appid={{weather_api_key}}",
							"protocol": "https",
							"host": [
								"api",
								"openweathermap",
								"org"
							],
							"path": [
								"data",
								"2.5",
								"weather"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{lat}}"
								},
								{
									"key": "lon",
									"value": "{{lon}}"
								},
								{
									"key": "appid",
									"value": "{{weather_api_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Postmanauts - Visualize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Visulizer for multi user location",
									"var template = `",
									"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
									"<script src=\"https://unpkg.com/topojson@3\"></script>",
									"",
									"<style>",
									"body { ",
									"    background-color: white;",
									"}",
									".title { ",
									"    font-size: 30px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    text-align: center;",
									"}",
									".container {",
									"    display: flex;",
									"    flex-direction: row;",
									"    justify-content: center;",
									"    align-items: center;",
									"}",
									".directions {",
									"    font-size: 18px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    padding-left: 20px;",
									"}",
									"#backgroundRectangle {",
									"    width: 100%;",
									"    height: 100%;",
									"    fill: #f5f5f5;",
									"}",
									".projectionOutline{",
									"    fill: #2f434a;",
									"    stroke: #4e5f66",
									"}",
									".tooltip {",
									"    position: absolute;",
									"    font-size: 12px;",
									"    width: auto;",
									"    height: auto;",
									"    pointer-events: none;",
									"    background-color: white;",
									"    padding: 3px;",
									"}",
									"",
									"</style>",
									"<h1 class=\"title\"></h1>",
									"<div class=\"container\">",
									"<div id=\"map\"></div>",
									"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
									"</div>",
									"<script>",
									"",
									"    pm.getData( function(err, value) {",
									"        d3.select(\".title\").html(value.title);",
									"        initVisualization(value.data);",
									"    });",
									"",
									"    // Function call that contains our visualization, necessary because we are loading an external map file",
									"    async function initVisualization(pmInput){",
									"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
									"        response.json().then( data => {",
									"            generateVisualization(pmInput, data);",
									"        });",
									"    }",
									"    ",
									"    // Generates d3 map visualization using an external map file and user-inputed data",
									"    // Utilizes d3.zoom and d3.brush",
									"    function generateVisualization(pmInput, mapData){",
									"        // Set the dimensions and margins of the graph",
									"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
									"        const width = 800 - margins.top - margins.bottom;",
									"        const height = 500 - margins.left - margins.right;",
									"        ",
									"        // Initializes d3.zoom to cover entire map SVG",
									"        const zoom = d3.zoom()",
									"            .scaleExtent([1,40])",
									"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"zoom\", () =>{",
									"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
									"            })",
									"        ",
									"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
									"        let brush = d3.brush()",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"end\", () => {",
									"                let extent = d3.event.selection;",
									"                if(extent){",
									"                    d3.select(\"#map-group\").call(brush.move, null);",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
									"                        .translate( -extent[0][0], -extent[0][1] ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
									"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
									"                    ",
									"                }",
									"                else{",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( 1 )",
									"                        .translate( 0,0 ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => d.circleSize)",
									"                        .attr(\"stroke-width\", 1);",
									"                }",
									"            });",
									"        ",
									"        // Set the dimensions and margins of the graph",
									"        let svg = d3.select(\"#map\")",
									"          .append(\"svg\")  ",
									"            .attr(\"width\", width + margins.left + margins.right)",
									"            .attr(\"height\", height + margins.top + margins.bottom)",
									"        svg.append(\"rect\")",
									"            .attr(\"id\", \"backgroundRectangle\");",
									"        svg = svg.append(\"g\")",
									"            .attr(\"id\", \"map-group\")",
									"            .call(brush);",
									"        ",
									"        // Draws Mercator projection of map onto SVG using the inputted map file",
									"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
									"        var mapGroup = svg.append(\"g\");",
									"        let mapPath = d3.geoPath().projection(projection);",
									"        mapGroup.selectAll(\"path\")",
									"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
									"            .enter()",
									"          .append(\"path\")",
									"            .attr(\"d\", mapPath)",
									"            .attr(\"class\", \"projectionOutline\");",
									"        ",
									"        // Calculate offset for tooltip",
									"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
									"        const offset = {top: rect.top, left: rect.left};",
									"        ",
									"        // Create hover tooltip",
									"        let tooltip = d3.select(\"#map\").append(\"div\")",
									"            .attr(\"class\", \"tooltip\");",
									"        // tooltip mouseover event handler",
									"        let tipMouseover = function(d){",
									"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Location: <b>\" + d.location + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b><br/>Weather: <b>\"+ d.weather + \"</b>\")",
									"",
									"",
									"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
									"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
									"              .transition()",
									"                .duration(200)      // ms",
									"                .style(\"opacity\", 0.9)",
									"            d3.select(this)",
									"                .style(\"stroke\", \"white\")",
									"                .style(\"opacity\", 1);",
									"        };",
									"        // tooltip mouseout event handler",
									"        let tipMouseout = function(d){",
									"            tooltip.transition()",
									"                .duration(300)",
									"                .style(\"opacity\", 0);",
									"            d3.select(this)",
									"                .style(\"stroke\", \"none\")",
									"                .style(\"opacity\", 0.6);",
									"        };",
									"",
									"        // Add pattern for custom postman logo",
									"        svg.append(\"defs\").append(\"pattern\")",
									"            .attr('id','pmImage')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr('patternUnits',\"userSpaceOnUse\")",
									"            .append('image')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
									"",
									"        // Appends points from user-inputted data onto map",
									"        svg.selectAll(\"circle\")",
									"            .data(pmInput)",
									"            .enter()",
									"            .append(\"circle\")",
									"                .attr(\"r\", 0)",
									"                .style(\"fill\", d => d.color)",
									"                //.style(\"fill\", \"url(#pmImage)\")",
									"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
									"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
									"                .style(\"opacity\", 0.6)",
									"                .on(\"mouseover\", tipMouseover)",
									"                .on(\"mouseout\", tipMouseout)",
									"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
									"                .attr(\"r\", d => d.circleSize)",
									"    }",
									"</script>",
									"`;",
									"// get data from echo output",
									"var response = pm.response.json().data;",
									"let parsedData = [];",
									"",
									"//data parsing",
									"for (let postmanaut of response){",
									"    let tempEntry = {};",
									"    tempEntry.name = postmanaut.name;",
									"    tempEntry.location = postmanaut.location;",
									"    tempEntry.lat = postmanaut.latitude;",
									"    tempEntry.long = postmanaut.longitude;",
									"    tempEntry.weather = postmanaut.weather;",
									"    tempEntry.circleSize = 6;",
									"    tempEntry.color = \"#F09D51\";",
									"    parsedData.push(tempEntry);",
									"}",
									"",
									"pm.visualizer.set(template, {",
									"    data: parsedData,",
									"    title: \"Map of Postmanauts\"",
									"} );",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Parse objects from environment variable ",
									"var poojaobj = JSON.parse(pm.environment.get(\"pooja-object\"));",
									"var janobj = JSON.parse(pm.environment.get(\"jan-object\"));",
									"var arlemiobj = JSON.parse(pm.environment.get(\"arlemi-object\"));",
									"var ianobj = JSON.parse(pm.environment.get(\"ian-object\"));",
									"var joyceobj = JSON.parse(pm.environment.get(\"joyce-object\"));",
									"var seanobj = JSON.parse(pm.environment.get(\"sean-object\"));",
									"var kevinobj = JSON.parse(pm.environment.get(\"kevin-object\"));",
									"",
									"// Build postmanauts array",
									" let postmanauts = [",
									"     ",
									"     {",
									"        name: poojaobj.name,",
									"        location: poojaobj.location,",
									"        latitude: poojaobj.latitude,",
									"        longitude: poojaobj.longitude,",
									"        weather:poojaobj.weather,",
									"",
									"    },",
									"    {",
									"        name: janobj.name,",
									"        location: janobj.location,",
									"        latitude: janobj.latitude,",
									"        longitude: janobj.longitude,",
									"        weather:janobj.weather,",
									"    },",
									"    {",
									"         name: arlemiobj.name,",
									"        location: arlemiobj.location,",
									"        latitude: arlemiobj.latitude,",
									"        longitude:arlemiobj.longitude,",
									"         weather:arlemiobj.weather,",
									"    },",
									"    {",
									"        name: ianobj.name,",
									"        location: ianobj.location,",
									"        latitude: ianobj.latitude,",
									"        longitude: ianobj.longitude,",
									"         weather:ianobj.weather,",
									"    },  ",
									"    {",
									"        name: joyceobj.name,",
									"        location: joyceobj.location,",
									"        latitude: joyceobj.latitude,",
									"        longitude: joyceobj.longitude,",
									"        weather:joyceobj.weather,",
									"     }, ",
									"     {",
									"        name: seanobj.name,",
									"        location: seanobj.location,",
									"        latitude: seanobj.latitude,",
									"        longitude: seanobj.longitude,",
									"        weather:seanobj.weather,",
									"     },",
									"     {",
									"          name: kevinobj.name,",
									"        location: kevinobj.location,",
									"        latitude: kevinobj.latitude,",
									"        longitude: kevinobj.longitude,",
									"        weather:kevinobj.weather,",
									"",
									"     }",
									"    ]",
									"",
									"// Set array to req_body",
									"pm.collectionVariables.set('req_body', JSON.stringify(postmanauts));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{req_body}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			],
			"description": "This folder shows how you can call each API - [Twitter User by Username](https://www.postman.com/twitter/workspace/twitter-s-public-workspace/request/9956214-288337e6-91e5-4297-bde2-cae96a549732), Position Stack and Open Weather individually for each Twitter User. In this case we have 7 twitter users on the DevRel team, therefore there are individual get requests for each api for each twitter user.\n\nLets look at each individual request:\n\n**GET** Twitter User by Username - user\n\n*   Add username to Path Variable `username`\n*   Check off Query Parameter `user.fields` to get information for each user such as :\n    \n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1651027759914_Screen+Shot+2022-04-26+at+10.49.01+PM.png)\n\n*   Tests\n    *   Parse the JSON output and create object for each user\n    *   Initialize latitude and longitude as null. This will change in the next request\n    *   Add object to environment variable called `user-object`\n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1651027829661_Screen+Shot+2022-04-26+at+10.50.27+PM.png)\n\n**GET** PositionStack API - User's Location\n\n*   Pre-request → Read object from last request and add location as query parameter.\n*   Set location variable with `pm.variables.set()` method\n*   Add latitude and longitude from API response to environment variable user-object\n    \n\n**GET** Open Weather Maps API - Pooja's Location\n\n*   Pre-request → Read object from last request and add latitude and longitude as query parameter.\n*   Set latitude and longitude variables with `pm.variables.set()` method\n*   Add weather from API response to environment variable user-object\n    \n\n**POST** Postmanauts - Visualize\n\n*   Pre-request → Build array of objects from environment variables\n*   Set array to request body through collection variable\n*   Test → Parse response for name , location, latitude, longitude and weather\n    \n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1651029096225_Screen+Shot+2022-04-26+at+11.11.33+PM.png)\n\nYou can use the [Collection Runner](https://learning.postman.com/docs/running-collections/intro-to-collection-runs/) to run all of these individual tests instead of manually clicking through"
		},
		{
			"name": "Using  pm.sendRequest",
			"item": [
				{
					"name": "Three Postman Requests",
					"item": [
						{
							"name": "Twitter Users by Username - All",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Parse response data",
											"let response = pm.response.json().data;",
											"",
											"// Create array of users",
											"let users =[]",
											"",
											"// create object for each user from response",
											"response.map(twitterObj=>{",
											"let obj= { ",
											"     name : twitterObj.name,",
											"     location:twitterObj.location,",
											"     latitude: null,",
											"     longitude: null",
											"        }",
											"    users.push(obj)        ",
											"})",
											"",
											"// set users object for environment variable ",
											"pm.environment.set(\"users\", JSON.stringify(users));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by?usernames={{usernames}}&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by"
									],
									"query": [
										{
											"key": "usernames",
											"value": "{{usernames}}",
											"description": "Required. Enter up to 100 comma-separated usernames."
										},
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
										},
										{
											"key": "expansions",
											"value": "",
											"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,reply_settings,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
											"disabled": true
										}
									]
								},
								"description": "This endpoint returns details about up to 100 users specified by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by) for this endpoint."
							},
							"response": [
								{
									"name": "200 Success - Request Fields for Users and Expanded Pinned Tweet",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf",
													"description": "Required."
												},
												{
													"key": "user.fields",
													"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld"
												},
												{
													"key": "expansions",
													"value": "pinned_tweet_id",
													"description": "pinned_tweet_id"
												},
												{
													"key": "tweet.fields",
													"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
													"description": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "1748"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Fri, 26 Jun 2020 16:32:49 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "eae8bea11e85fe49e732de33763f0cf2"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "1"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593189419"
										},
										{
											"key": "x-response-time",
											"value": "110"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2007-02-20T14:35:54.000Z\",\n            \"description\": \"Black queer lives matter.\\nBlack trans lives matter.\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/TAXQpspyHn\",\n                            \"expanded_url\": \"https://about.twitter.com/\",\n                            \"display_url\": \"about.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 52,\n                            \"end\": 69,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"783214\",\n            \"location\": \"Everywhere\",\n            \"name\": \"Twitter\",\n            \"pinned_tweet_id\": \"1274087687469715457\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1270500941498912768/W-80pLvu_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/TAXQpspyHn\",\n            \"username\": \"Twitter\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2013-12-14T04:35:55.000Z\",\n            \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/3ZX3TNiZCY\",\n                            \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                            \"display_url\": \"developer.twitter.com/en/community\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 23,\n                            \"end\": 30,\n                            \"tag\": \"DevRel\"\n                        },\n                        {\n                            \"start\": 113,\n                            \"end\": 130,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"2244994945\",\n            \"location\": \"127.0.0.1\",\n            \"name\": \"Twitter Dev\",\n            \"pinned_tweet_id\": \"1255542774432063488\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/3ZX3TNiZCY\",\n            \"username\": \"TwitterDev\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2007-05-23T06:01:13.000Z\",\n            \"description\": \"The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/8IkCzCDr19\",\n                            \"expanded_url\": \"https://developer.twitter.com\",\n                            \"display_url\": \"developer.twitter.com\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"6253282\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter API\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/942858479592554497/BbazLO9L_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/8IkCzCDr19\",\n            \"username\": \"TwitterAPI\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2012-02-17T20:40:28.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/UFN8PpMrxw\",\n                            \"expanded_url\": \"https://careers.twitter.com/content/careers-twitter/en/jobs.html#location=careers-twitter%3Alocation\",\n                            \"display_url\": \"careers.twitter.com/content/career…\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"495309159\",\n            \"location\": \"New York, NY\",\n            \"name\": \"Twitter New York City\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1016781101011034115/p0Ie-_Dr_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/UFN8PpMrxw\",\n            \"username\": \"TwitterNYC\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2010-07-28T18:40:01.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/MQRffLoRTw\",\n                            \"expanded_url\": \"https://careers.twitter.com/\",\n                            \"display_url\": \"careers.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"172020392\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter San Francisco\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/875159529008226305/7jXeHhZC_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/MQRffLoRTw\",\n            \"username\": \"TwitterSF\",\n            \"verified\": true\n        }\n    ],\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"attachments\": {\n                    \"media_keys\": [\n                        \"3_1274086027544498176\"\n                    ]\n                },\n                \"author_id\": \"783214\",\n                \"conversation_id\": \"1274087687469715457\",\n                \"created_at\": \"2020-06-19T21:12:30.000Z\",\n                \"entities\": {\n                    \"mentions\": [\n                        {\n                            \"start\": 17,\n                            \"end\": 29,\n                            \"username\": \"FredTJoseph\"\n                        }\n                    ],\n                    \"urls\": [\n                        {\n                            \"start\": 30,\n                            \"end\": 53,\n                            \"url\": \"https://t.co/lNTOkyguG1\",\n                            \"expanded_url\": \"https://twitter.com/Twitter/status/1274087687469715457/photo/1\",\n                            \"display_url\": \"pic.twitter.com/lNTOkyguG1\"\n                        }\n                    ]\n                },\n                \"id\": \"1274087687469715457\",\n                \"lang\": \"et\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"📍 Minneapolis\\n🗣️ @FredTJoseph https://t.co/lNTOkyguG1\"\n            },\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "429 Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=jack,twitterdev",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "jack,twitterdev"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "46"
										},
										{
											"key": "content-type",
											"value": "text/plain;charset=utf-8"
										},
										{
											"key": "date",
											"value": "Wed, 24 Jun 2020 17:16:16 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-connection-hash",
											"value": "86a90a7aa13fde1840d52be0d1faf5c4"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "0"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593019345"
										},
										{
											"key": "x-response-time",
											"value": "7"
										}
									],
									"cookie": [],
									"body": "Rate limit exceeded\n"
								},
								{
									"name": "200 Success - Default Payload",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "1222"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Tue, 30 Jun 2020 16:41:09 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "7a7652a95e302d19d13b9444dd88cb49"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "12"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593535752"
										},
										{
											"key": "x-response-time",
											"value": "168"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"783214\",\n            \"name\": \"Twitter\",\n            \"username\": \"Twitter\"\n        },\n        {\n            \"id\": \"2244994945\",\n            \"name\": \"Twitter Dev\",\n            \"username\": \"TwitterDev\"\n        },\n        {\n            \"id\": \"6253282\",\n            \"name\": \"Twitter API\",\n            \"username\": \"TwitterAPI\"\n        },\n        {\n            \"id\": \"495309159\",\n            \"name\": \"Twitter New York City\",\n            \"username\": \"TwitterNYC\"\n        },\n        {\n            \"id\": \"172020392\",\n            \"name\": \"Twitter San Francisco\",\n            \"username\": \"TwitterSF\"\n        },\n        {\n            \"id\": \"95731075\",\n            \"name\": \"Twitter Safety\",\n            \"username\": \"TwitterSafety\"\n        },\n        {\n            \"id\": \"2548985366\",\n            \"name\": \"Twitter Blackbirds\",\n            \"username\": \"Blackbirds\"\n        },\n        {\n            \"id\": \"277761722\",\n            \"name\": \"Twitter UK\",\n            \"username\": \"TwitterUK\"\n        },\n        {\n            \"id\": \"17874544\",\n            \"name\": \"Twitter Support\",\n            \"username\": \"TwitterSupport\"\n        },\n        {\n            \"id\": \"300392950\",\n            \"name\": \"Twitter Sports\",\n            \"username\": \"TwitterSports\"\n        },\n        {\n            \"id\": \"87532773\",\n            \"name\": \"Twitter Design\",\n            \"username\": \"TwitterDesign\"\n        },\n        {\n            \"id\": \"372575989\",\n            \"name\": \"Twitter News\",\n            \"username\": \"TwitterNews\"\n        },\n        {\n            \"id\": \"3260518932\",\n            \"name\": \"Twitter Moments\",\n            \"username\": \"TwitterMoments\"\n        },\n        {\n            \"id\": \"121291606\",\n            \"name\": \"Twitter Business\",\n            \"username\": \"TwitterBusiness\"\n        },\n        {\n            \"id\": \"158079127\",\n            \"name\": \"Twitter Nonprofits\",\n            \"username\": \"Nonprofits\"\n        },\n        {\n            \"id\": \"3282859598\",\n            \"name\": \"Twitter Video\",\n            \"username\": \"TwitterVideo\"\n        },\n        {\n            \"id\": \"103770785\",\n            \"name\": \"Twitter India\",\n            \"username\": \"TwitterIndia\"\n        },\n        {\n            \"id\": \"586198217\",\n            \"name\": \"Twitter TV\",\n            \"username\": \"TwitterTV\"\n        },\n        {\n            \"id\": \"216531294\",\n            \"name\": \"Twitter Korea\",\n            \"username\": \"TwitterKorea\"\n        },\n        {\n            \"id\": \"1526228120\",\n            \"name\": \"Twitter Data\",\n            \"username\": \"TwitterData\"\n        },\n        {\n            \"id\": \"222953824\",\n            \"name\": \"TwitterGov\",\n            \"username\": \"TwitterGov\"\n        },\n        {\n            \"id\": \"1603818258\",\n            \"name\": \"Twitter Investor Relations\",\n            \"username\": \"TwitterIR\"\n        },\n        {\n            \"id\": \"2548979088\",\n            \"name\": \"Twitter Alas\",\n            \"username\": \"TwitterAlas\"\n        },\n        {\n            \"id\": \"2244983430\",\n            \"name\": \"Twitter Singapore\",\n            \"username\": \"TwitterSG\"\n        },\n        {\n            \"id\": \"1347713256\",\n            \"name\": \"Twitter Canada\",\n            \"username\": \"TwitterCanada\"\n        },\n        {\n            \"id\": \"376825877\",\n            \"name\": \"Twitter Open Source\",\n            \"username\": \"TwitterOSS\"\n        },\n        {\n            \"id\": \"6844292\",\n            \"name\": \"Twitter Engineering\",\n            \"username\": \"TwitterEng\"\n        },\n        {\n            \"id\": \"738118115595165697\",\n            \"name\": \"Twitter Stripes\",\n            \"username\": \"TwitterStripes\"\n        },\n        {\n            \"id\": \"738118487122419712\",\n            \"name\": \"Twitter Asians\",\n            \"username\": \"TwitterAsians\"\n        },\n        {\n            \"id\": \"218984871\",\n            \"name\": \"Twitter Public Policy\",\n            \"username\": \"Policy\"\n        },\n        {\n            \"id\": \"2550997820\",\n            \"name\": \"Twitter Indonesia\",\n            \"username\": \"TwitterID\"\n        },\n        {\n            \"id\": \"1159458169\",\n            \"name\": \"Twitter 政治\",\n            \"username\": \"TwitterGovJP\"\n        },\n        {\n            \"id\": \"2296297326\",\n            \"name\": \"Twitter Moments UK & Ireland\",\n            \"username\": \"UKMoments\"\n        },\n        {\n            \"id\": \"234489024\",\n            \"name\": \"Twitter Comms\",\n            \"username\": \"TwitterComms\"\n        },\n        {\n            \"id\": \"3873936134\",\n            \"name\": \"Twitter Gaming @ home\",\n            \"username\": \"TwitterGaming\"\n        },\n        {\n            \"id\": \"2228891959\",\n            \"name\": \"Twitter MENA\",\n            \"username\": \"TwitterMENA\"\n        },\n        {\n            \"id\": \"791978718\",\n            \"name\": \"Twitter Official Partner\",\n            \"username\": \"OfficialPartner\"\n        },\n        {\n            \"id\": \"427475002\",\n            \"name\": \"Twitter Books\",\n            \"username\": \"TwitterBooks\"\n        },\n        {\n            \"id\": \"1194267639100723200\",\n            \"name\": \"Twitter Retweets\",\n            \"username\": \"TwitterRetweets\"\n        },\n        {\n            \"id\": \"1168976680867762177\",\n            \"name\": \"Twitter Able\",\n            \"username\": \"TwitterAble\"\n        },\n        {\n            \"id\": \"905409822\",\n            \"name\": \"Twitter SRE\",\n            \"username\": \"TwitterSRE\"\n        },\n        {\n            \"id\": \"738115375477362688\",\n            \"name\": \"Twitter Moments India\",\n            \"username\": \"MomentsIndia\"\n        },\n        {\n            \"id\": \"88723966\",\n            \"name\": \"Twitter Seguro\",\n            \"username\": \"TwitterSeguro\"\n        },\n        {\n            \"id\": \"1049385226424786944\",\n            \"name\": \"Twitter Miami\",\n            \"username\": \"TwitterMiami\"\n        },\n        {\n            \"id\": \"284201599\",\n            \"name\": \"Twitter Terns\",\n            \"username\": \"terns\"\n        },\n        {\n            \"id\": \"1705676064\",\n            \"name\": \"Twitter公式採用アカウント\",\n            \"username\": \"JoinTheFlockJP\"\n        },\n        {\n            \"id\": \"2861317614\",\n            \"name\": \"Twitter ファッション\",\n            \"username\": \"TwitterFashnJP\"\n        },\n        {\n            \"id\": \"3873965293\",\n            \"name\": \"Twitter Moments en Español\",\n            \"username\": \"MomentsES\"\n        },\n        {\n            \"id\": \"1244731491088809984\",\n            \"name\": \"Twitter Thailand\",\n            \"username\": \"TwitterThailand\"\n        },\n        {\n            \"id\": \"4172587277\",\n            \"name\": \"Twitter Moments Brasil\",\n            \"username\": \"MomentsBrasil\"\n        },\n        {\n            \"id\": \"717465714357972992\",\n            \"name\": \"Twitter Video India\",\n            \"username\": \"TwitterVideoIN\"\n        },\n        {\n            \"id\": \"862314223\",\n            \"name\": \"Twitter ミュージック\",\n            \"username\": \"TwitterMusicJP\"\n        },\n        {\n            \"id\": \"2551000568\",\n            \"name\": \"Twitter Mktg Latam\",\n            \"username\": \"TwitterMktLatam\"\n        },\n        {\n            \"id\": \"2548977510\",\n            \"name\": \"Twitter Careers Brasil\",\n            \"username\": \"JoinTheFlockBR\"\n        },\n        {\n            \"id\": \"1159274324\",\n            \"name\": \"Twitter スポーツ\",\n            \"username\": \"TwitterSportsJP\"\n        }\n    ]\n}"
								},
								{
									"name": "200 Success - Request User Fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf",
													"description": "Required."
												},
												{
													"key": "user.fields",
													"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld"
												},
												{
													"key": "expansions",
													"value": "",
													"description": "pinned_tweet_id",
													"disabled": true
												},
												{
													"key": "tweet.fields",
													"value": "",
													"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "1027"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Fri, 26 Jun 2020 16:39:42 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "eae8bea11e85fe49e732de33763f0cf2"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "13"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593190457"
										},
										{
											"key": "x-response-time",
											"value": "72"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2007-02-20T14:35:54.000Z\",\n            \"description\": \"Black queer lives matter.\\nBlack trans lives matter.\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/TAXQpspyHn\",\n                            \"expanded_url\": \"https://about.twitter.com/\",\n                            \"display_url\": \"about.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 52,\n                            \"end\": 69,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"783214\",\n            \"location\": \"Everywhere\",\n            \"name\": \"Twitter\",\n            \"pinned_tweet_id\": \"1274087687469715457\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1270500941498912768/W-80pLvu_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/TAXQpspyHn\",\n            \"username\": \"Twitter\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2013-12-14T04:35:55.000Z\",\n            \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/3ZX3TNiZCY\",\n                            \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                            \"display_url\": \"developer.twitter.com/en/community\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 23,\n                            \"end\": 30,\n                            \"tag\": \"DevRel\"\n                        },\n                        {\n                            \"start\": 113,\n                            \"end\": 130,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"2244994945\",\n            \"location\": \"127.0.0.1\",\n            \"name\": \"Twitter Dev\",\n            \"pinned_tweet_id\": \"1255542774432063488\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/3ZX3TNiZCY\",\n            \"username\": \"TwitterDev\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2007-05-23T06:01:13.000Z\",\n            \"description\": \"The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/8IkCzCDr19\",\n                            \"expanded_url\": \"https://developer.twitter.com\",\n                            \"display_url\": \"developer.twitter.com\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"6253282\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter API\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/942858479592554497/BbazLO9L_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/8IkCzCDr19\",\n            \"username\": \"TwitterAPI\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2012-02-17T20:40:28.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/UFN8PpMrxw\",\n                            \"expanded_url\": \"https://careers.twitter.com/content/careers-twitter/en/jobs.html#location=careers-twitter%3Alocation\",\n                            \"display_url\": \"careers.twitter.com/content/career…\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"495309159\",\n            \"location\": \"New York, NY\",\n            \"name\": \"Twitter New York City\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1016781101011034115/p0Ie-_Dr_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/UFN8PpMrxw\",\n            \"username\": \"TwitterNYC\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2010-07-28T18:40:01.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/MQRffLoRTw\",\n                            \"expanded_url\": \"https://careers.twitter.com/\",\n                            \"display_url\": \"careers.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"172020392\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter San Francisco\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/875159529008226305/7jXeHhZC_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/MQRffLoRTw\",\n            \"username\": \"TwitterSF\",\n            \"verified\": true\n        }\n    ]\n}"
								},
								{
									"name": "400 Bad Request - Too Many Users",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
													"description": "Required. Enter up to 100 comma-separated usernames."
												},
												{
													"key": "user.fields",
													"value": null,
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
													"disabled": true
												},
												{
													"key": "expansions",
													"value": null,
													"description": "pinned_tweet_id",
													"disabled": true
												},
												{
													"key": "tweet.fields",
													"value": null,
													"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "457"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Tue, 30 Jun 2020 17:22:45 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "857207159289071cdd445778e071a674"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "1"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593538196"
										},
										{
											"key": "x-response-time",
											"value": "20"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"parameters\": {\n                \"usernames\": [\n                    \"twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp\"\n                ]\n            },\n            \"message\": \"size [110] is not between 1 and 100\"\n        }\n    ],\n    \"title\": \"Invalid Request\",\n    \"detail\": \"One or more parameters to your request was invalid.\",\n    \"type\": \"https://api.twitter.com/2/problems/invalid-request\"\n}"
								},
								{
									"name": "200 Success - Some Users Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitterrrrrrr,twitterdevvvvvv,twitterapiiiii,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitterrrrrrr,twitterdevvvvvv,twitterapiiiii,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign",
													"description": "Required. Enter up to 100 comma-separated usernames."
												},
												{
													"key": "user.fields",
													"value": null,
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
													"disabled": true
												},
												{
													"key": "expansions",
													"value": null,
													"description": "pinned_tweet_id",
													"disabled": true
												},
												{
													"key": "tweet.fields",
													"value": null,
													"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "396"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Tue, 30 Jun 2020 17:21:52 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "857207159289071cdd445778e071a674"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "2"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593538196"
										},
										{
											"key": "x-response-time",
											"value": "99"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"495309159\",\n            \"name\": \"Twitter New York City\",\n            \"username\": \"TwitterNYC\"\n        },\n        {\n            \"id\": \"172020392\",\n            \"name\": \"Twitter San Francisco\",\n            \"username\": \"TwitterSF\"\n        },\n        {\n            \"id\": \"95731075\",\n            \"name\": \"Twitter Safety\",\n            \"username\": \"TwitterSafety\"\n        },\n        {\n            \"id\": \"2548985366\",\n            \"name\": \"Twitter Blackbirds\",\n            \"username\": \"Blackbirds\"\n        },\n        {\n            \"id\": \"277761722\",\n            \"name\": \"Twitter UK\",\n            \"username\": \"TwitterUK\"\n        },\n        {\n            \"id\": \"17874544\",\n            \"name\": \"Twitter Support\",\n            \"username\": \"TwitterSupport\"\n        },\n        {\n            \"id\": \"300392950\",\n            \"name\": \"Twitter Sports\",\n            \"username\": \"TwitterSports\"\n        },\n        {\n            \"id\": \"87532773\",\n            \"name\": \"Twitter Design\",\n            \"username\": \"TwitterDesign\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with usernames: [twitterrrrrrr].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterrrrrrr\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        },\n        {\n            \"detail\": \"Could not find user with usernames: [twitterdevvvvvv].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterdevvvvvv\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        },\n        {\n            \"detail\": \"Could not find user with usernames: [twitterapiiiii].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterapiiiii\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "PositionStack API - Location & Weather",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// get location from object before you run the api ",
											"var users = JSON.parse(pm.environment.get(\"users\"));",
											"pm.variables.set(\"location\",users[0].location)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var users = JSON.parse(pm.environment.get(\"users\"));",
											"let response =pm.response.json();",
											"",
											"let lat = response.data[0].latitude;",
											"let long =response.data[0].longitude;",
											"",
											"users[0].latitude = lat",
											"users[0].longitude =long",
											"pm.environment.set('users',JSON.stringify(users));",
											"",
											"var access_key = pm.collectionVariables.get(\"api-access-key\");",
											"var weather_key = pm.collectionVariables.get(\"weather_api_key\");",
											"",
											"// Loop through other users in array and get lat & long",
											"users.forEach((userObj,index)=>{",
											"    if(index !=0 ) {",
											"    // Send Position API ",
											"    pm.sendRequest(`http://api.positionstack.com/v1/forward?access_key=`+access_key+`&query=${userObj.location}`,function (err, response) {",
											"       ",
											"        let res =response.json();",
											"        let lat = res.data[0].latitude;",
											"        let long =res.data[0].longitude",
											"        ",
											"        var users = JSON.parse(pm.environment.get(\"users\"));",
											"        users[index].latitude = lat",
											"        users[index].longitude =long",
											"        pm.environment.set('users',JSON.stringify(users));",
											"",
											"    });",
											"    };",
											"  });",
											"",
											"// Send Weather API ",
											"users.forEach((userObj,index)=>{",
											"        pm.sendRequest(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+lat+\"&lon=\"+long+\"&appid=\"+weather_key, function (err, response) {",
											"            ",
											"            console.log(response)",
											"            let weather = response.json();",
											"            let main = weather.weather[0].main;",
											"",
											"            var users = JSON.parse(pm.environment.get(\"users\"));",
											"            users[index].weather = main",
											"            pm.environment.set('users',JSON.stringify(users));",
											"",
											"        });",
											"",
											"  });",
											"",
											"  console.log(users)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://api.positionstack.com/v1/forward?access_key={{api-access-key}}&query={{location}}",
									"protocol": "http",
									"host": [
										"api",
										"positionstack",
										"com"
									],
									"path": [
										"v1",
										"forward"
									],
									"query": [
										{
											"key": "access_key",
											"value": "{{api-access-key}}"
										},
										{
											"key": "query",
											"value": "{{location}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Postmanauts - Visualize",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `",
											"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
											"<script src=\"https://unpkg.com/topojson@3\"></script>",
											"",
											"<style>",
											"body { ",
											"    background-color: white;",
											"}",
											".title { ",
											"    font-size: 30px;",
											"    font-family: \"Roboto\", sans-serif;",
											"    text-align: center;",
											"}",
											".container {",
											"    display: flex;",
											"    flex-direction: row;",
											"    justify-content: center;",
											"    align-items: center;",
											"}",
											".directions {",
											"    font-size: 18px;",
											"    font-family: \"Roboto\", sans-serif;",
											"    padding-left: 20px;",
											"}",
											"#backgroundRectangle {",
											"    width: 100%;",
											"    height: 100%;",
											"    fill: #f5f5f5;",
											"}",
											".projectionOutline{",
											"    fill: #2f434a;",
											"    stroke: #4e5f66",
											"}",
											".tooltip {",
											"    position: absolute;",
											"    font-size: 12px;",
											"    width: auto;",
											"    height: auto;",
											"    pointer-events: none;",
											"    background-color: white;",
											"    padding: 3px;",
											"}",
											"",
											"</style>",
											"<h1 class=\"title\"></h1>",
											"<div class=\"container\">",
											"<div id=\"map\"></div>",
											"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
											"</div>",
											"<script>",
											"",
											"    pm.getData( function(err, value) {",
											"        d3.select(\".title\").html(value.title);",
											"        initVisualization(value.data);",
											"    });",
											"",
											"    // Function call that contains our visualization, necessary because we are loading an external map file",
											"    async function initVisualization(pmInput){",
											"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
											"        response.json().then( data => {",
											"            generateVisualization(pmInput, data);",
											"        });",
											"    }",
											"    ",
											"    // Generates d3 map visualization using an external map file and user-inputed data",
											"    // Utilizes d3.zoom and d3.brush",
											"    function generateVisualization(pmInput, mapData){",
											"        // Set the dimensions and margins of the graph",
											"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
											"        const width = 800 - margins.top - margins.bottom;",
											"        const height = 500 - margins.left - margins.right;",
											"        ",
											"        // Initializes d3.zoom to cover entire map SVG",
											"        const zoom = d3.zoom()",
											"            .scaleExtent([1,40])",
											"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
											"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
											"            .on(\"zoom\", () =>{",
											"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
											"            })",
											"        ",
											"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
											"        let brush = d3.brush()",
											"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
											"            .on(\"end\", () => {",
											"                let extent = d3.event.selection;",
											"                if(extent){",
											"                    d3.select(\"#map-group\").call(brush.move, null);",
											"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
											"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
											"                        .translate( -extent[0][0], -extent[0][1] ));",
											"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
											"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
											"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
											"                    ",
											"                }",
											"                else{",
											"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
											"                        .scale( 1 )",
											"                        .translate( 0,0 ));",
											"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
											"                        .attr(\"r\", d => d.circleSize)",
											"                        .attr(\"stroke-width\", 1);",
											"                }",
											"            });",
											"        ",
											"        // Set the dimensions and margins of the graph",
											"        let svg = d3.select(\"#map\")",
											"          .append(\"svg\")  ",
											"            .attr(\"width\", width + margins.left + margins.right)",
											"            .attr(\"height\", height + margins.top + margins.bottom)",
											"        svg.append(\"rect\")",
											"            .attr(\"id\", \"backgroundRectangle\");",
											"        svg = svg.append(\"g\")",
											"            .attr(\"id\", \"map-group\")",
											"            .call(brush);",
											"        ",
											"        // Draws Mercator projection of map onto SVG using the inputted map file",
											"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
											"        var mapGroup = svg.append(\"g\");",
											"        let mapPath = d3.geoPath().projection(projection);",
											"        mapGroup.selectAll(\"path\")",
											"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
											"            .enter()",
											"          .append(\"path\")",
											"            .attr(\"d\", mapPath)",
											"            .attr(\"class\", \"projectionOutline\");",
											"        ",
											"        // Calculate offset for tooltip",
											"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
											"        const offset = {top: rect.top, left: rect.left};",
											"        ",
											"        // Create hover tooltip",
											"        let tooltip = d3.select(\"#map\").append(\"div\")",
											"            .attr(\"class\", \"tooltip\");",
											"        // tooltip mouseover event handler",
											"        let tipMouseover = function(d){",
											"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Location: <b>\" + d.location + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b><br/>Weather: <b>\"+ d.weather + \"</b>\")",
											"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
											"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
											"              .transition()",
											"                .duration(200)      // ms",
											"                .style(\"opacity\", 0.9)",
											"            d3.select(this)",
											"                .style(\"stroke\", \"white\")",
											"                .style(\"opacity\", 1);",
											"        };",
											"        // tooltip mouseout event handler",
											"        let tipMouseout = function(d){",
											"            tooltip.transition()",
											"                .duration(300)",
											"                .style(\"opacity\", 0);",
											"            d3.select(this)",
											"                .style(\"stroke\", \"none\")",
											"                .style(\"opacity\", 0.6);",
											"        };",
											"",
											"        // Add pattern for custom postman logo",
											"        svg.append(\"defs\").append(\"pattern\")",
											"            .attr('id','pmImage')",
											"            .attr(\"width\", 12)",
											"            .attr(\"height\", 12)",
											"            .attr('patternUnits',\"userSpaceOnUse\")",
											"            .append('image')",
											"            .attr(\"width\", 12)",
											"            .attr(\"height\", 12)",
											"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
											"",
											"        // Appends points from user-inputted data onto map",
											"        svg.selectAll(\"circle\")",
											"            .data(pmInput)",
											"            .enter()",
											"            .append(\"circle\")",
											"                .attr(\"r\", 0)",
											"                .style(\"fill\", d => d.color)",
											"                //.style(\"fill\", \"url(#pmImage)\")",
											"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
											"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
											"                .style(\"opacity\", 0.6)",
											"                .on(\"mouseover\", tipMouseover)",
											"                .on(\"mouseout\", tipMouseout)",
											"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
											"                .attr(\"r\", d => d.circleSize)",
											"    }",
											"</script>",
											"`;",
											"",
											"// get data from echo output",
											"var response = pm.response.json().data;",
											"let parsedData = [];",
											"",
											"//data parsing",
											"for (let postmanaut of response){",
											"    let tempEntry = {};",
											"    tempEntry.name = postmanaut.name;",
											"    tempEntry.location = postmanaut.location;",
											"    tempEntry.lat = postmanaut.latitude;",
											"    tempEntry.long = postmanaut.longitude;",
											"    tempEntry.weather = postmanaut.weather;",
											"    tempEntry.circleSize = 6;",
											"    tempEntry.color = \"#F09D51\";",
											"    parsedData.push(tempEntry);",
											"}",
											"",
											"pm.visualizer.set(template, {",
											"    data: parsedData,",
											"    title: \"Map of Postmanauts\"",
											"} );",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Parse users object from environment variable and set to collection variable to store in request body",
											"var postmanauts = JSON.parse(pm.environment.get(\"users\"));",
											"pm.collectionVariables.set('req_body', JSON.stringify(postmanauts));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{req_body}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://postman-echo.com/post",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						}
					],
					"description": "Instead of calling each API individually, this folder shows how you can use the [Twitter Users by Username]([https://www.postman.com/twitter/workspace/twitter-s-public-workspace/request/9956214-f116b1dc-0f6a-4b0b-8433-8b344654e67e](https://www.postman.com/twitter/workspace/twitter-s-public-workspace/request/9956214-f116b1dc-0f6a-4b0b-8433-8b344654e67e)) to get location data for multiple users in a single postman request.\n\nThe second request in the folder `PositionStack API - All locations` gets both location and weather data for all users in a single Postman request.\n\nThe third request `Postmanauts - Visualize` visualizes on a geo map.\n\n**GET** Twitter Users by Username - All\n\n*   Get all users in query param from environment variable file. Users are in comma separated list\n*   Create initial user object for all users\n    \n\n**GET** PositionStack API - Location & Weather\n\n*   Pre-request → Read object from last request and add location as query parameter.\n*   Set location variable with `pm.variables.set()` method for first user\n*   Tests\n    *   For each remaining user use `pm.sendRequest()` to send PositionStack API within test to get longitude and latitude for each user\n    *   For each remaining user use `pm.sendRequest()` to send Open Weather API within test with longitude and latitude of previous request to get weather\n    *   Build object for each user with longitude, latitude, and weather and add to `users` environment variable\n\n**POST** Postmanauts - Visualize\n\n*   Pre-request → Read users environment variable and set object to request body through collection variable\n*   Tests → Parse response for name , location, latitude, longitude and weather"
				},
				{
					"name": "Two Postman Requests",
					"item": [
						{
							"name": "All Users, Location & Weather",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Set empty list for users",
											"let users_two = []",
											"",
											"// Parse response data",
											"let response = pm.response.json().data;",
											"",
											"// create object for each user from response",
											"response.map(twitterObj=>{",
											"    let obj= { ",
											"        name : twitterObj.name,",
											"        location:twitterObj.location,",
											"        latitude: null,",
											"        longitude: null",
											"    };",
											"    users_two.push(obj);        ",
											"});",
											"",
											"// set users object for environment variable ",
											"pm.environment.set(\"users_two\", JSON.stringify(users_two));",
											"",
											"var access_key = pm.collectionVariables.get(\"api-access-key\");",
											"var weather_key = pm.collectionVariables.get(\"weather_api_key\");",
											"",
											"users_two.forEach((postmanaut,index)=>{",
											"    pm.sendRequest(`http://api.positionstack.com/v1/forward?access_key=`+access_key+`&query=${postmanaut.location}`, ",
											"        function (err, response) {",
											"            let res =response.json();",
											"            let lat = res.data[0].latitude;",
											"            let long =res.data[0].longitude",
											"",
											"            var users_two = JSON.parse(pm.environment.get(\"users_two\"));",
											"            users_two[index].latitude = lat;",
											"            users_two[index].longitude = long;",
											"            pm.environment.set('users_two',JSON.stringify(users_two));",
											"       ",
											"       ",
											"    pm.sendRequest(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+lat+\"&lon=\"+long+\"&appid=\"+weather_key, function (err, response){",
											"            console.log(response)",
											"            let weather = response.json();",
											"            let main = weather.weather[0].main;",
											"",
											"            var users_two = JSON.parse(pm.environment.get(\"users_two\"));",
											"            users_two[index].weather = main",
											"            pm.environment.set('users_two',JSON.stringify(users_two));",
											"",
											"        });",
											"        });",
											"    });",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by?usernames={{usernames}}&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by"
									],
									"query": [
										{
											"key": "usernames",
											"value": "{{usernames}}",
											"description": "Required. Enter up to 100 comma-separated usernames."
										},
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
										},
										{
											"key": "expansions",
											"value": "",
											"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,reply_settings,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
											"disabled": true
										}
									]
								},
								"description": "This endpoint returns details about up to 100 users specified by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by) for this endpoint."
							},
							"response": [
								{
									"name": "200 Success - Request Fields for Users and Expanded Pinned Tweet",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf",
													"description": "Required."
												},
												{
													"key": "user.fields",
													"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld"
												},
												{
													"key": "expansions",
													"value": "pinned_tweet_id",
													"description": "pinned_tweet_id"
												},
												{
													"key": "tweet.fields",
													"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
													"description": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "1748"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Fri, 26 Jun 2020 16:32:49 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "eae8bea11e85fe49e732de33763f0cf2"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "1"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593189419"
										},
										{
											"key": "x-response-time",
											"value": "110"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2007-02-20T14:35:54.000Z\",\n            \"description\": \"Black queer lives matter.\\nBlack trans lives matter.\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/TAXQpspyHn\",\n                            \"expanded_url\": \"https://about.twitter.com/\",\n                            \"display_url\": \"about.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 52,\n                            \"end\": 69,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"783214\",\n            \"location\": \"Everywhere\",\n            \"name\": \"Twitter\",\n            \"pinned_tweet_id\": \"1274087687469715457\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1270500941498912768/W-80pLvu_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/TAXQpspyHn\",\n            \"username\": \"Twitter\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2013-12-14T04:35:55.000Z\",\n            \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/3ZX3TNiZCY\",\n                            \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                            \"display_url\": \"developer.twitter.com/en/community\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 23,\n                            \"end\": 30,\n                            \"tag\": \"DevRel\"\n                        },\n                        {\n                            \"start\": 113,\n                            \"end\": 130,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"2244994945\",\n            \"location\": \"127.0.0.1\",\n            \"name\": \"Twitter Dev\",\n            \"pinned_tweet_id\": \"1255542774432063488\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/3ZX3TNiZCY\",\n            \"username\": \"TwitterDev\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2007-05-23T06:01:13.000Z\",\n            \"description\": \"The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/8IkCzCDr19\",\n                            \"expanded_url\": \"https://developer.twitter.com\",\n                            \"display_url\": \"developer.twitter.com\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"6253282\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter API\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/942858479592554497/BbazLO9L_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/8IkCzCDr19\",\n            \"username\": \"TwitterAPI\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2012-02-17T20:40:28.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/UFN8PpMrxw\",\n                            \"expanded_url\": \"https://careers.twitter.com/content/careers-twitter/en/jobs.html#location=careers-twitter%3Alocation\",\n                            \"display_url\": \"careers.twitter.com/content/career…\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"495309159\",\n            \"location\": \"New York, NY\",\n            \"name\": \"Twitter New York City\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1016781101011034115/p0Ie-_Dr_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/UFN8PpMrxw\",\n            \"username\": \"TwitterNYC\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2010-07-28T18:40:01.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/MQRffLoRTw\",\n                            \"expanded_url\": \"https://careers.twitter.com/\",\n                            \"display_url\": \"careers.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"172020392\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter San Francisco\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/875159529008226305/7jXeHhZC_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/MQRffLoRTw\",\n            \"username\": \"TwitterSF\",\n            \"verified\": true\n        }\n    ],\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"attachments\": {\n                    \"media_keys\": [\n                        \"3_1274086027544498176\"\n                    ]\n                },\n                \"author_id\": \"783214\",\n                \"conversation_id\": \"1274087687469715457\",\n                \"created_at\": \"2020-06-19T21:12:30.000Z\",\n                \"entities\": {\n                    \"mentions\": [\n                        {\n                            \"start\": 17,\n                            \"end\": 29,\n                            \"username\": \"FredTJoseph\"\n                        }\n                    ],\n                    \"urls\": [\n                        {\n                            \"start\": 30,\n                            \"end\": 53,\n                            \"url\": \"https://t.co/lNTOkyguG1\",\n                            \"expanded_url\": \"https://twitter.com/Twitter/status/1274087687469715457/photo/1\",\n                            \"display_url\": \"pic.twitter.com/lNTOkyguG1\"\n                        }\n                    ]\n                },\n                \"id\": \"1274087687469715457\",\n                \"lang\": \"et\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"📍 Minneapolis\\n🗣️ @FredTJoseph https://t.co/lNTOkyguG1\"\n            },\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "429 Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=jack,twitterdev",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "jack,twitterdev"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "46"
										},
										{
											"key": "content-type",
											"value": "text/plain;charset=utf-8"
										},
										{
											"key": "date",
											"value": "Wed, 24 Jun 2020 17:16:16 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-connection-hash",
											"value": "86a90a7aa13fde1840d52be0d1faf5c4"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "0"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593019345"
										},
										{
											"key": "x-response-time",
											"value": "7"
										}
									],
									"cookie": [],
									"body": "Rate limit exceeded\n"
								},
								{
									"name": "200 Success - Default Payload",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "1222"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Tue, 30 Jun 2020 16:41:09 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "7a7652a95e302d19d13b9444dd88cb49"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "12"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593535752"
										},
										{
											"key": "x-response-time",
											"value": "168"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"783214\",\n            \"name\": \"Twitter\",\n            \"username\": \"Twitter\"\n        },\n        {\n            \"id\": \"2244994945\",\n            \"name\": \"Twitter Dev\",\n            \"username\": \"TwitterDev\"\n        },\n        {\n            \"id\": \"6253282\",\n            \"name\": \"Twitter API\",\n            \"username\": \"TwitterAPI\"\n        },\n        {\n            \"id\": \"495309159\",\n            \"name\": \"Twitter New York City\",\n            \"username\": \"TwitterNYC\"\n        },\n        {\n            \"id\": \"172020392\",\n            \"name\": \"Twitter San Francisco\",\n            \"username\": \"TwitterSF\"\n        },\n        {\n            \"id\": \"95731075\",\n            \"name\": \"Twitter Safety\",\n            \"username\": \"TwitterSafety\"\n        },\n        {\n            \"id\": \"2548985366\",\n            \"name\": \"Twitter Blackbirds\",\n            \"username\": \"Blackbirds\"\n        },\n        {\n            \"id\": \"277761722\",\n            \"name\": \"Twitter UK\",\n            \"username\": \"TwitterUK\"\n        },\n        {\n            \"id\": \"17874544\",\n            \"name\": \"Twitter Support\",\n            \"username\": \"TwitterSupport\"\n        },\n        {\n            \"id\": \"300392950\",\n            \"name\": \"Twitter Sports\",\n            \"username\": \"TwitterSports\"\n        },\n        {\n            \"id\": \"87532773\",\n            \"name\": \"Twitter Design\",\n            \"username\": \"TwitterDesign\"\n        },\n        {\n            \"id\": \"372575989\",\n            \"name\": \"Twitter News\",\n            \"username\": \"TwitterNews\"\n        },\n        {\n            \"id\": \"3260518932\",\n            \"name\": \"Twitter Moments\",\n            \"username\": \"TwitterMoments\"\n        },\n        {\n            \"id\": \"121291606\",\n            \"name\": \"Twitter Business\",\n            \"username\": \"TwitterBusiness\"\n        },\n        {\n            \"id\": \"158079127\",\n            \"name\": \"Twitter Nonprofits\",\n            \"username\": \"Nonprofits\"\n        },\n        {\n            \"id\": \"3282859598\",\n            \"name\": \"Twitter Video\",\n            \"username\": \"TwitterVideo\"\n        },\n        {\n            \"id\": \"103770785\",\n            \"name\": \"Twitter India\",\n            \"username\": \"TwitterIndia\"\n        },\n        {\n            \"id\": \"586198217\",\n            \"name\": \"Twitter TV\",\n            \"username\": \"TwitterTV\"\n        },\n        {\n            \"id\": \"216531294\",\n            \"name\": \"Twitter Korea\",\n            \"username\": \"TwitterKorea\"\n        },\n        {\n            \"id\": \"1526228120\",\n            \"name\": \"Twitter Data\",\n            \"username\": \"TwitterData\"\n        },\n        {\n            \"id\": \"222953824\",\n            \"name\": \"TwitterGov\",\n            \"username\": \"TwitterGov\"\n        },\n        {\n            \"id\": \"1603818258\",\n            \"name\": \"Twitter Investor Relations\",\n            \"username\": \"TwitterIR\"\n        },\n        {\n            \"id\": \"2548979088\",\n            \"name\": \"Twitter Alas\",\n            \"username\": \"TwitterAlas\"\n        },\n        {\n            \"id\": \"2244983430\",\n            \"name\": \"Twitter Singapore\",\n            \"username\": \"TwitterSG\"\n        },\n        {\n            \"id\": \"1347713256\",\n            \"name\": \"Twitter Canada\",\n            \"username\": \"TwitterCanada\"\n        },\n        {\n            \"id\": \"376825877\",\n            \"name\": \"Twitter Open Source\",\n            \"username\": \"TwitterOSS\"\n        },\n        {\n            \"id\": \"6844292\",\n            \"name\": \"Twitter Engineering\",\n            \"username\": \"TwitterEng\"\n        },\n        {\n            \"id\": \"738118115595165697\",\n            \"name\": \"Twitter Stripes\",\n            \"username\": \"TwitterStripes\"\n        },\n        {\n            \"id\": \"738118487122419712\",\n            \"name\": \"Twitter Asians\",\n            \"username\": \"TwitterAsians\"\n        },\n        {\n            \"id\": \"218984871\",\n            \"name\": \"Twitter Public Policy\",\n            \"username\": \"Policy\"\n        },\n        {\n            \"id\": \"2550997820\",\n            \"name\": \"Twitter Indonesia\",\n            \"username\": \"TwitterID\"\n        },\n        {\n            \"id\": \"1159458169\",\n            \"name\": \"Twitter 政治\",\n            \"username\": \"TwitterGovJP\"\n        },\n        {\n            \"id\": \"2296297326\",\n            \"name\": \"Twitter Moments UK & Ireland\",\n            \"username\": \"UKMoments\"\n        },\n        {\n            \"id\": \"234489024\",\n            \"name\": \"Twitter Comms\",\n            \"username\": \"TwitterComms\"\n        },\n        {\n            \"id\": \"3873936134\",\n            \"name\": \"Twitter Gaming @ home\",\n            \"username\": \"TwitterGaming\"\n        },\n        {\n            \"id\": \"2228891959\",\n            \"name\": \"Twitter MENA\",\n            \"username\": \"TwitterMENA\"\n        },\n        {\n            \"id\": \"791978718\",\n            \"name\": \"Twitter Official Partner\",\n            \"username\": \"OfficialPartner\"\n        },\n        {\n            \"id\": \"427475002\",\n            \"name\": \"Twitter Books\",\n            \"username\": \"TwitterBooks\"\n        },\n        {\n            \"id\": \"1194267639100723200\",\n            \"name\": \"Twitter Retweets\",\n            \"username\": \"TwitterRetweets\"\n        },\n        {\n            \"id\": \"1168976680867762177\",\n            \"name\": \"Twitter Able\",\n            \"username\": \"TwitterAble\"\n        },\n        {\n            \"id\": \"905409822\",\n            \"name\": \"Twitter SRE\",\n            \"username\": \"TwitterSRE\"\n        },\n        {\n            \"id\": \"738115375477362688\",\n            \"name\": \"Twitter Moments India\",\n            \"username\": \"MomentsIndia\"\n        },\n        {\n            \"id\": \"88723966\",\n            \"name\": \"Twitter Seguro\",\n            \"username\": \"TwitterSeguro\"\n        },\n        {\n            \"id\": \"1049385226424786944\",\n            \"name\": \"Twitter Miami\",\n            \"username\": \"TwitterMiami\"\n        },\n        {\n            \"id\": \"284201599\",\n            \"name\": \"Twitter Terns\",\n            \"username\": \"terns\"\n        },\n        {\n            \"id\": \"1705676064\",\n            \"name\": \"Twitter公式採用アカウント\",\n            \"username\": \"JoinTheFlockJP\"\n        },\n        {\n            \"id\": \"2861317614\",\n            \"name\": \"Twitter ファッション\",\n            \"username\": \"TwitterFashnJP\"\n        },\n        {\n            \"id\": \"3873965293\",\n            \"name\": \"Twitter Moments en Español\",\n            \"username\": \"MomentsES\"\n        },\n        {\n            \"id\": \"1244731491088809984\",\n            \"name\": \"Twitter Thailand\",\n            \"username\": \"TwitterThailand\"\n        },\n        {\n            \"id\": \"4172587277\",\n            \"name\": \"Twitter Moments Brasil\",\n            \"username\": \"MomentsBrasil\"\n        },\n        {\n            \"id\": \"717465714357972992\",\n            \"name\": \"Twitter Video India\",\n            \"username\": \"TwitterVideoIN\"\n        },\n        {\n            \"id\": \"862314223\",\n            \"name\": \"Twitter ミュージック\",\n            \"username\": \"TwitterMusicJP\"\n        },\n        {\n            \"id\": \"2551000568\",\n            \"name\": \"Twitter Mktg Latam\",\n            \"username\": \"TwitterMktLatam\"\n        },\n        {\n            \"id\": \"2548977510\",\n            \"name\": \"Twitter Careers Brasil\",\n            \"username\": \"JoinTheFlockBR\"\n        },\n        {\n            \"id\": \"1159274324\",\n            \"name\": \"Twitter スポーツ\",\n            \"username\": \"TwitterSportsJP\"\n        }\n    ]\n}"
								},
								{
									"name": "200 Success - Request User Fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf",
													"description": "Required."
												},
												{
													"key": "user.fields",
													"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld"
												},
												{
													"key": "expansions",
													"value": "",
													"description": "pinned_tweet_id",
													"disabled": true
												},
												{
													"key": "tweet.fields",
													"value": "",
													"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "1027"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Fri, 26 Jun 2020 16:39:42 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "eae8bea11e85fe49e732de33763f0cf2"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "13"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593190457"
										},
										{
											"key": "x-response-time",
											"value": "72"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2007-02-20T14:35:54.000Z\",\n            \"description\": \"Black queer lives matter.\\nBlack trans lives matter.\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/TAXQpspyHn\",\n                            \"expanded_url\": \"https://about.twitter.com/\",\n                            \"display_url\": \"about.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 52,\n                            \"end\": 69,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"783214\",\n            \"location\": \"Everywhere\",\n            \"name\": \"Twitter\",\n            \"pinned_tweet_id\": \"1274087687469715457\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1270500941498912768/W-80pLvu_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/TAXQpspyHn\",\n            \"username\": \"Twitter\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2013-12-14T04:35:55.000Z\",\n            \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/3ZX3TNiZCY\",\n                            \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                            \"display_url\": \"developer.twitter.com/en/community\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 23,\n                            \"end\": 30,\n                            \"tag\": \"DevRel\"\n                        },\n                        {\n                            \"start\": 113,\n                            \"end\": 130,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"2244994945\",\n            \"location\": \"127.0.0.1\",\n            \"name\": \"Twitter Dev\",\n            \"pinned_tweet_id\": \"1255542774432063488\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/3ZX3TNiZCY\",\n            \"username\": \"TwitterDev\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2007-05-23T06:01:13.000Z\",\n            \"description\": \"The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/8IkCzCDr19\",\n                            \"expanded_url\": \"https://developer.twitter.com\",\n                            \"display_url\": \"developer.twitter.com\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"6253282\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter API\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/942858479592554497/BbazLO9L_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/8IkCzCDr19\",\n            \"username\": \"TwitterAPI\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2012-02-17T20:40:28.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/UFN8PpMrxw\",\n                            \"expanded_url\": \"https://careers.twitter.com/content/careers-twitter/en/jobs.html#location=careers-twitter%3Alocation\",\n                            \"display_url\": \"careers.twitter.com/content/career…\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"495309159\",\n            \"location\": \"New York, NY\",\n            \"name\": \"Twitter New York City\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1016781101011034115/p0Ie-_Dr_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/UFN8PpMrxw\",\n            \"username\": \"TwitterNYC\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2010-07-28T18:40:01.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/MQRffLoRTw\",\n                            \"expanded_url\": \"https://careers.twitter.com/\",\n                            \"display_url\": \"careers.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"172020392\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter San Francisco\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/875159529008226305/7jXeHhZC_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/MQRffLoRTw\",\n            \"username\": \"TwitterSF\",\n            \"verified\": true\n        }\n    ]\n}"
								},
								{
									"name": "400 Bad Request - Too Many Users",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
													"description": "Required. Enter up to 100 comma-separated usernames."
												},
												{
													"key": "user.fields",
													"value": null,
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
													"disabled": true
												},
												{
													"key": "expansions",
													"value": null,
													"description": "pinned_tweet_id",
													"disabled": true
												},
												{
													"key": "tweet.fields",
													"value": null,
													"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "457"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Tue, 30 Jun 2020 17:22:45 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "857207159289071cdd445778e071a674"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "1"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593538196"
										},
										{
											"key": "x-response-time",
											"value": "20"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"parameters\": {\n                \"usernames\": [\n                    \"twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp\"\n                ]\n            },\n            \"message\": \"size [110] is not between 1 and 100\"\n        }\n    ],\n    \"title\": \"Invalid Request\",\n    \"detail\": \"One or more parameters to your request was invalid.\",\n    \"type\": \"https://api.twitter.com/2/problems/invalid-request\"\n}"
								},
								{
									"name": "200 Success - Some Users Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitterrrrrrr,twitterdevvvvvv,twitterapiiiii,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitterrrrrrr,twitterdevvvvvv,twitterapiiiii,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign",
													"description": "Required. Enter up to 100 comma-separated usernames."
												},
												{
													"key": "user.fields",
													"value": null,
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
													"disabled": true
												},
												{
													"key": "expansions",
													"value": null,
													"description": "pinned_tweet_id",
													"disabled": true
												},
												{
													"key": "tweet.fields",
													"value": null,
													"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "396"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Tue, 30 Jun 2020 17:21:52 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "857207159289071cdd445778e071a674"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "2"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593538196"
										},
										{
											"key": "x-response-time",
											"value": "99"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"495309159\",\n            \"name\": \"Twitter New York City\",\n            \"username\": \"TwitterNYC\"\n        },\n        {\n            \"id\": \"172020392\",\n            \"name\": \"Twitter San Francisco\",\n            \"username\": \"TwitterSF\"\n        },\n        {\n            \"id\": \"95731075\",\n            \"name\": \"Twitter Safety\",\n            \"username\": \"TwitterSafety\"\n        },\n        {\n            \"id\": \"2548985366\",\n            \"name\": \"Twitter Blackbirds\",\n            \"username\": \"Blackbirds\"\n        },\n        {\n            \"id\": \"277761722\",\n            \"name\": \"Twitter UK\",\n            \"username\": \"TwitterUK\"\n        },\n        {\n            \"id\": \"17874544\",\n            \"name\": \"Twitter Support\",\n            \"username\": \"TwitterSupport\"\n        },\n        {\n            \"id\": \"300392950\",\n            \"name\": \"Twitter Sports\",\n            \"username\": \"TwitterSports\"\n        },\n        {\n            \"id\": \"87532773\",\n            \"name\": \"Twitter Design\",\n            \"username\": \"TwitterDesign\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with usernames: [twitterrrrrrr].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterrrrrrr\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        },\n        {\n            \"detail\": \"Could not find user with usernames: [twitterdevvvvvv].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterdevvvvvv\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        },\n        {\n            \"detail\": \"Could not find user with usernames: [twitterapiiiii].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterapiiiii\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Postmanauts - Visualize",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `",
											"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
											"<script src=\"https://unpkg.com/topojson@3\"></script>",
											"",
											"<style>",
											"body { ",
											"    background-color: white;",
											"}",
											".title { ",
											"    font-size: 30px;",
											"    font-family: \"Roboto\", sans-serif;",
											"    text-align: center;",
											"}",
											".container {",
											"    display: flex;",
											"    flex-direction: row;",
											"    justify-content: center;",
											"    align-items: center;",
											"}",
											".directions {",
											"    font-size: 18px;",
											"    font-family: \"Roboto\", sans-serif;",
											"    padding-left: 20px;",
											"}",
											"#backgroundRectangle {",
											"    width: 100%;",
											"    height: 100%;",
											"    fill: #f5f5f5;",
											"}",
											".projectionOutline{",
											"    fill: #2f434a;",
											"    stroke: #4e5f66",
											"}",
											".tooltip {",
											"    position: absolute;",
											"    font-size: 12px;",
											"    width: auto;",
											"    height: auto;",
											"    pointer-events: none;",
											"    background-color: white;",
											"    padding: 3px;",
											"}",
											"",
											"</style>",
											"<h1 class=\"title\"></h1>",
											"<div class=\"container\">",
											"<div id=\"map\"></div>",
											"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
											"</div>",
											"<script>",
											"",
											"    pm.getData( function(err, value) {",
											"        d3.select(\".title\").html(value.title);",
											"        initVisualization(value.data);",
											"    });",
											"",
											"    // Function call that contains our visualization, necessary because we are loading an external map file",
											"    async function initVisualization(pmInput){",
											"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
											"        response.json().then( data => {",
											"            generateVisualization(pmInput, data);",
											"        });",
											"    }",
											"    ",
											"    // Generates d3 map visualization using an external map file and user-inputed data",
											"    // Utilizes d3.zoom and d3.brush",
											"    function generateVisualization(pmInput, mapData){",
											"        // Set the dimensions and margins of the graph",
											"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
											"        const width = 800 - margins.top - margins.bottom;",
											"        const height = 500 - margins.left - margins.right;",
											"        ",
											"        // Initializes d3.zoom to cover entire map SVG",
											"        const zoom = d3.zoom()",
											"            .scaleExtent([1,40])",
											"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
											"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
											"            .on(\"zoom\", () =>{",
											"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
											"            })",
											"        ",
											"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
											"        let brush = d3.brush()",
											"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
											"            .on(\"end\", () => {",
											"                let extent = d3.event.selection;",
											"                if(extent){",
											"                    d3.select(\"#map-group\").call(brush.move, null);",
											"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
											"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
											"                        .translate( -extent[0][0], -extent[0][1] ));",
											"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
											"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
											"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
											"                    ",
											"                }",
											"                else{",
											"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
											"                        .scale( 1 )",
											"                        .translate( 0,0 ));",
											"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
											"                        .attr(\"r\", d => d.circleSize)",
											"                        .attr(\"stroke-width\", 1);",
											"                }",
											"            });",
											"        ",
											"        // Set the dimensions and margins of the graph",
											"        let svg = d3.select(\"#map\")",
											"          .append(\"svg\")  ",
											"            .attr(\"width\", width + margins.left + margins.right)",
											"            .attr(\"height\", height + margins.top + margins.bottom)",
											"        svg.append(\"rect\")",
											"            .attr(\"id\", \"backgroundRectangle\");",
											"        svg = svg.append(\"g\")",
											"            .attr(\"id\", \"map-group\")",
											"            .call(brush);",
											"        ",
											"        // Draws Mercator projection of map onto SVG using the inputted map file",
											"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
											"        var mapGroup = svg.append(\"g\");",
											"        let mapPath = d3.geoPath().projection(projection);",
											"        mapGroup.selectAll(\"path\")",
											"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
											"            .enter()",
											"          .append(\"path\")",
											"            .attr(\"d\", mapPath)",
											"            .attr(\"class\", \"projectionOutline\");",
											"        ",
											"        // Calculate offset for tooltip",
											"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
											"        const offset = {top: rect.top, left: rect.left};",
											"        ",
											"        // Create hover tooltip",
											"        let tooltip = d3.select(\"#map\").append(\"div\")",
											"            .attr(\"class\", \"tooltip\");",
											"        // tooltip mouseover event handler",
											"        let tipMouseover = function(d){",
											"           tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Location: <b>\" + d.location + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b><br/>Weather: <b>\"+ d.weather + \"</b>\")",
											"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
											"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
											"              .transition()",
											"                .duration(200)      // ms",
											"                .style(\"opacity\", 0.9)",
											"            d3.select(this)",
											"                .style(\"stroke\", \"white\")",
											"                .style(\"opacity\", 1);",
											"        };",
											"        // tooltip mouseout event handler",
											"        let tipMouseout = function(d){",
											"            tooltip.transition()",
											"                .duration(300)",
											"                .style(\"opacity\", 0);",
											"            d3.select(this)",
											"                .style(\"stroke\", \"none\")",
											"                .style(\"opacity\", 0.6);",
											"        };",
											"",
											"        // Add pattern for custom postman logo",
											"        svg.append(\"defs\").append(\"pattern\")",
											"            .attr('id','pmImage')",
											"            .attr(\"width\", 12)",
											"            .attr(\"height\", 12)",
											"            .attr('patternUnits',\"userSpaceOnUse\")",
											"            .append('image')",
											"            .attr(\"width\", 12)",
											"            .attr(\"height\", 12)",
											"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
											"",
											"        // Appends points from user-inputted data onto map",
											"        svg.selectAll(\"circle\")",
											"            .data(pmInput)",
											"            .enter()",
											"            .append(\"circle\")",
											"                .attr(\"r\", 0)",
											"                .style(\"fill\", d => d.color)",
											"                //.style(\"fill\", \"url(#pmImage)\")",
											"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
											"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
											"                .style(\"opacity\", 0.6)",
											"                .on(\"mouseover\", tipMouseover)",
											"                .on(\"mouseout\", tipMouseout)",
											"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
											"                .attr(\"r\", d => d.circleSize)",
											"    }",
											"</script>",
											"`;",
											"",
											"// get data from echo output",
											"var response = pm.response.json().data;",
											"let parsedData = [];",
											"",
											"//data parsing",
											"for (let postmanaut of response){",
											"    let tempEntry = {};",
											"    tempEntry.name = postmanaut.name;",
											"    tempEntry.location = postmanaut.location;",
											"    tempEntry.lat = postmanaut.latitude;",
											"    tempEntry.long = postmanaut.longitude;",
											"    tempEntry.weather = postmanaut.weather;",
											"    tempEntry.circleSize = 6;",
											"    tempEntry.color = \"#F09D51\";",
											"    parsedData.push(tempEntry);",
											"}",
											"",
											"pm.visualizer.set(template, {",
											"    data: parsedData,",
											"    title: \"Map of Postmanauts\"",
											"} );"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"",
											"var postmanauts = JSON.parse(pm.environment.get(\"users_two\"));",
											"",
											"pm.collectionVariables.set('req_body', JSON.stringify(postmanauts));",
											"console.log(postmanauts);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{{req_body}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://postman-echo.com/post",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"post"
									]
								}
							},
							"response": []
						}
					],
					"description": "This folder shows how you can get Twitter, location , and weather data in one single GET request `All Users and Location`. Once you have all data you can visualize on geo map `Postmanauts - Visualize`\n\n**GET** All Users, Location & Weather\n\n*   Get all users in query param from environment variable file. Users are in comma separated list. Create initial user object for all users\n    \n\n*   Tests\n    *   For each remaining user use `pm.sendRequest()` to send PositionStack API within test to get longitude and latitude for each user\n    *   For each remaining user use `pm.sendRequest()` to send Open Weather API within test with longitude and latitude of previous request to get weather\n    *   Build object for each user with longitude, latitude, and weather\n\n**POST** Postmanauts - Visualize\n\n*   Pre-request → Read `users` environment variable and set object to request body through collection variable\n*   Tests → Parse response for name , location, latitude, longitude and weather"
				},
				{
					"name": "One Postman Request",
					"item": [
						{
							"name": "All Users, Location, Weather & Visualize",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var template = `",
											"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
											"<script src=\"https://unpkg.com/topojson@3\"></script>",
											"",
											"<style>",
											"body { ",
											"    background-color: white;",
											"}",
											".title { ",
											"    font-size: 30px;",
											"    font-family: \"Roboto\", sans-serif;",
											"    text-align: center;",
											"}",
											".container {",
											"    display: flex;",
											"    flex-direction: row;",
											"    justify-content: center;",
											"    align-items: center;",
											"}",
											".directions {",
											"    font-size: 18px;",
											"    font-family: \"Roboto\", sans-serif;",
											"    padding-left: 20px;",
											"}",
											"#backgroundRectangle {",
											"    width: 100%;",
											"    height: 100%;",
											"    fill: #f5f5f5;",
											"}",
											".projectionOutline{",
											"    fill: #2f434a;",
											"    stroke: #4e5f66",
											"}",
											".tooltip {",
											"    position: absolute;",
											"    font-size: 12px;",
											"    width: auto;",
											"    height: auto;",
											"    pointer-events: none;",
											"    background-color: white;",
											"    padding: 3px;",
											"}",
											"",
											"</style>",
											"<h1 class=\"title\"></h1>",
											"<div class=\"container\">",
											"<div id=\"map\"></div>",
											"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
											"</div>",
											"<script>",
											"",
											"    pm.getData( function(err, value) {",
											"        d3.select(\".title\").html(value.title);",
											"        initVisualization(value.data);",
											"    });",
											"",
											"    // Function call that contains our visualization, necessary because we are loading an external map file",
											"    async function initVisualization(pmInput){",
											"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
											"        response.json().then( data => {",
											"            generateVisualization(pmInput, data);",
											"        });",
											"    }",
											"    ",
											"    // Generates d3 map visualization using an external map file and user-inputed data",
											"    // Utilizes d3.zoom and d3.brush",
											"    function generateVisualization(pmInput, mapData){",
											"        // Set the dimensions and margins of the graph",
											"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
											"        const width = 800 - margins.top - margins.bottom;",
											"        const height = 500 - margins.left - margins.right;",
											"        ",
											"        // Initializes d3.zoom to cover entire map SVG",
											"        const zoom = d3.zoom()",
											"            .scaleExtent([1,40])",
											"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
											"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
											"            .on(\"zoom\", () =>{",
											"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
											"            })",
											"        ",
											"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
											"        let brush = d3.brush()",
											"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
											"            .on(\"end\", () => {",
											"                let extent = d3.event.selection;",
											"                if(extent){",
											"                    d3.select(\"#map-group\").call(brush.move, null);",
											"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
											"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
											"                        .translate( -extent[0][0], -extent[0][1] ));",
											"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
											"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
											"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
											"                    ",
											"                }",
											"                else{",
											"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
											"                        .scale( 1 )",
											"                        .translate( 0,0 ));",
											"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
											"                        .attr(\"r\", d => d.circleSize)",
											"                        .attr(\"stroke-width\", 1);",
											"                }",
											"            });",
											"        ",
											"        // Set the dimensions and margins of the graph",
											"        let svg = d3.select(\"#map\")",
											"          .append(\"svg\")  ",
											"            .attr(\"width\", width + margins.left + margins.right)",
											"            .attr(\"height\", height + margins.top + margins.bottom)",
											"        svg.append(\"rect\")",
											"            .attr(\"id\", \"backgroundRectangle\");",
											"        svg = svg.append(\"g\")",
											"            .attr(\"id\", \"map-group\")",
											"            .call(brush);",
											"        ",
											"        // Draws Mercator projection of map onto SVG using the inputted map file",
											"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
											"        var mapGroup = svg.append(\"g\");",
											"        let mapPath = d3.geoPath().projection(projection);",
											"        mapGroup.selectAll(\"path\")",
											"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
											"            .enter()",
											"          .append(\"path\")",
											"            .attr(\"d\", mapPath)",
											"            .attr(\"class\", \"projectionOutline\");",
											"        ",
											"        // Calculate offset for tooltip",
											"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
											"        const offset = {top: rect.top, left: rect.left};",
											"        ",
											"        // Create hover tooltip",
											"        let tooltip = d3.select(\"#map\").append(\"div\")",
											"            .attr(\"class\", \"tooltip\");",
											"        // tooltip mouseover event handler",
											"        let tipMouseover = function(d){",
											"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Location: <b>\" + d.location + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b><br/>Weather: <b>\"+ d.weather + \"</b>\")",
											"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
											"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
											"              .transition()",
											"                .duration(200)      // ms",
											"                .style(\"opacity\", 0.9)",
											"            d3.select(this)",
											"                .style(\"stroke\", \"white\")",
											"                .style(\"opacity\", 1);",
											"        };",
											"        // tooltip mouseout event handler",
											"        let tipMouseout = function(d){",
											"            tooltip.transition()",
											"                .duration(300)",
											"                .style(\"opacity\", 0);",
											"            d3.select(this)",
											"                .style(\"stroke\", \"none\")",
											"                .style(\"opacity\", 0.6);",
											"        };",
											"",
											"        // Add pattern for custom postman logo",
											"        svg.append(\"defs\").append(\"pattern\")",
											"            .attr('id','pmImage')",
											"            .attr(\"width\", 12)",
											"            .attr(\"height\", 12)",
											"            .attr('patternUnits',\"userSpaceOnUse\")",
											"            .append('image')",
											"            .attr(\"width\", 12)",
											"            .attr(\"height\", 12)",
											"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
											"",
											"        // Appends points from user-inputted data onto map",
											"        svg.selectAll(\"circle\")",
											"            .data(pmInput)",
											"            .enter()",
											"            .append(\"circle\")",
											"                .attr(\"r\", 0)",
											"                .style(\"fill\", d => d.color)",
											"                //.style(\"fill\", \"url(#pmImage)\")",
											"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
											"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
											"                .style(\"opacity\", 0.6)",
											"                .on(\"mouseover\", tipMouseover)",
											"                .on(\"mouseout\", tipMouseout)",
											"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
											"                .attr(\"r\", d => d.circleSize)",
											"    }",
											"</script>",
											"`;",
											"",
											"// Set empty list for users",
											"let users = []",
											"",
											"// Parse response data",
											"let response = pm.response.json().data;",
											"",
											"// create object for each user from response",
											"response.map(twitterObj=>{",
											"    let obj= { ",
											"        name : twitterObj.name,",
											"        location:twitterObj.location,",
											"        latitude: null,",
											"        longitude: null",
											"    };",
											"    users.push(obj);        ",
											"});",
											"",
											"// set users object for environment variable ",
											"pm.environment.set(\"users_one\", JSON.stringify(users));",
											"var weather_key = pm.collectionVariables.get(\"weather_api_key\");",
											"",
											"users.forEach((postmanaut,index)=>{",
											"        pm.sendRequest(`http://api.positionstack.com/v1/forward?access_key=5fb78e1bfa0e4f9232b725a4ec1e5f82&query=${postmanaut.location}`, function (err, response) {",
											"            let res =response.json();",
											"            let lat = res.data[0].latitude;",
											"            let long =res.data[0].longitude",
											"",
											"            var users = JSON.parse(pm.environment.get(\"users_one\"));",
											"            users[index].latitude = lat;",
											"            users[index].longitude = long;",
											"            pm.environment.set('users_one',JSON.stringify(users));",
											"        ",
											"         pm.sendRequest(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+lat+\"&lon=\"+long+\"&appid=\"+weather_key, function (err, response){",
											"            console.log(response)",
											"            let weather = response.json();",
											"            let main = weather.weather[0].main;",
											"",
											"            var users_one = JSON.parse(pm.environment.get(\"users_one\"));",
											"            users_one[index].weather = main",
											"            pm.environment.set('users_one',JSON.stringify(users));",
											"",
											"        });",
											"        });",
											"    });",
											"",
											"setTimeout(function() {",
											"console.log(JSON.parse(pm.environment.get(\"users\")))",
											"}, 1000);",
											"",
											"var user1 = JSON.parse(pm.environment.get(\"users\"));",
											"//var response = pm.response.json().data;",
											"let parsedData = [];",
											"",
											"//data parsing",
											"for (let postmanaut of user1){",
											"    let tempEntry = {};",
											"    tempEntry.name = postmanaut.name;",
											"    tempEntry.location = postmanaut.location;",
											"    tempEntry.lat = postmanaut.latitude;",
											"    tempEntry.long = postmanaut.longitude;",
											"    tempEntry.weather = postmanaut.weather;",
											"    tempEntry.circleSize = 6;",
											"    tempEntry.color = \"#F09D51\";",
											"    parsedData.push(tempEntry);",
											"}",
											"",
											"pm.visualizer.set(template, {",
											"    data: parsedData,",
											"    title: \"Map of Postmanauts\"",
											"} );",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by?user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&usernames={{usernames}}",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by"
									],
									"query": [
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
										},
										{
											"key": "expansions",
											"value": "",
											"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,reply_settings,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
											"disabled": true
										},
										{
											"key": "usernames",
											"value": "{{usernames}}"
										}
									]
								},
								"description": "This endpoint returns details about up to 100 users specified by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by) for this endpoint."
							},
							"response": [
								{
									"name": "200 Success - Request Fields for Users and Expanded Pinned Tweet",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf",
													"description": "Required."
												},
												{
													"key": "user.fields",
													"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld"
												},
												{
													"key": "expansions",
													"value": "pinned_tweet_id",
													"description": "pinned_tweet_id"
												},
												{
													"key": "tweet.fields",
													"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
													"description": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "1748"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Fri, 26 Jun 2020 16:32:49 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "eae8bea11e85fe49e732de33763f0cf2"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "1"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593189419"
										},
										{
											"key": "x-response-time",
											"value": "110"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2007-02-20T14:35:54.000Z\",\n            \"description\": \"Black queer lives matter.\\nBlack trans lives matter.\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/TAXQpspyHn\",\n                            \"expanded_url\": \"https://about.twitter.com/\",\n                            \"display_url\": \"about.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 52,\n                            \"end\": 69,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"783214\",\n            \"location\": \"Everywhere\",\n            \"name\": \"Twitter\",\n            \"pinned_tweet_id\": \"1274087687469715457\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1270500941498912768/W-80pLvu_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/TAXQpspyHn\",\n            \"username\": \"Twitter\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2013-12-14T04:35:55.000Z\",\n            \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/3ZX3TNiZCY\",\n                            \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                            \"display_url\": \"developer.twitter.com/en/community\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 23,\n                            \"end\": 30,\n                            \"tag\": \"DevRel\"\n                        },\n                        {\n                            \"start\": 113,\n                            \"end\": 130,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"2244994945\",\n            \"location\": \"127.0.0.1\",\n            \"name\": \"Twitter Dev\",\n            \"pinned_tweet_id\": \"1255542774432063488\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/3ZX3TNiZCY\",\n            \"username\": \"TwitterDev\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2007-05-23T06:01:13.000Z\",\n            \"description\": \"The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/8IkCzCDr19\",\n                            \"expanded_url\": \"https://developer.twitter.com\",\n                            \"display_url\": \"developer.twitter.com\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"6253282\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter API\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/942858479592554497/BbazLO9L_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/8IkCzCDr19\",\n            \"username\": \"TwitterAPI\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2012-02-17T20:40:28.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/UFN8PpMrxw\",\n                            \"expanded_url\": \"https://careers.twitter.com/content/careers-twitter/en/jobs.html#location=careers-twitter%3Alocation\",\n                            \"display_url\": \"careers.twitter.com/content/career…\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"495309159\",\n            \"location\": \"New York, NY\",\n            \"name\": \"Twitter New York City\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1016781101011034115/p0Ie-_Dr_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/UFN8PpMrxw\",\n            \"username\": \"TwitterNYC\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2010-07-28T18:40:01.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/MQRffLoRTw\",\n                            \"expanded_url\": \"https://careers.twitter.com/\",\n                            \"display_url\": \"careers.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"172020392\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter San Francisco\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/875159529008226305/7jXeHhZC_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/MQRffLoRTw\",\n            \"username\": \"TwitterSF\",\n            \"verified\": true\n        }\n    ],\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"attachments\": {\n                    \"media_keys\": [\n                        \"3_1274086027544498176\"\n                    ]\n                },\n                \"author_id\": \"783214\",\n                \"conversation_id\": \"1274087687469715457\",\n                \"created_at\": \"2020-06-19T21:12:30.000Z\",\n                \"entities\": {\n                    \"mentions\": [\n                        {\n                            \"start\": 17,\n                            \"end\": 29,\n                            \"username\": \"FredTJoseph\"\n                        }\n                    ],\n                    \"urls\": [\n                        {\n                            \"start\": 30,\n                            \"end\": 53,\n                            \"url\": \"https://t.co/lNTOkyguG1\",\n                            \"expanded_url\": \"https://twitter.com/Twitter/status/1274087687469715457/photo/1\",\n                            \"display_url\": \"pic.twitter.com/lNTOkyguG1\"\n                        }\n                    ]\n                },\n                \"id\": \"1274087687469715457\",\n                \"lang\": \"et\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"📍 Minneapolis\\n🗣️ @FredTJoseph https://t.co/lNTOkyguG1\"\n            },\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
								},
								{
									"name": "429 Rate Limit Exceeded",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=jack,twitterdev",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "jack,twitterdev"
												}
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "46"
										},
										{
											"key": "content-type",
											"value": "text/plain;charset=utf-8"
										},
										{
											"key": "date",
											"value": "Wed, 24 Jun 2020 17:16:16 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-connection-hash",
											"value": "86a90a7aa13fde1840d52be0d1faf5c4"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "0"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593019345"
										},
										{
											"key": "x-response-time",
											"value": "7"
										}
									],
									"cookie": [],
									"body": "Rate limit exceeded\n"
								},
								{
									"name": "200 Success - Default Payload",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "1222"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Tue, 30 Jun 2020 16:41:09 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "7a7652a95e302d19d13b9444dd88cb49"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "12"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593535752"
										},
										{
											"key": "x-response-time",
											"value": "168"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"783214\",\n            \"name\": \"Twitter\",\n            \"username\": \"Twitter\"\n        },\n        {\n            \"id\": \"2244994945\",\n            \"name\": \"Twitter Dev\",\n            \"username\": \"TwitterDev\"\n        },\n        {\n            \"id\": \"6253282\",\n            \"name\": \"Twitter API\",\n            \"username\": \"TwitterAPI\"\n        },\n        {\n            \"id\": \"495309159\",\n            \"name\": \"Twitter New York City\",\n            \"username\": \"TwitterNYC\"\n        },\n        {\n            \"id\": \"172020392\",\n            \"name\": \"Twitter San Francisco\",\n            \"username\": \"TwitterSF\"\n        },\n        {\n            \"id\": \"95731075\",\n            \"name\": \"Twitter Safety\",\n            \"username\": \"TwitterSafety\"\n        },\n        {\n            \"id\": \"2548985366\",\n            \"name\": \"Twitter Blackbirds\",\n            \"username\": \"Blackbirds\"\n        },\n        {\n            \"id\": \"277761722\",\n            \"name\": \"Twitter UK\",\n            \"username\": \"TwitterUK\"\n        },\n        {\n            \"id\": \"17874544\",\n            \"name\": \"Twitter Support\",\n            \"username\": \"TwitterSupport\"\n        },\n        {\n            \"id\": \"300392950\",\n            \"name\": \"Twitter Sports\",\n            \"username\": \"TwitterSports\"\n        },\n        {\n            \"id\": \"87532773\",\n            \"name\": \"Twitter Design\",\n            \"username\": \"TwitterDesign\"\n        },\n        {\n            \"id\": \"372575989\",\n            \"name\": \"Twitter News\",\n            \"username\": \"TwitterNews\"\n        },\n        {\n            \"id\": \"3260518932\",\n            \"name\": \"Twitter Moments\",\n            \"username\": \"TwitterMoments\"\n        },\n        {\n            \"id\": \"121291606\",\n            \"name\": \"Twitter Business\",\n            \"username\": \"TwitterBusiness\"\n        },\n        {\n            \"id\": \"158079127\",\n            \"name\": \"Twitter Nonprofits\",\n            \"username\": \"Nonprofits\"\n        },\n        {\n            \"id\": \"3282859598\",\n            \"name\": \"Twitter Video\",\n            \"username\": \"TwitterVideo\"\n        },\n        {\n            \"id\": \"103770785\",\n            \"name\": \"Twitter India\",\n            \"username\": \"TwitterIndia\"\n        },\n        {\n            \"id\": \"586198217\",\n            \"name\": \"Twitter TV\",\n            \"username\": \"TwitterTV\"\n        },\n        {\n            \"id\": \"216531294\",\n            \"name\": \"Twitter Korea\",\n            \"username\": \"TwitterKorea\"\n        },\n        {\n            \"id\": \"1526228120\",\n            \"name\": \"Twitter Data\",\n            \"username\": \"TwitterData\"\n        },\n        {\n            \"id\": \"222953824\",\n            \"name\": \"TwitterGov\",\n            \"username\": \"TwitterGov\"\n        },\n        {\n            \"id\": \"1603818258\",\n            \"name\": \"Twitter Investor Relations\",\n            \"username\": \"TwitterIR\"\n        },\n        {\n            \"id\": \"2548979088\",\n            \"name\": \"Twitter Alas\",\n            \"username\": \"TwitterAlas\"\n        },\n        {\n            \"id\": \"2244983430\",\n            \"name\": \"Twitter Singapore\",\n            \"username\": \"TwitterSG\"\n        },\n        {\n            \"id\": \"1347713256\",\n            \"name\": \"Twitter Canada\",\n            \"username\": \"TwitterCanada\"\n        },\n        {\n            \"id\": \"376825877\",\n            \"name\": \"Twitter Open Source\",\n            \"username\": \"TwitterOSS\"\n        },\n        {\n            \"id\": \"6844292\",\n            \"name\": \"Twitter Engineering\",\n            \"username\": \"TwitterEng\"\n        },\n        {\n            \"id\": \"738118115595165697\",\n            \"name\": \"Twitter Stripes\",\n            \"username\": \"TwitterStripes\"\n        },\n        {\n            \"id\": \"738118487122419712\",\n            \"name\": \"Twitter Asians\",\n            \"username\": \"TwitterAsians\"\n        },\n        {\n            \"id\": \"218984871\",\n            \"name\": \"Twitter Public Policy\",\n            \"username\": \"Policy\"\n        },\n        {\n            \"id\": \"2550997820\",\n            \"name\": \"Twitter Indonesia\",\n            \"username\": \"TwitterID\"\n        },\n        {\n            \"id\": \"1159458169\",\n            \"name\": \"Twitter 政治\",\n            \"username\": \"TwitterGovJP\"\n        },\n        {\n            \"id\": \"2296297326\",\n            \"name\": \"Twitter Moments UK & Ireland\",\n            \"username\": \"UKMoments\"\n        },\n        {\n            \"id\": \"234489024\",\n            \"name\": \"Twitter Comms\",\n            \"username\": \"TwitterComms\"\n        },\n        {\n            \"id\": \"3873936134\",\n            \"name\": \"Twitter Gaming @ home\",\n            \"username\": \"TwitterGaming\"\n        },\n        {\n            \"id\": \"2228891959\",\n            \"name\": \"Twitter MENA\",\n            \"username\": \"TwitterMENA\"\n        },\n        {\n            \"id\": \"791978718\",\n            \"name\": \"Twitter Official Partner\",\n            \"username\": \"OfficialPartner\"\n        },\n        {\n            \"id\": \"427475002\",\n            \"name\": \"Twitter Books\",\n            \"username\": \"TwitterBooks\"\n        },\n        {\n            \"id\": \"1194267639100723200\",\n            \"name\": \"Twitter Retweets\",\n            \"username\": \"TwitterRetweets\"\n        },\n        {\n            \"id\": \"1168976680867762177\",\n            \"name\": \"Twitter Able\",\n            \"username\": \"TwitterAble\"\n        },\n        {\n            \"id\": \"905409822\",\n            \"name\": \"Twitter SRE\",\n            \"username\": \"TwitterSRE\"\n        },\n        {\n            \"id\": \"738115375477362688\",\n            \"name\": \"Twitter Moments India\",\n            \"username\": \"MomentsIndia\"\n        },\n        {\n            \"id\": \"88723966\",\n            \"name\": \"Twitter Seguro\",\n            \"username\": \"TwitterSeguro\"\n        },\n        {\n            \"id\": \"1049385226424786944\",\n            \"name\": \"Twitter Miami\",\n            \"username\": \"TwitterMiami\"\n        },\n        {\n            \"id\": \"284201599\",\n            \"name\": \"Twitter Terns\",\n            \"username\": \"terns\"\n        },\n        {\n            \"id\": \"1705676064\",\n            \"name\": \"Twitter公式採用アカウント\",\n            \"username\": \"JoinTheFlockJP\"\n        },\n        {\n            \"id\": \"2861317614\",\n            \"name\": \"Twitter ファッション\",\n            \"username\": \"TwitterFashnJP\"\n        },\n        {\n            \"id\": \"3873965293\",\n            \"name\": \"Twitter Moments en Español\",\n            \"username\": \"MomentsES\"\n        },\n        {\n            \"id\": \"1244731491088809984\",\n            \"name\": \"Twitter Thailand\",\n            \"username\": \"TwitterThailand\"\n        },\n        {\n            \"id\": \"4172587277\",\n            \"name\": \"Twitter Moments Brasil\",\n            \"username\": \"MomentsBrasil\"\n        },\n        {\n            \"id\": \"717465714357972992\",\n            \"name\": \"Twitter Video India\",\n            \"username\": \"TwitterVideoIN\"\n        },\n        {\n            \"id\": \"862314223\",\n            \"name\": \"Twitter ミュージック\",\n            \"username\": \"TwitterMusicJP\"\n        },\n        {\n            \"id\": \"2551000568\",\n            \"name\": \"Twitter Mktg Latam\",\n            \"username\": \"TwitterMktLatam\"\n        },\n        {\n            \"id\": \"2548977510\",\n            \"name\": \"Twitter Careers Brasil\",\n            \"username\": \"JoinTheFlockBR\"\n        },\n        {\n            \"id\": \"1159274324\",\n            \"name\": \"Twitter スポーツ\",\n            \"username\": \"TwitterSportsJP\"\n        }\n    ]\n}"
								},
								{
									"name": "200 Success - Request User Fields",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf",
													"description": "Required."
												},
												{
													"key": "user.fields",
													"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld"
												},
												{
													"key": "expansions",
													"value": "",
													"description": "pinned_tweet_id",
													"disabled": true
												},
												{
													"key": "tweet.fields",
													"value": "",
													"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "1027"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Fri, 26 Jun 2020 16:39:42 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "eae8bea11e85fe49e732de33763f0cf2"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "13"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593190457"
										},
										{
											"key": "x-response-time",
											"value": "72"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2007-02-20T14:35:54.000Z\",\n            \"description\": \"Black queer lives matter.\\nBlack trans lives matter.\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/TAXQpspyHn\",\n                            \"expanded_url\": \"https://about.twitter.com/\",\n                            \"display_url\": \"about.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 52,\n                            \"end\": 69,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"783214\",\n            \"location\": \"Everywhere\",\n            \"name\": \"Twitter\",\n            \"pinned_tweet_id\": \"1274087687469715457\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1270500941498912768/W-80pLvu_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/TAXQpspyHn\",\n            \"username\": \"Twitter\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2013-12-14T04:35:55.000Z\",\n            \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/3ZX3TNiZCY\",\n                            \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                            \"display_url\": \"developer.twitter.com/en/community\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 23,\n                            \"end\": 30,\n                            \"tag\": \"DevRel\"\n                        },\n                        {\n                            \"start\": 113,\n                            \"end\": 130,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"2244994945\",\n            \"location\": \"127.0.0.1\",\n            \"name\": \"Twitter Dev\",\n            \"pinned_tweet_id\": \"1255542774432063488\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/3ZX3TNiZCY\",\n            \"username\": \"TwitterDev\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2007-05-23T06:01:13.000Z\",\n            \"description\": \"The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/8IkCzCDr19\",\n                            \"expanded_url\": \"https://developer.twitter.com\",\n                            \"display_url\": \"developer.twitter.com\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"6253282\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter API\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/942858479592554497/BbazLO9L_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/8IkCzCDr19\",\n            \"username\": \"TwitterAPI\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2012-02-17T20:40:28.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/UFN8PpMrxw\",\n                            \"expanded_url\": \"https://careers.twitter.com/content/careers-twitter/en/jobs.html#location=careers-twitter%3Alocation\",\n                            \"display_url\": \"careers.twitter.com/content/career…\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"495309159\",\n            \"location\": \"New York, NY\",\n            \"name\": \"Twitter New York City\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1016781101011034115/p0Ie-_Dr_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/UFN8PpMrxw\",\n            \"username\": \"TwitterNYC\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2010-07-28T18:40:01.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/MQRffLoRTw\",\n                            \"expanded_url\": \"https://careers.twitter.com/\",\n                            \"display_url\": \"careers.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"172020392\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter San Francisco\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/875159529008226305/7jXeHhZC_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/MQRffLoRTw\",\n            \"username\": \"TwitterSF\",\n            \"verified\": true\n        }\n    ]\n}"
								},
								{
									"name": "400 Bad Request - Too Many Users",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
													"description": "Required. Enter up to 100 comma-separated usernames."
												},
												{
													"key": "user.fields",
													"value": null,
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
													"disabled": true
												},
												{
													"key": "expansions",
													"value": null,
													"description": "pinned_tweet_id",
													"disabled": true
												},
												{
													"key": "tweet.fields",
													"value": null,
													"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
													"disabled": true
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "457"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Tue, 30 Jun 2020 17:22:45 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "857207159289071cdd445778e071a674"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "1"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593538196"
										},
										{
											"key": "x-response-time",
											"value": "20"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"parameters\": {\n                \"usernames\": [\n                    \"twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp\"\n                ]\n            },\n            \"message\": \"size [110] is not between 1 and 100\"\n        }\n    ],\n    \"title\": \"Invalid Request\",\n    \"detail\": \"One or more parameters to your request was invalid.\",\n    \"type\": \"https://api.twitter.com/2/problems/invalid-request\"\n}"
								},
								{
									"name": "200 Success - Some Users Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.twitter.com/2/users/by?usernames=twitterrrrrrr,twitterdevvvvvv,twitterapiiiii,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign",
											"protocol": "https",
											"host": [
												"api",
												"twitter",
												"com"
											],
											"path": [
												"2",
												"users",
												"by"
											],
											"query": [
												{
													"key": "usernames",
													"value": "twitterrrrrrr,twitterdevvvvvv,twitterapiiiii,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign",
													"description": "Required. Enter up to 100 comma-separated usernames."
												},
												{
													"key": "user.fields",
													"value": null,
													"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
													"disabled": true
												},
												{
													"key": "expansions",
													"value": null,
													"description": "pinned_tweet_id",
													"disabled": true
												},
												{
													"key": "tweet.fields",
													"value": null,
													"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-disposition",
											"value": "attachment; filename=json.json"
										},
										{
											"key": "content-encoding",
											"value": "gzip"
										},
										{
											"key": "content-length",
											"value": "396"
										},
										{
											"key": "content-type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "date",
											"value": "Tue, 30 Jun 2020 17:21:52 GMT"
										},
										{
											"key": "server",
											"value": "tsa_b"
										},
										{
											"key": "strict-transport-security",
											"value": "max-age=631138519"
										},
										{
											"key": "x-access-level",
											"value": "read"
										},
										{
											"key": "x-connection-hash",
											"value": "857207159289071cdd445778e071a674"
										},
										{
											"key": "x-content-type-options",
											"value": "nosniff"
										},
										{
											"key": "x-frame-options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "x-rate-limit-limit",
											"value": "15"
										},
										{
											"key": "x-rate-limit-remaining",
											"value": "2"
										},
										{
											"key": "x-rate-limit-reset",
											"value": "1593538196"
										},
										{
											"key": "x-response-time",
											"value": "99"
										},
										{
											"key": "x-xss-protection",
											"value": "0"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"id\": \"495309159\",\n            \"name\": \"Twitter New York City\",\n            \"username\": \"TwitterNYC\"\n        },\n        {\n            \"id\": \"172020392\",\n            \"name\": \"Twitter San Francisco\",\n            \"username\": \"TwitterSF\"\n        },\n        {\n            \"id\": \"95731075\",\n            \"name\": \"Twitter Safety\",\n            \"username\": \"TwitterSafety\"\n        },\n        {\n            \"id\": \"2548985366\",\n            \"name\": \"Twitter Blackbirds\",\n            \"username\": \"Blackbirds\"\n        },\n        {\n            \"id\": \"277761722\",\n            \"name\": \"Twitter UK\",\n            \"username\": \"TwitterUK\"\n        },\n        {\n            \"id\": \"17874544\",\n            \"name\": \"Twitter Support\",\n            \"username\": \"TwitterSupport\"\n        },\n        {\n            \"id\": \"300392950\",\n            \"name\": \"Twitter Sports\",\n            \"username\": \"TwitterSports\"\n        },\n        {\n            \"id\": \"87532773\",\n            \"name\": \"Twitter Design\",\n            \"username\": \"TwitterDesign\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with usernames: [twitterrrrrrr].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterrrrrrr\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        },\n        {\n            \"detail\": \"Could not find user with usernames: [twitterdevvvvvv].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterdevvvvvv\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        },\n        {\n            \"detail\": \"Could not find user with usernames: [twitterapiiiii].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterapiiiii\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"description": "This folder shows how you can get Twitter, location , and weather data in one single GET request and visualize in a single request\n\n**GET** All Users, Location & Weather & Visualize\n\n*   Get all users in query param from environment variable file. Users are in comma separated list. Create initial user object for all users\n*   Tests\n    *   For each remaining user use `pm.sendRequest()` to send PositionStack API within test to get longitude and latitude for each user\n    *   For each remaining user use `pm.sendRequest()` to send Open Weather API within test with longitude and latitude of previous request to get weather\n    *   Build object for each user with longitude, latitude, and weather\n    *   Parse response for name , location, latitude, longitude and weather"
				}
			],
			"description": "This folder shows how you can consolidate the individual Postman requests by sending APIs and building objects within test scripts for each Postman request. You can do this in three two and one postman request where you capture data from APIs as well as visualize data. The idea here is to consolidate as much as possible by [sending requests from scripts](https://learning.postman.com/docs/writing-scripts/script-references/postman-sandbox-api-reference/#sending-requests-from-scripts) in tests using the `pm.sendRequest()` method\n\n*   **Three Postman Requests**  \n    Instead of calling each API individually, this folder shows how you can use the [Twitter Users by Username](https://www.postman.com/twitter/workspace/twitter-s-public-workspace/request/9956214-f116b1dc-0f6a-4b0b-8433-8b344654e67e) to get location data for multiple users in a single postman request. The second request in the folder `PositionStack API - All locations` gets both location and weather data for all users in a single Postman request. The third request `Postmanauts - Visualize` visualizes on a geo map.\n    \n\n*   **Two Postman Requests**  \n    This folder shows how you can get Twitter, location , and weather data in one single GET request `All Users and Location`. Once you have all data you can visualize on geo map `Postmanauts - Visualize`\n    \n\n*   **One Postman Request**  \n    This folder shows how you can get Twitter, location , and weather data in one single GET request and visualize in a single request"
		},
		{
			"name": "Using Request Workflows",
			"item": [
				{
					"name": "All Twitter Users by List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse response data",
									"let response = pm.response.json().data;",
									"",
									"// Create array of users",
									"let userList =[];",
									"",
									"// create object for each user from response",
									"response.map(twitterObj=>{",
									"let obj= { ",
									"     name : twitterObj.name,",
									"     location:twitterObj.location,",
									"     latitude: null,",
									"     longitude: null",
									"    }",
									"    userList.push(obj);       ",
									"});",
									"",
									"// set users object for environment variable ",
									"pm.environment.set(\"user_list\", JSON.stringify(userList));",
									"",
									"// book keeping for next request",
									"pm.globals.set(\"index\", 0);",
									"pm.globals.set(\"location\", userList[0].location);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.twitter.com/2/users/by?usernames={{usernames}}&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
							"protocol": "https",
							"host": [
								"api",
								"twitter",
								"com"
							],
							"path": [
								"2",
								"users",
								"by"
							],
							"query": [
								{
									"key": "usernames",
									"value": "{{usernames}}",
									"description": "Required. Enter up to 100 comma-separated usernames."
								},
								{
									"key": "user.fields",
									"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"description": "Comma-separated fields for the user object.\n\nAllowed values:\ncreated_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld\n\nDefault values:\nid,name,username"
								},
								{
									"key": "expansions",
									"value": "",
									"description": "Expansions enable requests to expand an ID into a full object in the includes response object.\n\nAllowed value:\npinned_tweet_id\n\nDefault value: none",
									"disabled": true
								},
								{
									"key": "tweet.fields",
									"value": "",
									"description": "Comma-separated list of fields for the Tweet object. Expansion required.\n\nAllowed values:\nattachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,reply_settings,source,text,withheld\n\nDefault values:\nid,text\n\nOAuth1.0a User Context authorization required if any of the following fields are included in the request:\nnon_public_metrics,organic_metrics,promoted_metrics",
									"disabled": true
								}
							]
						},
						"description": "This endpoint returns details about up to 100 users specified by username. \n\nFor full details, see the [API reference](https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by) for this endpoint."
					},
					"response": [
						{
							"name": "200 Success - Request Fields for Users and Expanded Pinned Tweet",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld&expansions=pinned_tweet_id&tweet.fields=attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by"
									],
									"query": [
										{
											"key": "usernames",
											"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf",
											"description": "Required."
										},
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "pinned_tweet_id",
											"description": "pinned_tweet_id"
										},
										{
											"key": "tweet.fields",
											"value": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld",
											"description": "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,possibly_sensitive,referenced_tweets,source,text,withheld"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1748"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 16:32:49 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "eae8bea11e85fe49e732de33763f0cf2"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "1"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593189419"
								},
								{
									"key": "x-response-time",
									"value": "110"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2007-02-20T14:35:54.000Z\",\n            \"description\": \"Black queer lives matter.\\nBlack trans lives matter.\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/TAXQpspyHn\",\n                            \"expanded_url\": \"https://about.twitter.com/\",\n                            \"display_url\": \"about.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 52,\n                            \"end\": 69,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"783214\",\n            \"location\": \"Everywhere\",\n            \"name\": \"Twitter\",\n            \"pinned_tweet_id\": \"1274087687469715457\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1270500941498912768/W-80pLvu_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/TAXQpspyHn\",\n            \"username\": \"Twitter\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2013-12-14T04:35:55.000Z\",\n            \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/3ZX3TNiZCY\",\n                            \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                            \"display_url\": \"developer.twitter.com/en/community\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 23,\n                            \"end\": 30,\n                            \"tag\": \"DevRel\"\n                        },\n                        {\n                            \"start\": 113,\n                            \"end\": 130,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"2244994945\",\n            \"location\": \"127.0.0.1\",\n            \"name\": \"Twitter Dev\",\n            \"pinned_tweet_id\": \"1255542774432063488\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/3ZX3TNiZCY\",\n            \"username\": \"TwitterDev\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2007-05-23T06:01:13.000Z\",\n            \"description\": \"The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/8IkCzCDr19\",\n                            \"expanded_url\": \"https://developer.twitter.com\",\n                            \"display_url\": \"developer.twitter.com\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"6253282\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter API\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/942858479592554497/BbazLO9L_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/8IkCzCDr19\",\n            \"username\": \"TwitterAPI\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2012-02-17T20:40:28.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/UFN8PpMrxw\",\n                            \"expanded_url\": \"https://careers.twitter.com/content/careers-twitter/en/jobs.html#location=careers-twitter%3Alocation\",\n                            \"display_url\": \"careers.twitter.com/content/career…\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"495309159\",\n            \"location\": \"New York, NY\",\n            \"name\": \"Twitter New York City\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1016781101011034115/p0Ie-_Dr_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/UFN8PpMrxw\",\n            \"username\": \"TwitterNYC\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2010-07-28T18:40:01.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/MQRffLoRTw\",\n                            \"expanded_url\": \"https://careers.twitter.com/\",\n                            \"display_url\": \"careers.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"172020392\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter San Francisco\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/875159529008226305/7jXeHhZC_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/MQRffLoRTw\",\n            \"username\": \"TwitterSF\",\n            \"verified\": true\n        }\n    ],\n    \"includes\": {\n        \"tweets\": [\n            {\n                \"attachments\": {\n                    \"media_keys\": [\n                        \"3_1274086027544498176\"\n                    ]\n                },\n                \"author_id\": \"783214\",\n                \"conversation_id\": \"1274087687469715457\",\n                \"created_at\": \"2020-06-19T21:12:30.000Z\",\n                \"entities\": {\n                    \"mentions\": [\n                        {\n                            \"start\": 17,\n                            \"end\": 29,\n                            \"username\": \"FredTJoseph\"\n                        }\n                    ],\n                    \"urls\": [\n                        {\n                            \"start\": 30,\n                            \"end\": 53,\n                            \"url\": \"https://t.co/lNTOkyguG1\",\n                            \"expanded_url\": \"https://twitter.com/Twitter/status/1274087687469715457/photo/1\",\n                            \"display_url\": \"pic.twitter.com/lNTOkyguG1\"\n                        }\n                    ]\n                },\n                \"id\": \"1274087687469715457\",\n                \"lang\": \"et\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"📍 Minneapolis\\n🗣️ @FredTJoseph https://t.co/lNTOkyguG1\"\n            },\n            {\n                \"author_id\": \"2244994945\",\n                \"conversation_id\": \"1255542774432063488\",\n                \"created_at\": \"2020-04-29T17:01:38.000Z\",\n                \"entities\": {\n                    \"urls\": [\n                        {\n                            \"start\": 264,\n                            \"end\": 287,\n                            \"url\": \"https://t.co/BPqMcQzhId\",\n                            \"expanded_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\",\n                            \"display_url\": \"blog.twitter.com/developer/en_u…\",\n                            \"images\": [\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=orig\",\n                                    \"width\": 1600,\n                                    \"height\": 600\n                                },\n                                {\n                                    \"url\": \"https://pbs.twimg.com/news_img/1274730688919613440/SEsqlE16?format=jpg&name=150x150\",\n                                    \"width\": 150,\n                                    \"height\": 150\n                                }\n                            ],\n                            \"status\": 200,\n                            \"title\": \"Enabling study of the public conversation in a time of crisis\",\n                            \"description\": \"To further support our company’s ongoing efforts, we want to enable developers and researchers to study the public conversation on COVID-19 in real-time.\",\n                            \"unwound_url\": \"https://blog.twitter.com/developer/en_us/topics/tools/2020/covid19_public_conversation_data.html\"\n                        }\n                    ]\n                },\n                \"id\": \"1255542774432063488\",\n                \"lang\": \"en\",\n                \"possibly_sensitive\": false,\n                \"source\": \"Twitter Web App\",\n                \"text\": \"During these unprecedented times, what’s happening on Twitter can help the world better understand &amp; respond to the pandemic. \\n\\nWe're launching a free COVID-19 stream endpoint so qualified devs &amp; researchers can study the public conversation in real-time. https://t.co/BPqMcQzhId\"\n            }\n        ]\n    }\n}"
						},
						{
							"name": "429 Rate Limit Exceeded",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by?usernames=jack,twitterdev",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by"
									],
									"query": [
										{
											"key": "usernames",
											"value": "jack,twitterdev"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "46"
								},
								{
									"key": "content-type",
									"value": "text/plain;charset=utf-8"
								},
								{
									"key": "date",
									"value": "Wed, 24 Jun 2020 17:16:16 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-connection-hash",
									"value": "86a90a7aa13fde1840d52be0d1faf5c4"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "0"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593019345"
								},
								{
									"key": "x-response-time",
									"value": "7"
								}
							],
							"cookie": [],
							"body": "Rate limit exceeded\n"
						},
						{
							"name": "200 Success - Default Payload",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by"
									],
									"query": [
										{
											"key": "usernames",
											"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1222"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Tue, 30 Jun 2020 16:41:09 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "7a7652a95e302d19d13b9444dd88cb49"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "12"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593535752"
								},
								{
									"key": "x-response-time",
									"value": "168"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": \"783214\",\n            \"name\": \"Twitter\",\n            \"username\": \"Twitter\"\n        },\n        {\n            \"id\": \"2244994945\",\n            \"name\": \"Twitter Dev\",\n            \"username\": \"TwitterDev\"\n        },\n        {\n            \"id\": \"6253282\",\n            \"name\": \"Twitter API\",\n            \"username\": \"TwitterAPI\"\n        },\n        {\n            \"id\": \"495309159\",\n            \"name\": \"Twitter New York City\",\n            \"username\": \"TwitterNYC\"\n        },\n        {\n            \"id\": \"172020392\",\n            \"name\": \"Twitter San Francisco\",\n            \"username\": \"TwitterSF\"\n        },\n        {\n            \"id\": \"95731075\",\n            \"name\": \"Twitter Safety\",\n            \"username\": \"TwitterSafety\"\n        },\n        {\n            \"id\": \"2548985366\",\n            \"name\": \"Twitter Blackbirds\",\n            \"username\": \"Blackbirds\"\n        },\n        {\n            \"id\": \"277761722\",\n            \"name\": \"Twitter UK\",\n            \"username\": \"TwitterUK\"\n        },\n        {\n            \"id\": \"17874544\",\n            \"name\": \"Twitter Support\",\n            \"username\": \"TwitterSupport\"\n        },\n        {\n            \"id\": \"300392950\",\n            \"name\": \"Twitter Sports\",\n            \"username\": \"TwitterSports\"\n        },\n        {\n            \"id\": \"87532773\",\n            \"name\": \"Twitter Design\",\n            \"username\": \"TwitterDesign\"\n        },\n        {\n            \"id\": \"372575989\",\n            \"name\": \"Twitter News\",\n            \"username\": \"TwitterNews\"\n        },\n        {\n            \"id\": \"3260518932\",\n            \"name\": \"Twitter Moments\",\n            \"username\": \"TwitterMoments\"\n        },\n        {\n            \"id\": \"121291606\",\n            \"name\": \"Twitter Business\",\n            \"username\": \"TwitterBusiness\"\n        },\n        {\n            \"id\": \"158079127\",\n            \"name\": \"Twitter Nonprofits\",\n            \"username\": \"Nonprofits\"\n        },\n        {\n            \"id\": \"3282859598\",\n            \"name\": \"Twitter Video\",\n            \"username\": \"TwitterVideo\"\n        },\n        {\n            \"id\": \"103770785\",\n            \"name\": \"Twitter India\",\n            \"username\": \"TwitterIndia\"\n        },\n        {\n            \"id\": \"586198217\",\n            \"name\": \"Twitter TV\",\n            \"username\": \"TwitterTV\"\n        },\n        {\n            \"id\": \"216531294\",\n            \"name\": \"Twitter Korea\",\n            \"username\": \"TwitterKorea\"\n        },\n        {\n            \"id\": \"1526228120\",\n            \"name\": \"Twitter Data\",\n            \"username\": \"TwitterData\"\n        },\n        {\n            \"id\": \"222953824\",\n            \"name\": \"TwitterGov\",\n            \"username\": \"TwitterGov\"\n        },\n        {\n            \"id\": \"1603818258\",\n            \"name\": \"Twitter Investor Relations\",\n            \"username\": \"TwitterIR\"\n        },\n        {\n            \"id\": \"2548979088\",\n            \"name\": \"Twitter Alas\",\n            \"username\": \"TwitterAlas\"\n        },\n        {\n            \"id\": \"2244983430\",\n            \"name\": \"Twitter Singapore\",\n            \"username\": \"TwitterSG\"\n        },\n        {\n            \"id\": \"1347713256\",\n            \"name\": \"Twitter Canada\",\n            \"username\": \"TwitterCanada\"\n        },\n        {\n            \"id\": \"376825877\",\n            \"name\": \"Twitter Open Source\",\n            \"username\": \"TwitterOSS\"\n        },\n        {\n            \"id\": \"6844292\",\n            \"name\": \"Twitter Engineering\",\n            \"username\": \"TwitterEng\"\n        },\n        {\n            \"id\": \"738118115595165697\",\n            \"name\": \"Twitter Stripes\",\n            \"username\": \"TwitterStripes\"\n        },\n        {\n            \"id\": \"738118487122419712\",\n            \"name\": \"Twitter Asians\",\n            \"username\": \"TwitterAsians\"\n        },\n        {\n            \"id\": \"218984871\",\n            \"name\": \"Twitter Public Policy\",\n            \"username\": \"Policy\"\n        },\n        {\n            \"id\": \"2550997820\",\n            \"name\": \"Twitter Indonesia\",\n            \"username\": \"TwitterID\"\n        },\n        {\n            \"id\": \"1159458169\",\n            \"name\": \"Twitter 政治\",\n            \"username\": \"TwitterGovJP\"\n        },\n        {\n            \"id\": \"2296297326\",\n            \"name\": \"Twitter Moments UK & Ireland\",\n            \"username\": \"UKMoments\"\n        },\n        {\n            \"id\": \"234489024\",\n            \"name\": \"Twitter Comms\",\n            \"username\": \"TwitterComms\"\n        },\n        {\n            \"id\": \"3873936134\",\n            \"name\": \"Twitter Gaming @ home\",\n            \"username\": \"TwitterGaming\"\n        },\n        {\n            \"id\": \"2228891959\",\n            \"name\": \"Twitter MENA\",\n            \"username\": \"TwitterMENA\"\n        },\n        {\n            \"id\": \"791978718\",\n            \"name\": \"Twitter Official Partner\",\n            \"username\": \"OfficialPartner\"\n        },\n        {\n            \"id\": \"427475002\",\n            \"name\": \"Twitter Books\",\n            \"username\": \"TwitterBooks\"\n        },\n        {\n            \"id\": \"1194267639100723200\",\n            \"name\": \"Twitter Retweets\",\n            \"username\": \"TwitterRetweets\"\n        },\n        {\n            \"id\": \"1168976680867762177\",\n            \"name\": \"Twitter Able\",\n            \"username\": \"TwitterAble\"\n        },\n        {\n            \"id\": \"905409822\",\n            \"name\": \"Twitter SRE\",\n            \"username\": \"TwitterSRE\"\n        },\n        {\n            \"id\": \"738115375477362688\",\n            \"name\": \"Twitter Moments India\",\n            \"username\": \"MomentsIndia\"\n        },\n        {\n            \"id\": \"88723966\",\n            \"name\": \"Twitter Seguro\",\n            \"username\": \"TwitterSeguro\"\n        },\n        {\n            \"id\": \"1049385226424786944\",\n            \"name\": \"Twitter Miami\",\n            \"username\": \"TwitterMiami\"\n        },\n        {\n            \"id\": \"284201599\",\n            \"name\": \"Twitter Terns\",\n            \"username\": \"terns\"\n        },\n        {\n            \"id\": \"1705676064\",\n            \"name\": \"Twitter公式採用アカウント\",\n            \"username\": \"JoinTheFlockJP\"\n        },\n        {\n            \"id\": \"2861317614\",\n            \"name\": \"Twitter ファッション\",\n            \"username\": \"TwitterFashnJP\"\n        },\n        {\n            \"id\": \"3873965293\",\n            \"name\": \"Twitter Moments en Español\",\n            \"username\": \"MomentsES\"\n        },\n        {\n            \"id\": \"1244731491088809984\",\n            \"name\": \"Twitter Thailand\",\n            \"username\": \"TwitterThailand\"\n        },\n        {\n            \"id\": \"4172587277\",\n            \"name\": \"Twitter Moments Brasil\",\n            \"username\": \"MomentsBrasil\"\n        },\n        {\n            \"id\": \"717465714357972992\",\n            \"name\": \"Twitter Video India\",\n            \"username\": \"TwitterVideoIN\"\n        },\n        {\n            \"id\": \"862314223\",\n            \"name\": \"Twitter ミュージック\",\n            \"username\": \"TwitterMusicJP\"\n        },\n        {\n            \"id\": \"2551000568\",\n            \"name\": \"Twitter Mktg Latam\",\n            \"username\": \"TwitterMktLatam\"\n        },\n        {\n            \"id\": \"2548977510\",\n            \"name\": \"Twitter Careers Brasil\",\n            \"username\": \"JoinTheFlockBR\"\n        },\n        {\n            \"id\": \"1159274324\",\n            \"name\": \"Twitter スポーツ\",\n            \"username\": \"TwitterSportsJP\"\n        }\n    ]\n}"
						},
						{
							"name": "200 Success - Request User Fields",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf&user.fields=created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by"
									],
									"query": [
										{
											"key": "usernames",
											"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf",
											"description": "Required."
										},
										{
											"key": "user.fields",
											"value": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld",
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,url,username,verified,withheld"
										},
										{
											"key": "expansions",
											"value": "",
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": "",
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "1027"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Fri, 26 Jun 2020 16:39:42 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "eae8bea11e85fe49e732de33763f0cf2"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "13"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593190457"
								},
								{
									"key": "x-response-time",
									"value": "72"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"created_at\": \"2007-02-20T14:35:54.000Z\",\n            \"description\": \"Black queer lives matter.\\nBlack trans lives matter.\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/TAXQpspyHn\",\n                            \"expanded_url\": \"https://about.twitter.com/\",\n                            \"display_url\": \"about.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 52,\n                            \"end\": 69,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"783214\",\n            \"location\": \"Everywhere\",\n            \"name\": \"Twitter\",\n            \"pinned_tweet_id\": \"1274087687469715457\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1270500941498912768/W-80pLvu_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/TAXQpspyHn\",\n            \"username\": \"Twitter\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2013-12-14T04:35:55.000Z\",\n            \"description\": \"The voice of Twitter's #DevRel team, and your official source for updates, news, & events about Twitter's API. \\n\\n#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/3ZX3TNiZCY\",\n                            \"expanded_url\": \"https://developer.twitter.com/en/community\",\n                            \"display_url\": \"developer.twitter.com/en/community\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 23,\n                            \"end\": 30,\n                            \"tag\": \"DevRel\"\n                        },\n                        {\n                            \"start\": 113,\n                            \"end\": 130,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"2244994945\",\n            \"location\": \"127.0.0.1\",\n            \"name\": \"Twitter Dev\",\n            \"pinned_tweet_id\": \"1255542774432063488\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1267175364003901441/tBZNFAgA_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/3ZX3TNiZCY\",\n            \"username\": \"TwitterDev\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2007-05-23T06:01:13.000Z\",\n            \"description\": \"The Real Twitter API. Tweets about API changes, service issues and our Developer Platform. Don't get an answer? It's on my website.\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/8IkCzCDr19\",\n                            \"expanded_url\": \"https://developer.twitter.com\",\n                            \"display_url\": \"developer.twitter.com\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"6253282\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter API\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/942858479592554497/BbazLO9L_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/8IkCzCDr19\",\n            \"username\": \"TwitterAPI\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2012-02-17T20:40:28.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/UFN8PpMrxw\",\n                            \"expanded_url\": \"https://careers.twitter.com/content/careers-twitter/en/jobs.html#location=careers-twitter%3Alocation\",\n                            \"display_url\": \"careers.twitter.com/content/career…\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"495309159\",\n            \"location\": \"New York, NY\",\n            \"name\": \"Twitter New York City\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/1016781101011034115/p0Ie-_Dr_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/UFN8PpMrxw\",\n            \"username\": \"TwitterNYC\",\n            \"verified\": true\n        },\n        {\n            \"created_at\": \"2010-07-28T18:40:01.000Z\",\n            \"description\": \"#BlackLivesMatter\",\n            \"entities\": {\n                \"url\": {\n                    \"urls\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 23,\n                            \"url\": \"https://t.co/MQRffLoRTw\",\n                            \"expanded_url\": \"https://careers.twitter.com/\",\n                            \"display_url\": \"careers.twitter.com\"\n                        }\n                    ]\n                },\n                \"description\": {\n                    \"hashtags\": [\n                        {\n                            \"start\": 0,\n                            \"end\": 17,\n                            \"tag\": \"BlackLivesMatter\"\n                        }\n                    ]\n                }\n            },\n            \"id\": \"172020392\",\n            \"location\": \"San Francisco, CA\",\n            \"name\": \"Twitter San Francisco\",\n            \"profile_image_url\": \"https://pbs.twimg.com/profile_images/875159529008226305/7jXeHhZC_normal.jpg\",\n            \"protected\": false,\n            \"url\": \"https://t.co/MQRffLoRTw\",\n            \"username\": \"TwitterSF\",\n            \"verified\": true\n        }\n    ]\n}"
						},
						{
							"name": "400 Bad Request - Too Many Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by?usernames=twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by"
									],
									"query": [
										{
											"key": "usernames",
											"value": "twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp",
											"description": "Required. Enter up to 100 comma-separated usernames."
										},
										{
											"key": "user.fields",
											"value": null,
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": null,
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": null,
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "457"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Tue, 30 Jun 2020 17:22:45 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "857207159289071cdd445778e071a674"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "1"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593538196"
								},
								{
									"key": "x-response-time",
									"value": "20"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"parameters\": {\n                \"usernames\": [\n                    \"twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp,twitter,twitterdev,twitterapi,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign,twitternews,twittermoments,twitterbusiness,nonprofits,twittervideo,twitterindia,twittertv,twitterkorea,twitterdata,twittergov,twitterir,twitteralas,twittersg,twittercanada,twitteross,twittereng,twitterstripes,twitterasians,policy,twitterid,twittergovjp,ukmoments,twittercomms,twittergaming,twittermena,officialpartner,twitterbooks,twitterretweets,twitterable,twittersre,momentsindia,twitterseguro,twittermiami,terns,jointheflockjp,twitterfashnjp,momentses,twitterthailand,momentsbrasil,twittervideoin,twittermusicjp,twittermktlatam,jointheflockbr,twittersportsjp\"\n                ]\n            },\n            \"message\": \"size [110] is not between 1 and 100\"\n        }\n    ],\n    \"title\": \"Invalid Request\",\n    \"detail\": \"One or more parameters to your request was invalid.\",\n    \"type\": \"https://api.twitter.com/2/problems/invalid-request\"\n}"
						},
						{
							"name": "200 Success - Some Users Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.twitter.com/2/users/by?usernames=twitterrrrrrr,twitterdevvvvvv,twitterapiiiii,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign",
									"protocol": "https",
									"host": [
										"api",
										"twitter",
										"com"
									],
									"path": [
										"2",
										"users",
										"by"
									],
									"query": [
										{
											"key": "usernames",
											"value": "twitterrrrrrr,twitterdevvvvvv,twitterapiiiii,twitternyc,twittersf,twittersafety,blackbirds,twitteruk,twittersupport,twittersports,twitterdesign",
											"description": "Required. Enter up to 100 comma-separated usernames."
										},
										{
											"key": "user.fields",
											"value": null,
											"description": "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld",
											"disabled": true
										},
										{
											"key": "expansions",
											"value": null,
											"description": "pinned_tweet_id",
											"disabled": true
										},
										{
											"key": "tweet.fields",
											"value": null,
											"description": "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,non_public_metrics,organic_metrics,possibly_sensitive,promoted_metrics,public_metrics,referenced_tweets,source,text,withheld",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-disposition",
									"value": "attachment; filename=json.json"
								},
								{
									"key": "content-encoding",
									"value": "gzip"
								},
								{
									"key": "content-length",
									"value": "396"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "date",
									"value": "Tue, 30 Jun 2020 17:21:52 GMT"
								},
								{
									"key": "server",
									"value": "tsa_b"
								},
								{
									"key": "strict-transport-security",
									"value": "max-age=631138519"
								},
								{
									"key": "x-access-level",
									"value": "read"
								},
								{
									"key": "x-connection-hash",
									"value": "857207159289071cdd445778e071a674"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-frame-options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "x-rate-limit-limit",
									"value": "15"
								},
								{
									"key": "x-rate-limit-remaining",
									"value": "2"
								},
								{
									"key": "x-rate-limit-reset",
									"value": "1593538196"
								},
								{
									"key": "x-response-time",
									"value": "99"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": \"495309159\",\n            \"name\": \"Twitter New York City\",\n            \"username\": \"TwitterNYC\"\n        },\n        {\n            \"id\": \"172020392\",\n            \"name\": \"Twitter San Francisco\",\n            \"username\": \"TwitterSF\"\n        },\n        {\n            \"id\": \"95731075\",\n            \"name\": \"Twitter Safety\",\n            \"username\": \"TwitterSafety\"\n        },\n        {\n            \"id\": \"2548985366\",\n            \"name\": \"Twitter Blackbirds\",\n            \"username\": \"Blackbirds\"\n        },\n        {\n            \"id\": \"277761722\",\n            \"name\": \"Twitter UK\",\n            \"username\": \"TwitterUK\"\n        },\n        {\n            \"id\": \"17874544\",\n            \"name\": \"Twitter Support\",\n            \"username\": \"TwitterSupport\"\n        },\n        {\n            \"id\": \"300392950\",\n            \"name\": \"Twitter Sports\",\n            \"username\": \"TwitterSports\"\n        },\n        {\n            \"id\": \"87532773\",\n            \"name\": \"Twitter Design\",\n            \"username\": \"TwitterDesign\"\n        }\n    ],\n    \"errors\": [\n        {\n            \"detail\": \"Could not find user with usernames: [twitterrrrrrr].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterrrrrrr\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        },\n        {\n            \"detail\": \"Could not find user with usernames: [twitterdevvvvvv].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterdevvvvvv\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        },\n        {\n            \"detail\": \"Could not find user with usernames: [twitterapiiiii].\",\n            \"title\": \"Not Found Error\",\n            \"resource_type\": \"user\",\n            \"parameter\": \"usernames\",\n            \"value\": \"twitterapiiiii\",\n            \"type\": \"https://api.twitter.com/2/problems/resource-not-found\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Lat/Long from Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// parse API response",
									"let response = pm.response.json();",
									"let lat = response.data[0].latitude;",
									"let long =response.data[0].longitude;",
									"",
									"// parse user_list env variable",
									"let userList = JSON.parse(pm.environment.get(\"user_list\"));",
									"",
									"// get current index",
									"const currentIndex = pm.globals.get(\"index\");",
									"const lenUserList = userList.length;",
									"",
									"if (currentIndex < lenUserList) {",
									"",
									"    // Set lat & long from response",
									"    userList[currentIndex].latitude = lat;",
									"    userList[currentIndex].longitude = long;",
									"    pm.environment.set(\"user_list\", JSON.stringify(userList));",
									"    ",
									"    // update index & location",
									"    pm.globals.set(\"index\", currentIndex + 1);",
									"",
									"    if (currentIndex < lenUserList - 1){",
									"        pm.globals.set(\"location\", userList[currentIndex + 1].location);",
									"    }",
									"",
									"    // Set next request",
									"    postman.setNextRequest(\"Lat/Long from Location\");",
									"}",
									"else{",
									"    // reset global index back to zero",
									"    // and the initial value of lon/lat",
									"    pm.globals.set(\"index\", 0);",
									"    pm.globals.set(\"lon\", userList[0].longitude);",
									"    pm.globals.set(\"lat\", userList[0].latitude);",
									"",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://api.positionstack.com/v1/forward?access_key={{api-access-key}}&query={{location}}",
							"protocol": "http",
							"host": [
								"api",
								"positionstack",
								"com"
							],
							"path": [
								"v1",
								"forward"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{api-access-key}}"
								},
								{
									"key": "query",
									"value": "{{location}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Weather from Lat/Long",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// parse API response",
									"let response = pm.response.json();",
									"let main = response.weather[0].main;",
									"",
									"// parse user_list env variable",
									"let userList = JSON.parse(pm.environment.get(\"user_list\"));",
									"",
									"// get current index",
									"const currentIndex = pm.globals.get(\"index\");",
									"const lenUserList = userList.length;",
									"",
									"if (currentIndex < lenUserList) {",
									"",
									"    // Set weather",
									"    userList[currentIndex].weather = main;",
									"    pm.environment.set(\"user_list\", JSON.stringify(userList));",
									"    ",
									"    // update index & lat/long",
									"    pm.globals.set(\"index\", currentIndex + 1);",
									"",
									"    if (currentIndex < lenUserList - 1){",
									"        pm.globals.set(\"lat\", userList[currentIndex + 1].latitude);",
									"        pm.globals.set(\"lon\", userList[currentIndex + 1].longitude);",
									"    }",
									"",
									"    // Set next request",
									"    postman.setNextRequest(\"Weather from Lat/Long\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.openweathermap.org/data/2.5/weather?lat={{lat}}&lon={{lon}}&appid={{weather_api_key}}",
							"protocol": "https",
							"host": [
								"api",
								"openweathermap",
								"org"
							],
							"path": [
								"data",
								"2.5",
								"weather"
							],
							"query": [
								{
									"key": "lat",
									"value": "{{lat}}"
								},
								{
									"key": "lon",
									"value": "{{lon}}"
								},
								{
									"key": "appid",
									"value": "{{weather_api_key}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Postmanauts - Visualize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var template = `",
									"<script src=\"https://d3js.org/d3.v5.min.js\"></script>",
									"<script src=\"https://unpkg.com/topojson@3\"></script>",
									"",
									"<style>",
									"body { ",
									"    background-color: white;",
									"}",
									".title { ",
									"    font-size: 30px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    text-align: center;",
									"}",
									".container {",
									"    display: flex;",
									"    flex-direction: row;",
									"    justify-content: center;",
									"    align-items: center;",
									"}",
									".directions {",
									"    font-size: 18px;",
									"    font-family: \"Roboto\", sans-serif;",
									"    padding-left: 20px;",
									"}",
									"#backgroundRectangle {",
									"    width: 100%;",
									"    height: 100%;",
									"    fill: #f5f5f5;",
									"}",
									".projectionOutline{",
									"    fill: #2f434a;",
									"    stroke: #4e5f66",
									"}",
									".tooltip {",
									"    position: absolute;",
									"    font-size: 12px;",
									"    width: auto;",
									"    height: auto;",
									"    pointer-events: none;",
									"    background-color: white;",
									"    padding: 3px;",
									"}",
									"",
									"</style>",
									"<h1 class=\"title\"></h1>",
									"<div class=\"container\">",
									"<div id=\"map\"></div>",
									"<p class=\"directions\">Draw mouse to zoom in onto section. Double click to zoom out</p>",
									"</div>",
									"<script>",
									"",
									"    pm.getData( function(err, value) {",
									"        d3.select(\".title\").html(value.title);",
									"        initVisualization(value.data);",
									"    });",
									"",
									"    // Function call that contains our visualization, necessary because we are loading an external map file",
									"    async function initVisualization(pmInput){",
									"        const response = await fetch(\"https://unpkg.com/world-atlas@1.1.4/world/110m.json\");",
									"        response.json().then( data => {",
									"            generateVisualization(pmInput, data);",
									"        });",
									"    }",
									"    ",
									"    // Generates d3 map visualization using an external map file and user-inputed data",
									"    // Utilizes d3.zoom and d3.brush",
									"    function generateVisualization(pmInput, mapData){",
									"        // Set the dimensions and margins of the graph",
									"        const margins = {top: 20, left: 10, right: 20, bottom: 20};",
									"        const width = 800 - margins.top - margins.bottom;",
									"        const height = 500 - margins.left - margins.right;",
									"        ",
									"        // Initializes d3.zoom to cover entire map SVG",
									"        const zoom = d3.zoom()",
									"            .scaleExtent([1,40])",
									"            .translateExtent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"zoom\", () =>{",
									"                d3.select(\"#map-group\").attr(\"transform\", d3.event.transform)",
									"            })",
									"        ",
									"        // Initiaizes d3.brush to cover entire map SVG and zoom in on the selected window",
									"        let brush = d3.brush()",
									"            .extent([[0,0],[width + margins.left + margins.right, height + margins.top + margins.bottom]])",
									"            .on(\"end\", () => {",
									"                let extent = d3.event.selection;",
									"                if(extent){",
									"                    d3.select(\"#map-group\").call(brush.move, null);",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( (width + margins.left + margins.right)/ (extent[1][0]-extent[0][0]) )",
									"                        .translate( -extent[0][0], -extent[0][1] ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => { return 2 * d.circleSize * (extent[1][0]-extent[0][0])/(width + margins.left + margins.right);} )",
									"                        .attr(\"stroke-width\", (extent[1][0]-extent[0][0])/(width + margins.left + margins.right));",
									"                    ",
									"                }",
									"                else{",
									"                    d3.select(\"#map-group\").transition().duration(1500).call(zoom.transform, d3.zoomIdentity",
									"                        .scale( 1 )",
									"                        .translate( 0,0 ));",
									"                    d3.selectAll(\"circle\").transition().delay(750).duration(1000)",
									"                        .attr(\"r\", d => d.circleSize)",
									"                        .attr(\"stroke-width\", 1);",
									"                }",
									"            });",
									"        ",
									"        // Set the dimensions and margins of the graph",
									"        let svg = d3.select(\"#map\")",
									"          .append(\"svg\")  ",
									"            .attr(\"width\", width + margins.left + margins.right)",
									"            .attr(\"height\", height + margins.top + margins.bottom)",
									"        svg.append(\"rect\")",
									"            .attr(\"id\", \"backgroundRectangle\");",
									"        svg = svg.append(\"g\")",
									"            .attr(\"id\", \"map-group\")",
									"            .call(brush);",
									"        ",
									"        // Draws Mercator projection of map onto SVG using the inputted map file",
									"        let projection = d3.geoMercator().translate([400, 350]).scale(125);",
									"        var mapGroup = svg.append(\"g\");",
									"        let mapPath = d3.geoPath().projection(projection);",
									"        mapGroup.selectAll(\"path\")",
									"            .data(topojson.feature(mapData, mapData.objects.countries).features)",
									"            .enter()",
									"          .append(\"path\")",
									"            .attr(\"d\", mapPath)",
									"            .attr(\"class\", \"projectionOutline\");",
									"        ",
									"        // Calculate offset for tooltip",
									"        const rect = document.getElementById(\"map\").getBoundingClientRect();",
									"        const offset = {top: rect.top, left: rect.left};",
									"        ",
									"        // Create hover tooltip",
									"        let tooltip = d3.select(\"#map\").append(\"div\")",
									"            .attr(\"class\", \"tooltip\");",
									"        // tooltip mouseover event handler",
									"        let tipMouseover = function(d){",
									"            tooltip.html(\"Name: <b>\"+ d.name + \"</b><br/>Location: <b>\" + d.location + \"</b><br/>Longitude: <b>\" + d.long + \"</b><br/>Latitude: <b>\" + d.lat + \"</b><br/>Weather: <b>\"+ d.weather + \"</b>\")",
									"                .style(\"left\", (d3.event.pageX + 15 - offset.left) + \"px\")",
									"                .style(\"top\", (d3.event.pageY - 20 - offset.top) + \"px\")",
									"              .transition()",
									"                .duration(200)      // ms",
									"                .style(\"opacity\", 0.9)",
									"            d3.select(this)",
									"                .style(\"stroke\", \"white\")",
									"                .style(\"opacity\", 1);",
									"        };",
									"        // tooltip mouseout event handler",
									"        let tipMouseout = function(d){",
									"            tooltip.transition()",
									"                .duration(300)",
									"                .style(\"opacity\", 0);",
									"            d3.select(this)",
									"                .style(\"stroke\", \"none\")",
									"                .style(\"opacity\", 0.6);",
									"        };",
									"",
									"        // Add pattern for custom postman logo",
									"        svg.append(\"defs\").append(\"pattern\")",
									"            .attr('id','pmImage')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr('patternUnits',\"userSpaceOnUse\")",
									"            .append('image')",
									"            .attr(\"width\", 12)",
									"            .attr(\"height\", 12)",
									"            .attr(\"xlink:href\",\"https://seeklogo.com/images/P/postman-logo-F43375A2EB-seeklogo.com.png\");",
									"",
									"        // Appends points from user-inputted data onto map",
									"        svg.selectAll(\"circle\")",
									"            .data(pmInput)",
									"            .enter()",
									"            .append(\"circle\")",
									"                .attr(\"r\", 0)",
									"                .style(\"fill\", d => d.color)",
									"                //.style(\"fill\", \"url(#pmImage)\")",
									"                .attr(\"cx\", d => projection([d.long, d.lat])[0])",
									"                .attr(\"cy\",  d => projection([d.long, d.lat])[1])",
									"                .style(\"opacity\", 0.6)",
									"                .on(\"mouseover\", tipMouseover)",
									"                .on(\"mouseout\", tipMouseout)",
									"                .transition(d3.transition().duration(1000).ease(d3.easeQuadOut))",
									"                .attr(\"r\", d => d.circleSize)",
									"    }",
									"</script>",
									"`;",
									"",
									"// get data from echo output",
									"var response = pm.response.json().data;",
									"let parsedData = [];",
									"",
									"//data parsing",
									"for (let postmanaut of response){",
									"    let tempEntry = {};",
									"    tempEntry.name = postmanaut.name;",
									"    tempEntry.location = postmanaut.location;",
									"    tempEntry.lat = postmanaut.latitude;",
									"    tempEntry.long = postmanaut.longitude;",
									"    tempEntry.weather = postmanaut.weather;",
									"    tempEntry.circleSize = 6;",
									"    tempEntry.color = \"#F09D51\";",
									"    parsedData.push(tempEntry);",
									"}",
									"",
									"pm.visualizer.set(template, {",
									"    data: parsedData,",
									"    title: \"Map of Postmanauts\"",
									"} );",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Parse users object from environment variable and set to collection variable to store in request body",
									"var postmanauts = JSON.parse(pm.environment.get(\"user_list\"));",
									"pm.collectionVariables.set('req_body', JSON.stringify(postmanauts));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{req_body}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://postman-echo.com/post",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"post"
							]
						}
					},
					"response": []
				}
			],
			"description": "Using Request WorkflowsThis folder shows how you can loop over the same request while changing the parameters using the Collection Runner and the `postman.setNextRequest()` function. In this scenario there is a template being built for each API request which can be executed based on the index of each of the usernames in environment variable `usernames`.\n\n**GET** All Twitter Users by List\n\n*   Gets data from all usernames provided in environment variable usernames\n*   Tests\n*   Creates an object for array of users called userList\n*   Object includes , name, location , latitude and longitude\n*   Sets global variable for book-keeping purposes for next request\n    \n\n![](https://paper-attachments.dropbox.com/s_AD281B316520C09F1096B254FB09504F70E93791D0FCC8B533E78BEB423AF80E_1651095463757_Screen+Shot+2022-04-27+at+5.37.13+PM.png)\n\n**GET** Lat/Long from Location\n\n*   Gets longitude and latitude data using the location from pervious request using the global location variable\n*   Adds longitude and latitude for each user as request is made.\n*   Uses `postman.setNextRequest(\"Lat/Long from Location\");` to call the same request over and over again until all users have latitude and longitude\n    \n\n**GET** Weather from Lat/Long\n\n*   Gets weather data using latitude and longitude from previous request using the global `lon` and `lat` variables\n*   Adds weather for each user as request is made\n*   Uses `postman.setNextRequest(\"Weather from Lat/Long\");` to call the same request over and over again until all users have weather data\n    \n\n**POST** Postmanauts - Visualize\n\n*   Pre-request → Read users environment variable and set object to request body through collection variable\n*   Test → Parse response for name , location, latitude, longitude and weather and visualizes\n    \n\nUse the collection runner to run this folder and then send **POST** request to visualize"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bearer_token",
			"value": "Enter your Twitter Bearer Token",
			"type": "string"
		},
		{
			"key": "req_body",
			"value": ""
		},
		{
			"key": "api-access-key",
			"value": "Enter your API key from PositionStack API"
		},
		{
			"key": "weather_api_key",
			"value": "Enter your API key from OpenWeather API"
		}
	]
}